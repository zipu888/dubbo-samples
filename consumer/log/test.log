[VAMS][2014-08-01 14:07:37,662] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:07:37,745] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,745] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,752] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,752] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,754] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,754] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:07:37,758] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:07:37,759] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:07:37 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:07:37,795] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,796] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,796] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:07:37,802] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:07:37,805] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:07:37,824] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:07:37,829] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:07:37,831] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:07:37,872] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:07:37,894] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:07:37,908] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:07:37,913] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:07:37,956] DEBUG | Loaded 5 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:07:37,956] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@12620b5: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,springContextUtil]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:07:37,979] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@def14f] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:07:37,983] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@13577ca] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:07:37,985] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1e881b6] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:07:37,987] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@12620b5: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,springContextUtil]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:07:37,987] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:37,988] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,002] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,121] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,121] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:38,122] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,122] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,125] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,126] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:38,126] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,187] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:07:38,306] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:07:38,320] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:07:38,328] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,342] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:07:38,343] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:07:38,344] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:07:38,348] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,349] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:38,350] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,350] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,350] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,351] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:38,351] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,351] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,352] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,353] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@123ce3f] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 14:07:38,355] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:07:38,359] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,359] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,359] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,360] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:07:38,362] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 14:07:38,362] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:07:38,362] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 14:07:38,362] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,363] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,363] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 14:07:38,363] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 14:07:38,363] INFO | Root WebApplicationContext: initialization completed in 698 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 14:11:30,708] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:11:30,790] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,791] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,796] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,797] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,798] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,799] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:11:30,803] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:11:30,803] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:11:30 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:11:30,837] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,838] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,838] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:11:30,845] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:11:30,847] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:11:30,864] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:11:30,868] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:11:30,870] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:11:30,913] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:11:30,934] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:11:30,947] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:11:30,953] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:11:30,993] DEBUG | Loaded 5 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:11:30,993] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1aea727: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,springContextUtil,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:11:31,020] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@12d0430] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:11:31,023] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e1e999] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:11:31,026] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1672313] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:11:31,028] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1aea727: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,springContextUtil,startor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:11:31,029] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,029] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,041] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,154] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,155] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,155] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,155] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,157] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,158] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,158] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,200] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:11:31,326] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:11:31,342] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:11:31,349] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,356] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:11:31,357] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:11:31,357] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:11:31,360] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,361] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,362] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,362] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,362] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,363] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,363] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,363] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,363] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,365] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@e90906] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 14:11:31,366] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:11:31,370] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,370] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,371] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,371] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:11:31,373] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 14:11:31,373] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:11:31,374] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 14:11:31,374] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,374] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,375] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 14:11:31,375] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 14:11:31,375] INFO | Root WebApplicationContext: initialization completed in 665 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 14:18:46,938] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:18:47,025] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,026] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,031] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,031] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,033] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,034] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:18:47,038] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:18:47,039] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:18:47 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:18:47,074] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,075] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,076] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:18:47,084] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:18:47,087] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:18:47,106] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:18:47,110] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:18:47,116] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:18:47,139] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:18:47,143] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:18:47,149] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:18:47,175] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:18:47,193] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:18:47,237] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,238] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,238] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:18:47,248] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:18:47,249] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:18:47,250] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:18:47,251] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:18:47,253] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:18:47,277] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 14:18:47,284] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:18:47,411] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 14:18:47,412] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:18:47,412] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@247418: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:18:47,437] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,439] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,457] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,460] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,489] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,490] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,491] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,491] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,491] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,492] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,492] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,492] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,493] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,493] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,494] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,494] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,495] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,495] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,495] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,495] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,496] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,496] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,496] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,496] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,499] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1a722ef] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:18:47,502] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@857327] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:18:47,505] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@161bfa3] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:18:47,506] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@247418: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:18:47,507] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,507] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,507] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,508] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,508] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,508] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,510] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,523] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,524] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,524] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,526] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,545] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,545] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,545] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,547] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,551] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,552] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,552] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,594] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,732] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,746] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,756] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,767] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:18:47,768] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,769] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,769] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,770] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,771] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,772] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 14:18:47,773] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 14:18:47,773] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,774] DEBUG | Invoking init method on bean 'startor': public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(298)
[VAMS][2014-08-01 14:18:47,774] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,811] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,828] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,845] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-127.0.0.1.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016, test/com.xiaohao.serviceApi.DemoService=override://192.168.1.35:20881/com.xiaohao.serviceApi.DemoService?category=configurators&dynamic=false&enabled=true&group=test&weight=200}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 14:18:47,858] DEBUG | Creating new ZookKeeper instance to connect to 127.0.0.1:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 14:18:47,858] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-127.0.0.1:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 14:18:47,868] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,869] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,869] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,869] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,870] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,870] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,870] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,871] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,871] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,871] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,872] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,872] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,872] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,873] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,873] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,874] INFO | Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@2f8c99 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 14:18:47,876] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 14:18:47,897] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 14:18:47,897] INFO | Opening socket connection to server /127.0.0.1:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 14:18:47,898] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 14:18:47,899] INFO | Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 14:18:47,901] DEBUG | Session establishment request sent on 127.0.0.1/127.0.0.1:2181 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 14:18:47,928] INFO | Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x1478f7ec65f0006, negotiated timeout = 30000 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 14:18:47,931] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 14:18:47,931] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 14:18:47,931] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 14:18:47,931] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 14:18:47,940] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,951] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,960] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 14:18:47,990] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,469,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,008] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,470,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,021] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,471,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,040] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,472,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9908%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406873927779,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9908%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406873927779  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,040] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 14:18:48,060] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,473,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,073] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,474,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,085] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,475,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,096] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,475,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,100] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,475,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,114] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,476,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,126] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,477,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,138] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,478,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,139] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,478,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,141] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,478,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,159] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,479,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,175] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,480,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,192] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,481,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,193] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,481,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,194] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,481,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,194] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 14:18:48,201] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@247418: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 14:18:48,204] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 14:18:48,206] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:973)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:349)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:300)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:133)
	... 50 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 63 more
[VAMS][2014-08-01 14:55:05,021] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:55:05,096] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,096] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,102] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,102] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,104] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,104] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:55:05,109] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:55:05,109] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:55:05 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:55:05,141] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,142] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,142] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:55:05,148] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:55:05,151] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:55:05,167] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:55:05,171] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:55:05,173] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:55:05,204] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:55:05,216] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:55:05,227] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:55:05,247] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:55:05,260] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:55:05,305] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,306] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,307] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:55:05,321] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:55:05,321] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:55:05,323] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:55:05,324] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:55:05,326] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:55:05,359] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 14:55:05,370] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:55:05,509] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 14:55:05,511] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:55:05,511] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@14b2263: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:55:05,537] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,537] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,558] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,562] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,599] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,599] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,601] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,601] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,602] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,602] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,602] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,603] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,603] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,603] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,605] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,606] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,606] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,607] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,607] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,608] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,608] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,608] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,609] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,609] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,614] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@19dbc3b] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:55:05,618] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1bdcbb2] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:55:05,621] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1db04ed] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:55:05,624] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14b2263: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:55:05,625] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,625] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,626] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,626] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,627] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,627] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,632] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,646] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,647] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,647] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,648] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,665] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,666] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,666] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,667] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,671] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,671] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,671] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,709] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:05,859] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:05,877] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:05,892] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,905] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:55:05,906] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,906] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,907] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,907] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,908] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,909] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 14:55:05,910] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 14:55:05,911] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,912] DEBUG | Invoking init method on bean 'startor': public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(298)
[VAMS][2014-08-01 14:55:05,913] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,969] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:05,987] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:06,004] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-127.0.0.1.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016, test/com.xiaohao.serviceApi.DemoService=override://192.168.1.35:20881/com.xiaohao.serviceApi.DemoService?category=configurators&dynamic=false&enabled=true&group=test&weight=200, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 14:55:06,019] DEBUG | Creating new ZookKeeper instance to connect to 127.0.0.1:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 14:55:06,019] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-127.0.0.1:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 14:55:06,029] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,030] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,030] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,030] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,031] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,031] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,032] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,032] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,032] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,033] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,033] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,034] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,034] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,034] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,035] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,037] INFO | Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1ee145b | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 14:55:06,044] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 14:55:06,068] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 14:55:06,068] INFO | Opening socket connection to server /127.0.0.1:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 14:55:06,068] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 14:55:06,071] INFO | Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 14:55:06,075] DEBUG | Session establishment request sent on 127.0.0.1/127.0.0.1:2181 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 14:55:06,099] INFO | Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x1478f7ec65f0007, negotiated timeout = 30000 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 14:55:06,101] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 14:55:06,101] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 14:55:06,102] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 14:55:06,102] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 14:55:06,114] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:06,130] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:06,139] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 14:55:06,167] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,484,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,195] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,485,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,207] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,486,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,220] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,487,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8340%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876105920,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8340%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876105920  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,221] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 14:55:06,232] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,488,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,244] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,489,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,257] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,490,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,265] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,490,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,277] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,490,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,293] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,491,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,306] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,492,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,318] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,493,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,319] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,493,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,320] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,493,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,331] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,494,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,343] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,495,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,354] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,496,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,357] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,496,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,358] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,496,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,359] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 14:55:06,367] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14b2263: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 14:55:06,367] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 14:55:06,373] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:973)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:349)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:300)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:133)
	... 50 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 63 more
[VAMS][2014-08-01 14:57:20,290] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:57:20,372] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,373] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,379] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,379] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,381] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,381] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:57:20,389] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:57:20,389] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:57:20 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:57:20,428] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,429] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,429] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:57:20,438] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:57:20,440] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:57:20,460] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:57:20,467] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:57:20,471] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:57:20,495] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:57:20,499] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:57:20,504] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:57:20,526] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:57:20,539] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:57:20,594] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,595] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,595] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:57:20,608] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:57:20,609] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:57:20,611] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:57:20,612] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:57:20,614] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:57:20,643] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 14:57:20,654] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:57:20,776] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 14:57:20,776] DEBUG | Loaded 8 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:57:20,777] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@176d662: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:57:20,795] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,795] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,808] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,810] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,837] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,837] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,838] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,839] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,839] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,839] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,840] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,840] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,840] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,840] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,841] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,842] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,842] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,842] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,842] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,843] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,843] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,843] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,843] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,844] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,846] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e68a2b] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:57:20,848] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@14b2db7] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:57:20,850] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@6c9220] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:57:20,851] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@176d662: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,855] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,866] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,866] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,867] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,868] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,885] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,885] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,885] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,888] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,891] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,891] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,891] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,931] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:57:21,077] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:57:21,098] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:57:21,111] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:21,124] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:57:21,124] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,125] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,126] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:21,126] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,127] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,128] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1bcfbeb] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 14:57:21,130] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,132] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,133] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:57:21,135] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 14:57:21,135] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:57:21,135] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 14:57:21,136] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,136] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,136] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 14:57:21,137] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 14:57:21,137] INFO | Root WebApplicationContext: initialization completed in 845 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 14:59:53,337] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:59:53,412] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,413] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,421] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,421] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,422] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,423] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:59:53,427] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:59:53,427] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:59:53 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:59:53,459] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,459] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,460] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:59:53,466] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:59:53,468] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:59:53,486] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:59:53,489] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:59:53,496] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:59:53,524] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:59:53,527] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:59:53,532] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:59:53,556] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:59:53,572] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:59:53,620] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,621] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,621] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:59:53,633] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:59:53,634] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:59:53,635] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:59:53,635] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:59:53,637] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:59:53,656] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 14:59:53,665] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:59:53,790] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 14:59:53,791] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:59:53,791] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1912a56: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:59:53,811] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,811] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,827] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,832] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,860] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,860] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,862] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,863] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,863] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,863] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,864] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,865] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,865] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,865] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,867] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,867] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,867] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,867] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,869] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,871] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7bb2cb] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:59:53,873] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@de5cd9] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:59:53,875] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@13cb1eb] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:59:53,876] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1912a56: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:59:53,877] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:53,877] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:53,877] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:53,877] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:53,878] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,878] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,882] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,892] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,892] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,892] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,894] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,910] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,911] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,911] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,914] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,918] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,918] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,918] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,955] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,074] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,089] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,101] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:54,110] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:59:54,111] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:54,112] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:54,112] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:54,113] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:54,113] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:54,115] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 14:59:54,116] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 14:59:54,116] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:54,117] DEBUG | Invoking init method on bean 'startor': public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(298)
[VAMS][2014-08-01 14:59:54,118] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:54,155] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,171] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,202] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 14:59:54,220] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 14:59:54,221] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 14:59:54,233] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,233] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,234] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,234] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,235] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,235] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,236] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,236] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,236] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,237] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,237] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,237] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,238] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,238] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,238] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,240] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@154e38b | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 14:59:54,242] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 14:59:54,265] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 14:59:54,266] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 14:59:54,267] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 14:59:54,269] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 14:59:54,272] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 14:59:54,310] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f0008, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 14:59:54,313] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 14:59:54,314] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 14:59:54,314] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 14:59:54,314] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 14:59:54,323] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,332] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,340] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 14:59:54,363] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,499,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,389] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,500,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,402] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,501,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,414] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,502,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D6680%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876394123,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D6680%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876394123  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,415] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 14:59:54,427] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,503,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,438] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,504,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,457] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,505,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,465] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,505,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,469] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,505,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,479] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,506,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,491] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,507,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,504] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,508,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,505] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,508,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,506] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,508,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,517] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,509,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,537] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,510,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,549] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,511,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,551] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,511,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,558] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,511,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,558] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 14:59:54,565] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1912a56: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 14:59:54,565] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 14:59:54,575] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:973)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:349)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:300)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:133)
	... 50 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 63 more
[VAMS][2014-08-01 15:06:04,848] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:06:04,942] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,943] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,948] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,949] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,951] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,951] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:06:04,958] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:06:04,959] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:06:04 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:06:05,000] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:05,000] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:05,000] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:06:05,007] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:06:05,009] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:06:05,027] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:06:05,033] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:06:05,038] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:06:05,065] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:06:05,069] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:06:05,077] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:06:05,100] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:06:05,116] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:06:05,158] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:05,159] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:05,159] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:06:05,169] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:06:05,169] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:06:05,170] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:06:05,171] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:06:05,172] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:06:05,197] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:06:05,205] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:06:05,238] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:06:05,240] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:06:05,241] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@10f243b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:06:05,357] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,357] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,372] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,375] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,408] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,409] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,410] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,410] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,411] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,411] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,412] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,413] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,413] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,413] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,415] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,415] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,415] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,415] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,416] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,416] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,416] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,417] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,417] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,417] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,420] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@f9659d] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:06:05,422] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1ac1adf] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:06:05,423] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1795327] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:06:05,425] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@10f243b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:06:05,425] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,425] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,425] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,426] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,426] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,426] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,429] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,438] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,438] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,439] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,440] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,463] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,464] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,464] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,467] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,471] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,472] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,472] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,526] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,654] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,668] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,683] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,695] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:06:05,695] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,696] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,696] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,697] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,697] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,699] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:06:05,699] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:06:05,703] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: AutowiredFieldElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:06:05,703] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,705] DEBUG | Processing injected method of bean 'startor': AutowiredFieldElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:06:05,709] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,754] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,772] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,786] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:06:05,800] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:06:05,800] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:06:05,808] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,808] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,808] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,809] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,809] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,810] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,811] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,811] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,811] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,812] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,812] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,813] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,813] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,813] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,813] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,815] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@12dcb8c | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:06:05,818] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:06:05,837] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:06:05,838] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:06:05,838] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:06:05,839] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:06:05,842] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:06:05,864] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000a, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:06:05,866] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:06:05,867] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:06:05,867] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:06:05,867] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:06:05,878] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,892] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,900] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:06:05,926] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,515,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,943] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,516,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,956] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,517,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,968] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,518,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8644%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876765714,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8644%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876765714  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,968] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:06:05,981] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,519,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,992] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,520,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,004] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,521,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,010] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,521,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,014] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,521,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,034] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,522,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,053] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,523,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,066] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,524,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,068] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,524,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,069] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,524,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,078] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,525,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,090] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,526,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,102] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,527,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,104] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,527,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,105] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,527,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,105] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:06:06,113] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@10f243b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:06:06,113] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:06:06,116] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
	... 49 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1017)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:960)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:858)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:480)
	... 51 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:10:30,260] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:10:30,351] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,352] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,359] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,360] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,363] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,364] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:10:30,372] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:10:30,373] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:10:30 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:10:30,432] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,433] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,433] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:10:30,444] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:10:30,447] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:10:30,470] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:10:30,475] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:10:30,481] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:10:30,509] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:10:30,521] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:10:30,532] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:10:30,547] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:10:30,557] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:10:30,589] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,590] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,591] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:10:30,603] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:10:30,604] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:10:30,606] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:10:30,607] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:10:30,609] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:10:30,646] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:10:30,661] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:10:30,803] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:10:30,804] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:10:30,804] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@75d174: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:10:30,824] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,824] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,840] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,844] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,884] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,885] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,888] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,888] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,889] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,889] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,891] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,891] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,892] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,892] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,894] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,895] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,895] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,895] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,896] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,896] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,897] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,897] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,897] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,898] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,902] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@f34a08] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:10:30,906] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1d88c1f] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:10:30,909] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1af7e68] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:10:30,911] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@75d174: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:10:30,912] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:30,912] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:30,912] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:30,912] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:30,913] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,913] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,917] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,933] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,933] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,934] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,937] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,967] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,968] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,968] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,971] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,975] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,975] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,976] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:31,012] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,153] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,166] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,178] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:31,188] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:10:31,189] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:31,190] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:31,190] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:31,191] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:31,192] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:31,193] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:10:31,193] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:10:31,197] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:10:31,198] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:31,199] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:10:31,199] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:31,248] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,264] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,276] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:10:31,293] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:10:31,293] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:10:31,303] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,304] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,304] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,305] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,305] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,305] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,306] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,306] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,307] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,307] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,307] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,308] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,308] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,308] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,309] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,311] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1ab7626 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:10:31,314] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:10:31,331] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:10:31,331] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:10:31,331] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:10:31,333] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:10:31,335] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:10:31,354] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000b, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:10:31,356] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:10:31,357] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:10:31,357] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:10:31,357] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:10:31,367] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,383] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,395] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:10:31,426] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,530,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,443] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,531,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,466] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,532,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,495] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,533,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8332%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877031205,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8332%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877031205  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,495] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:10:31,516] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,534,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,534] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,535,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,546] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,536,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,550] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,536,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,553] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,536,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,568] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,537,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,579] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,538,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,594] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,539,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,596] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,539,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,599] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,539,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,612] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,540,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,624] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,541,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,637] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,542,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,637] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,542,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,638] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,542,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,638] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:10:31,644] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@75d174: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:10:31,645] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:10:31,646] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:12:16,143] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:12:16,233] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,234] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,239] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,239] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,241] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,241] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:16,246] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:12:16,247] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:12:16 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:12:16,280] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,281] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,281] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:16,293] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:12:16,296] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:12:16,318] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:12:16,322] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:12:16,324] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:16,351] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:16,356] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:16,362] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:16,383] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:12:16,398] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:12:16,446] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,446] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,452] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:16,466] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:12:16,467] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:16,470] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:16,471] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:16,474] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:12:16,597] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:12:16,606] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:12:16,637] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:12:16,637] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:12:16,637] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@ec12f3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:12:16,655] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,655] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,672] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,677] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,715] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,715] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,716] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,717] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,717] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,717] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,718] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,718] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,719] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,719] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,721] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,721] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,722] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,722] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,722] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,722] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,723] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,723] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,723] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,723] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,726] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1af7e68] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:12:16,730] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1a462c9] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:12:16,733] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1423820] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ec12f3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,736] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,738] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,748] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,748] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,749] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,750] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,768] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,769] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,769] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,771] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,775] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,775] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,776] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,838] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:16,971] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:16,989] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,005] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:17,017] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:12:17,018] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:17,019] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:17,019] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:17,020] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:17,020] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:17,022] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:12:17,023] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:12:17,028] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:12:17,028] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:17,030] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:12:17,030] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:17,085] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,095] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,114] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:12:17,133] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:12:17,133] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:12:17,142] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,143] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,143] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,143] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,143] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,144] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,144] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,144] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,145] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,145] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,145] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,146] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,146] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,146] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,147] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,148] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1044daf | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:12:17,150] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:12:17,171] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:12:17,171] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:12:17,172] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:12:17,173] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:12:17,176] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:12:17,550] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000d, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:12:17,552] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:12:17,553] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:12:17,553] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:12:17,553] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:12:17,561] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,574] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,581] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:12:17,720] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,553,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,773] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,554,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,786] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,555,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,798] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,556,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9276%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877137036,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9276%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877137036  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,798] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:12:17,810] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,557,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,822] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,558,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,835] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,559,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,841] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,559,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,2,0,0,0,2,548}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,847] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,559,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D5468%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877126296,'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,864] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,560,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,875] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,561,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,888] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,562,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,889] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,562,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,890] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,562,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,900] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,563,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,913] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,564,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,925] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,565,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,926] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,565,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,927] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,565,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,928] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:12:17,938] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ec12f3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:12:17,938] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:12:17,940] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:14:20,701] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:14:20,793] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,794] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,799] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,800] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,801] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,801] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:14:20,806] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:14:20,806] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:14:20 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:14:20,842] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,843] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,843] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:14:20,849] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:14:20,853] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:14:20,873] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:14:20,877] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:14:20,879] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:14:20,903] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:14:20,912] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:14:20,920] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:14:20,938] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:14:20,950] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:14:20,992] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,994] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,995] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:14:21,007] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:14:21,008] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:14:21,009] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:14:21,009] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:14:21,011] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:14:21,038] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:14:21,044] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:14:21,169] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:14:21,170] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:14:21,170] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1174ec5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:14:21,199] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,199] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,217] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,219] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,251] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,252] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,253] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,254] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,254] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,254] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,255] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,256] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,256] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,256] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,258] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,258] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,259] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,259] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,259] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,260] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,260] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,260] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,261] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,261] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,264] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@13cb1eb] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:14:21,266] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1487b8b] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:14:21,270] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1794494] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:14:21,271] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1174ec5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:14:21,271] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,271] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,272] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,272] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,272] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,273] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,276] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,287] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,288] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,288] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,290] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,306] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,306] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,306] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,308] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,312] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,313] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,313] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,352] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,496] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,508] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,521] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,530] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:14:21,531] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,531] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,532] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,532] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,532] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,534] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:14:21,535] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:14:21,540] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:14:21,541] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,542] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:14:21,543] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,586] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,601] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,615] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:14:21,637] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:14:21,637] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:14:21,648] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,649] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,649] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,650] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,650] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,650] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,651] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,651] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,651] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,652] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,652] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,652] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,652] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,653] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,653] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,654] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1b7c63f | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:14:21,656] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:14:21,674] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:14:21,674] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:14:21,674] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:14:21,676] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:14:21,678] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:14:21,708] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000f, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:14:21,713] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:14:21,714] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:14:21,714] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:14:21,714] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:14:21,725] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,737] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,749] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:14:21,778] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,578,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,804] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,579,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,817] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,580,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,829] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,581,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8804%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877261548,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8804%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877261548  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,830] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:14:21,850] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,582,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,870] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,583,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,882] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,584,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,888] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,584,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,5,0,0,0,1,573}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,891] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,584,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8780%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877240413}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,903] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,585,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,915] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,586,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,928] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,587,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,929] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,587,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,930] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,587,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,948] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,588,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,960] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,589,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,972] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,590,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,973] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,590,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,974] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,590,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,975] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:14:21,982] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1174ec5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:14:21,983] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:14:21,984] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:17:04,758] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:17:04,843] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,843] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,848] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,849] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,851] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,851] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:17:04,856] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:17:04,856] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:17:04 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:17:04,894] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,894] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,895] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:17:04,903] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:17:04,906] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:17:04,925] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:17:04,929] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:17:04,936] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:17:04,957] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:17:04,959] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:17:04,968] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:17:04,992] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:17:05,005] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:17:05,047] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:05,047] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:05,048] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:17:05,057] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:17:05,057] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:17:05,059] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:17:05,060] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:17:05,062] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:17:05,083] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:17:05,091] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:17:05,203] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:17:05,204] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:17:05,204] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@a0560e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:17:05,226] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,226] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,247] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,250] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,277] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,277] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,278] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,279] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,279] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,279] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,280] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,280] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,280] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,281] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,282] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,282] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,284] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,284] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,285] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,287] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e91485] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:17:05,289] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7cb66a] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:17:05,291] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@174d4c9] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:17:05,292] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@a0560e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:17:05,292] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,292] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,293] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,293] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,293] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,293] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,295] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,305] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,305] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,306] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,307] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,330] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,330] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,331] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,333] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,339] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,339] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,340] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,378] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,499] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,514] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,529] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,540] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:17:05,541] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,542] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,542] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,543] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,543] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,545] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:17:05,545] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:17:05,548] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:17:05,548] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,549] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:17:05,550] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,588] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,601] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,617] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:17:05,633] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:17:05,633] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:17:05,643] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,643] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,644] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,644] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,644] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,644] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,645] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,645] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,645] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,646] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,646] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,646] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,646] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,647] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,647] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,648] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@17a687b | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:17:05,650] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:17:05,671] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:17:05,671] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:17:05,671] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:17:05,676] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:17:05,678] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:17:05,705] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f0011, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:17:05,710] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:17:05,710] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:17:05,711] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:17:05,711] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:17:05,722] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,735] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,748] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:17:05,767] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,602,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,793] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,603,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,806] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,604,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,818] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,605,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8296%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877425554,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8296%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877425554  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,819] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:17:05,831] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,606,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,843] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,607,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,854] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,608,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,866] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,608,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,7,0,0,0,1,597}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,872] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,608,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7404%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877407454}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,884] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,609,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,896] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,610,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,909] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,611,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,910] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,611,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,911] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,611,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,921] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,612,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,932] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,613,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,945] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,614,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,946] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,614,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,947] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,614,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,947] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:17:05,955] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@a0560e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:17:05,955] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:17:05,957] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:21:25,815] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:21:25,917] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,918] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,923] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,924] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,926] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,927] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:25,932] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:21:25,933] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:21:25 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:21:25,970] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,971] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,971] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:25,982] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:21:25,986] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:21:26,012] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:21:26,019] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:21:26,024] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:26,054] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:26,058] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:26,067] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:26,096] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:21:26,109] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:21:26,146] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:26,147] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:26,147] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:26,155] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:21:26,156] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:26,157] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:26,158] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:26,159] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:21:26,185] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:21:26,197] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:21:26,326] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:21:26,326] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:21:26,327] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@404eb2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:21:26,349] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,349] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,363] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,366] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,390] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,390] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,391] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,392] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,392] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,392] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,393] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,393] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,394] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,394] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,395] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,395] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,396] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,396] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,396] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,397] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,397] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,397] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,398] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,398] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,400] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1ac1adf] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:21:26,402] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1795327] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:21:26,404] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@968f9] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:21:26,405] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@404eb2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:21:26,405] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,410] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,431] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,432] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,432] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,434] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,461] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,462] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,462] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,464] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,471] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,471] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,471] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,517] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,658] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,680] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,696] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,707] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:21:26,707] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,708] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,709] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,710] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,710] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,713] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:21:26,713] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:21:26,717] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:21:26,717] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,719] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:21:26,720] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,761] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,779] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,798] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:21:26,813] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:21:26,813] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:21:26,823] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,823] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,823] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,824] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,824] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,824] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,824] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,825] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,825] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,825] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,826] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,826] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,826] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,826] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,827] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,828] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1548414 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:21:26,831] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:21:26,851] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:21:26,851] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:21:26,852] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:21:26,853] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:21:26,856] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:21:27,240] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479070c2fa0001, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:21:27,243] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:21:27,244] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:21:27,244] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:21:27,244] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:21:27,254] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:27,265] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:27,275] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:21:27,306] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,10,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,326] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,11,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,338] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,12,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,349] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,13,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9132%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877686725,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9132%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877686725  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,350] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:21:27,362] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,14,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,375] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,15,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,391] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,16,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,398] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,16,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,1,0,0,0,1,5}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,403] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,16,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9616%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877668194}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,415] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,17,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,426] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,18,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,439] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,19,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,442] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,19,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,444] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,19,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,459] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,20,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,472] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,484] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,22,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,485] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,22,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,488] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,22,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,489] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:21:27,498] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@404eb2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:21:27,499] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:21:27,501] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:24:21,722] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:24:21,800] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,801] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,807] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,808] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,809] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,809] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:21,816] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:24:21,817] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:24:21 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:24:21,853] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,854] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,854] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:21,860] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:24:21,864] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:24:21,881] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:24:21,885] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:24:21,887] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:21,910] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:21,918] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:21,928] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:21,943] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:24:21,956] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:24:21,991] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,991] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,992] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:22,002] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:24:22,002] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:22,004] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:22,004] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:22,005] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:24:22,026] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:24:22,033] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:24:22,140] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:24:22,141] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:24:22,141] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@13638d4: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:24:22,160] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,161] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,180] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,183] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,224] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,225] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,227] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,227] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,227] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,228] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,228] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,229] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,229] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,229] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,231] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,231] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,231] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,231] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,232] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,232] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,232] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,232] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,233] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,233] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,235] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1abfbdc] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:24:22,239] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@13e02ed] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:24:22,241] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1756db3] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:24:22,242] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@13638d4: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:24:22,243] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,243] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,244] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,244] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,244] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,244] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,248] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,260] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,261] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,261] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,263] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,288] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,288] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,289] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,292] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,296] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,297] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,297] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,340] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,474] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,486] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,499] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,508] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:24:22,509] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,509] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,510] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,510] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,510] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,513] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:24:22,513] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:24:22,517] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:24:22,517] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,518] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:24:22,519] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,561] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,583] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,598] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:24:22,616] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:24:22,616] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:24:22,625] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,625] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,626] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,626] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,626] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,626] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,627] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,627] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,627] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,628] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,628] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,628] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,628] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,629] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,629] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,630] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@141d19 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:24:22,633] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:24:22,654] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:24:22,654] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:24:22,655] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:24:22,656] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:24:22,659] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:24:23,165] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x14790742c0b0001, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:24:23,167] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:24:23,168] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:24:23,168] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:24:23,168] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:24:23,177] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:23,186] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:23,193] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:24:23,377] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,33,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,416] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,34,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,429] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,35,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,441] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,36,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8932%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877862524,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8932%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877862524  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,441] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:24:23,453] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,37,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,465] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,38,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,477] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,39,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,490] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,39,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,2,0,0,0,2,28}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,495] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,39,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9616%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877668194,'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9380%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877851554}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,506] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,40,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,518] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,41,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,531] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,42,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,532] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,42,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,533] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,42,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,543] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,43,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,554] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,44,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,567] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,45,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,568] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,45,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,570] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,45,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,570] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:24:23,582] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@13638d4: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:24:23,582] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:24:23,587] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:44:11,256] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:44:11,325] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,326] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,331] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,332] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,333] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,333] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:44:11,337] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:44:11,338] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:44:11 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:44:11,375] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,375] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,376] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:44:11,382] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:44:11,384] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:44:11,400] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:44:11,404] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:44:11,406] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:44:11,424] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:44:11,427] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:44:11,432] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:44:11,455] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:44:11,468] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:44:11,502] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,503] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,504] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:44:11,514] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:44:11,515] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:44:11,516] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:44:11,517] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:44:11,518] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:44:11,541] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:44:11,548] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:44:11,649] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:44:11,649] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@14d4313: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:44:11,668] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,669] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,683] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,687] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,714] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,714] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,716] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,716] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,716] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,716] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,717] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,717] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,718] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,718] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,720] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,720] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,721] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,721] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,721] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,722] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,722] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,722] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,723] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,723] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,726] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1a21389] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:44:11,728] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e68a2b] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:44:11,731] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@14b2db7] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:44:11,733] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14d4313: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:44:11,733] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,733] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,734] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,734] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,734] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,735] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,737] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,750] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,750] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,751] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,752] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,770] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,770] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,771] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,772] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,777] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,778] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,778] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,816] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:11,941] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:11,954] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:11,967] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,977] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:44:11,978] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,979] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,979] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,980] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,981] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,982] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,983] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:12,018] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:12,031] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:12,043] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:44:12,057] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:44:12,057] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:44:12,065] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,065] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,065] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,066] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,066] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,066] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,066] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,067] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,067] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,067] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,067] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,068] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,068] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,068] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,068] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,070] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@18b995c | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:44:12,072] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:44:12,088] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:44:12,089] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:44:12,090] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:44:12,092] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:44:12,095] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:44:12,128] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940001, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:44:12,130] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:44:12,130] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:44:12,130] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:44:12,130] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:44:12,137] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:12,146] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:12,158] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:44:12,181] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,58,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,207] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,59,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,220] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,60,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,232] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,61,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7676%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406879051988,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7676%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406879051988  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,233] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:44:12,245] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,62,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,257] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,63,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,268] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,64,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,273] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,64,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,5,0,0,0,1,53}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,278] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,64,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9460%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879006328}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,290] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,65,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,301] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,66,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,314] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,67,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,316] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,67,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,321] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,67,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,334] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,68,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,347] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,69,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,360] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,70,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,362] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,70,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,364] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,70,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,364] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:44:12,379] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14d4313: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:44:12,379] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:44:12,381] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Cannot resolve reference to bean 'demoService' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:336)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	... 51 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 56 more
[VAMS][2014-08-01 15:58:48,754] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:58:48,823] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,823] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,829] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,829] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,831] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,831] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:48,835] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:58:48,835] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:58:48 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:58:48,870] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,871] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,871] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:48,878] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:58:48,880] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:58:48,896] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:58:48,900] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:58:48,902] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:48,923] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:48,932] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:48,945] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:48,961] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:58:48,975] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:58:49,011] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:49,012] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:49,013] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:49,023] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:58:49,023] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:49,025] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:49,026] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:49,027] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:58:49,049] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:58:49,056] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:58:49,167] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:58:49,167] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@b81eaa: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:58:49,189] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,189] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,204] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,207] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,234] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,235] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,236] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,236] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,236] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,237] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,237] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,237] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,238] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,238] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,239] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,240] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,240] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,240] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,241] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,241] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,241] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,241] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,242] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,242] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,245] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e140bf] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:58:49,247] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6d23ea] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:58:49,249] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@7cf883] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b81eaa: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,252] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,252] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,254] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,264] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,264] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,265] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,266] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,283] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,284] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,284] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,285] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,289] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,289] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,289] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,327] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,441] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,455] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,466] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,478] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:58:49,479] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,480] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,480] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,481] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,481] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,482] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,484] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,521] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,535] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,547] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:58:49,560] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:58:49,561] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:58:49,569] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,569] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,569] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,570] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,570] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,570] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,570] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,571] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,571] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,571] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,571] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,572] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,572] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,572] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,573] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,574] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@385715 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:58:49,576] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:58:49,593] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:58:49,593] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:58:49,593] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:58:49,597] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:58:49,600] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:58:49,626] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940003, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:58:49,628] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:58:49,628] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:58:49,629] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:58:49,629] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:58:49,636] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,644] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,653] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:58:49,679] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,82,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,697] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,83,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,709] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,84,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,723] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,85,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8356%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406879929489,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8356%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406879929489  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,723] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:58:49,736] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,86,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,747] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,87,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,758] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,88,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,765] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,88,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,7,0,0,0,1,77}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,768] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,88,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9484%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879887260}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,778] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,89,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,791] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,90,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,803] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,91,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,804] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,91,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,810] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,91,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,824] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,92,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,836] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,93,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,848] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,94,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,850] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,94,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,851] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,94,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,851] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:58:49,881] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,925] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,944] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:50,024] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x01ba4806, /192.168.1.35:53954 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-01 15:58:50,024] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-01 15:58:50,066] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:50,082] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:50,091] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:50,104] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-01 15:58:50,111] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-01 15:58:50,419] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 15:58:50,420] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:50,420] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:50,420] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:50,421] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1e6cb2a] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:58:50,421] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:50,423] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,423] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,424] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,424] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:58:50,425] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:58:50,425] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:58:50,425] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:58:50,426] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,426] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,426] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:58:50,426] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:58:50,426] INFO | Root WebApplicationContext: initialization completed in 1670 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:58:59,852] DEBUG | Got ping response for sessionid: 0x1479085bf940003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:03:02,127] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 16:03:02,198] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,198] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,204] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,204] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,205] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,206] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:03:02,211] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 16:03:02,212] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 16:03:02 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 16:03:02,242] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,243] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,243] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:03:02,249] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 16:03:02,251] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 16:03:02,271] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 16:03:02,275] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 16:03:02,280] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:03:02,301] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:03:02,303] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:03:02,310] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:03:02,332] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 16:03:02,344] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 16:03:02,379] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,380] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,380] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:03:02,390] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 16:03:02,390] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:03:02,392] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:03:02,392] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:03:02,395] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 16:03:02,417] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 16:03:02,426] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 16:03:02,532] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 16:03:02,532] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@19c86c5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 16:03:02,553] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,554] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,568] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,571] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,599] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,599] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,601] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,601] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,601] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,601] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,602] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,602] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,602] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,602] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,604] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,604] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,604] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,604] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,606] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,610] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1c4d594] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 16:03:02,614] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1a722ef] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 16:03:02,616] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@857327] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 16:03:02,617] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@19c86c5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 16:03:02,618] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,618] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,618] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,618] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,619] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,619] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,621] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,632] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,632] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,633] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,634] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,653] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,653] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,653] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,655] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,659] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,660] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,660] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,699] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,810] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,823] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,835] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,846] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 16:03:02,847] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,847] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,847] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,848] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,848] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,849] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,850] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,889] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,907] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,920] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 16:03:02,934] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 16:03:02,934] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 16:03:02,941] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,942] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,942] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,942] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,943] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,943] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,943] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,943] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,944] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,944] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,944] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,944] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,945] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,945] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,945] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,946] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1357784 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 16:03:02,948] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 16:03:02,966] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 16:03:02,966] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 16:03:02,966] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 16:03:02,968] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 16:03:02,970] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 16:03:02,993] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940005, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 16:03:02,995] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 16:03:02,995] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 16:03:02,995] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 16:03:02,995] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 16:03:03,002] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,010] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,018] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 16:03:03,047] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,106,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,065] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,107,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,077] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,108,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,090] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,109,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8980%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406880182854,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8980%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406880182854  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,091] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 16:03:03,110] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,110,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,123] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,111,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,134] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,112,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,139] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,112,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,9,0,0,0,1,101}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,143] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,112,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8176%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406880165057}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,154] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,113,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,167] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,114,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,179] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,115,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,180] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,115,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,185] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,115,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,200] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,116,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,212] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,117,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,224] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,118,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,225] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,118,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,226] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,118,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,226] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 16:03:03,253] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,296] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,310] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,387] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x0174e4b3, /192.168.1.35:54521 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-01 16:03:03,389] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-01 16:03:03,418] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,435] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,445] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,463] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-01 16:03:03,472] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-01 16:03:03,778] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 16:03:03,778] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:03,779] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:03,779] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:03,780] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a40fff] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 16:03:03,781] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:03,782] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,783] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,783] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,783] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:03:03,785] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 16:03:03,785] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:03:03,785] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 16:03:03,786] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,786] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,786] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 16:03:03,787] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 16:03:03,787] INFO | Root WebApplicationContext: initialization completed in 1658 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 16:11:07,806] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 16:11:07,878] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,878] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,884] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,884] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,886] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,886] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:11:07,891] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 16:11:07,891] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 16:11:07 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 16:11:07,923] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,924] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,924] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:11:07,931] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 16:11:07,933] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 16:11:07,950] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 16:11:07,954] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 16:11:07,958] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:11:07,979] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:11:07,983] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:11:07,988] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:11:08,012] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 16:11:08,029] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 16:11:08,068] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:08,069] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:08,069] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:11:08,082] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 16:11:08,082] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:11:08,084] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:11:08,085] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:11:08,086] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 16:11:08,117] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 16:11:08,127] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 16:11:08,238] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 16:11:08,239] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@12d0430: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 16:11:08,260] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,261] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,278] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,280] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,313] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,313] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,314] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,315] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,315] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,315] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,316] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,316] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,316] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,317] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,319] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,319] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,320] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,320] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,320] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,320] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,321] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,321] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,321] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,321] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,325] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@861a09] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 16:11:08,327] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@176b9ea] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 16:11:08,329] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@82f392] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 16:11:08,330] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@12d0430: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,332] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,334] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,345] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,345] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,345] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,347] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,363] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,364] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,364] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,367] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,370] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,371] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,371] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,407] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,521] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,542] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,555] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,565] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 16:11:08,565] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,566] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,566] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,567] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,567] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,568] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,569] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,603] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,619] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,631] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 16:11:08,645] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 16:11:08,645] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 16:11:08,659] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,659] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,660] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,660] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,660] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,661] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,661] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,661] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,662] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,662] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,663] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,663] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,663] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,664] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,664] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,665] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@53033e | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 16:11:08,667] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 16:11:08,687] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 16:11:08,687] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 16:11:08,688] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 16:11:08,690] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 16:11:08,692] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 16:11:08,964] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940007, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 16:11:08,967] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 16:11:08,968] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 16:11:08,968] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 16:11:08,968] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 16:11:08,984] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,001] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,013] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 16:11:09,064] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,130,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,088] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,131,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,113] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,132,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,138] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,133,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9724%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406880668574,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9724%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406880668574  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,138] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 16:11:09,149] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,134,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,163] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,135,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,175] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,136,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,181] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,136,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,11,0,0,0,1,125}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,185] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,136,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7040%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406880649905}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,198] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,137,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,217] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,138,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,228] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,139,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,235] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,139,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,236] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,139,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,250] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,140,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,262] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,141,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,275] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,142,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,276] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,142,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,277] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,142,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,277] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 16:11:09,305] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,341] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,351] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,440] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x00b92956, /192.168.1.35:55194 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-01 16:11:09,441] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-01 16:11:09,477] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,493] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,505] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,517] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-01 16:11:09,525] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-01 16:11:09,828] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 16:11:09,831] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 16:11:09,831] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:09,831] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:09,832] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:09,833] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@898b41] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 16:11:09,833] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:09,835] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,835] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,836] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,836] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:11:09,838] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 16:11:09,838] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:11:09,838] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 16:11:09,838] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,839] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,839] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 16:11:09,839] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 16:11:09,840] INFO | Root WebApplicationContext: initialization completed in 2032 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 16:11:19,278] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:29,278] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:39,278] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:49,279] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:59,280] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:09,281] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:19,282] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:29,285] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:39,286] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:49,284] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:50,152] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-01 16:12:59,285] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
