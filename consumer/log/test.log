[VAMS][2014-08-01 14:07:37,662] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:07:37,745] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,745] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,752] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,752] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,754] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,754] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:07:37,758] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:07:37,759] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:07:37 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:07:37,795] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,796] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:07:37,796] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:07:37,802] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:07:37,805] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:07:37,824] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:07:37,829] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:07:37,831] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:07:37,872] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:07:37,894] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:07:37,908] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:07:37,913] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:07:37,956] DEBUG | Loaded 5 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:07:37,956] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@12620b5: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,springContextUtil]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:07:37,979] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@def14f] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:07:37,983] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@13577ca] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:07:37,985] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1e881b6] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:07:37,987] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@12620b5: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,springContextUtil]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:07:37,987] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:37,988] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,002] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,121] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,121] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:38,122] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,122] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,125] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,126] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:38,126] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,187] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:07:38,306] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:07:38,320] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:07:38,328] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,342] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:07:38,343] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:07:38,344] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:07:38,348] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,349] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:38,350] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,350] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,350] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,351] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:07:38,351] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:07:38,351] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:07:38,352] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:07:38,353] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@123ce3f] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 14:07:38,355] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:07:38,359] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,359] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,359] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,360] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:07:38,362] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 14:07:38,362] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:07:38,362] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 14:07:38,362] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,363] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:07:38,363] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 14:07:38,363] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 14:07:38,363] INFO | Root WebApplicationContext: initialization completed in 698 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 14:11:30,708] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:11:30,790] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,791] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,796] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,797] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,798] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,799] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:11:30,803] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:11:30,803] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:11:30 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:11:30,837] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,838] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:11:30,838] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:11:30,845] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:11:30,847] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:11:30,864] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:11:30,868] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:11:30,870] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:11:30,913] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:11:30,934] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:11:30,947] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:11:30,953] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:11:30,993] DEBUG | Loaded 5 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:11:30,993] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1aea727: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,springContextUtil,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:11:31,020] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@12d0430] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:11:31,023] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e1e999] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:11:31,026] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1672313] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:11:31,028] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1aea727: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,springContextUtil,startor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:11:31,029] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,029] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,041] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,154] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,155] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,155] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,155] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,157] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,158] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,158] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,200] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:11:31,326] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:11:31,342] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:11:31,349] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,356] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:11:31,357] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:11:31,357] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:11:31,360] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,361] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,362] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,362] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,362] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,363] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:11:31,363] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:11:31,363] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:11:31,363] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:11:31,365] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@e90906] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 14:11:31,366] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:11:31,370] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,370] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,371] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,371] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:11:31,373] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 14:11:31,373] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:11:31,374] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 14:11:31,374] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,374] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:11:31,375] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 14:11:31,375] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 14:11:31,375] INFO | Root WebApplicationContext: initialization completed in 665 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 14:18:46,938] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:18:47,025] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,026] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,031] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,031] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,033] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,034] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:18:47,038] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:18:47,039] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:18:47 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:18:47,074] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,075] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,076] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:18:47,084] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:18:47,087] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:18:47,106] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:18:47,110] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:18:47,116] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:18:47,139] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:18:47,143] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:18:47,149] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:18:47,175] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:18:47,193] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:18:47,237] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,238] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:18:47,238] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:18:47,248] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:18:47,249] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:18:47,250] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:18:47,251] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:18:47,253] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:18:47,277] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 14:18:47,284] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:18:47,411] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 14:18:47,412] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:18:47,412] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@247418: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:18:47,437] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,439] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,457] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,460] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,489] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,490] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,491] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,491] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,491] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,492] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,492] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,492] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,493] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,493] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,494] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,494] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,495] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,495] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,495] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,495] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,496] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,496] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,496] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,496] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,499] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1a722ef] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:18:47,502] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@857327] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:18:47,505] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@161bfa3] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:18:47,506] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@247418: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:18:47,507] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,507] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,507] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,508] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,508] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,508] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,510] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,523] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,524] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,524] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,526] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,545] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,545] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,545] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,547] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,551] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,552] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,552] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,594] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,732] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,746] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,756] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,767] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:18:47,768] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,769] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,769] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:18:47,770] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:18:47,771] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:18:47,772] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 14:18:47,773] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 14:18:47,773] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:18:47,774] DEBUG | Invoking init method on bean 'startor': public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(298)
[VAMS][2014-08-01 14:18:47,774] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:18:47,811] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,828] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,845] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-127.0.0.1.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016, test/com.xiaohao.serviceApi.DemoService=override://192.168.1.35:20881/com.xiaohao.serviceApi.DemoService?category=configurators&dynamic=false&enabled=true&group=test&weight=200}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 14:18:47,858] DEBUG | Creating new ZookKeeper instance to connect to 127.0.0.1:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 14:18:47,858] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-127.0.0.1:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 14:18:47,868] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,869] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,869] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,869] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,870] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,870] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,870] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,871] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,871] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,871] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,872] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,872] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,872] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,873] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,873] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:18:47,874] INFO | Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@2f8c99 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 14:18:47,876] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 14:18:47,897] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 14:18:47,897] INFO | Opening socket connection to server /127.0.0.1:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 14:18:47,898] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 14:18:47,899] INFO | Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 14:18:47,901] DEBUG | Session establishment request sent on 127.0.0.1/127.0.0.1:2181 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 14:18:47,928] INFO | Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x1478f7ec65f0006, negotiated timeout = 30000 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 14:18:47,931] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 14:18:47,931] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 14:18:47,931] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 14:18:47,931] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 14:18:47,940] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,951] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:18:47,960] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 14:18:47,990] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,469,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,008] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,470,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,021] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,471,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,040] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,472,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9908%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406873927779,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9908%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406873927779  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,040] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 14:18:48,060] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,473,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,073] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,474,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,085] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,475,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,096] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,475,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,100] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,475,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,114] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,476,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,126] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,477,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,138] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,478,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,139] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,478,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,141] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,478,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,159] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,479,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,175] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,480,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,192] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,481,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,193] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,481,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,194] DEBUG | Reading reply sessionid:0x1478f7ec65f0006, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,481,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:18:48,194] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 14:18:48,201] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@247418: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 14:18:48,204] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 14:18:48,206] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:973)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:349)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:300)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:133)
	... 50 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 63 more
[VAMS][2014-08-01 14:55:05,021] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:55:05,096] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,096] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,102] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,102] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,104] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,104] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:55:05,109] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:55:05,109] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:55:05 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:55:05,141] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,142] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,142] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:55:05,148] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:55:05,151] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:55:05,167] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:55:05,171] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:55:05,173] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:55:05,204] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:55:05,216] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:55:05,227] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:55:05,247] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:55:05,260] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:55:05,305] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,306] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:55:05,307] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:55:05,321] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:55:05,321] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:55:05,323] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:55:05,324] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:55:05,326] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:55:05,359] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 14:55:05,370] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:55:05,509] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 14:55:05,511] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:55:05,511] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@14b2263: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:55:05,537] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,537] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,558] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,562] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,599] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,599] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,601] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,601] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,602] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,602] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,602] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,603] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,603] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,603] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,605] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,606] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,606] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,607] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,607] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,608] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,608] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,608] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,609] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,609] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,614] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@19dbc3b] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:55:05,618] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1bdcbb2] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:55:05,621] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1db04ed] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:55:05,624] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14b2263: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:55:05,625] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,625] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,626] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,626] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,627] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,627] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,632] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,646] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,647] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,647] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,648] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,665] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,666] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,666] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,667] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,671] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,671] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,671] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,709] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:05,859] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:05,877] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:05,892] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,905] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:55:05,906] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,906] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,907] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:55:05,907] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:55:05,908] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:55:05,909] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 14:55:05,910] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 14:55:05,911] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:55:05,912] DEBUG | Invoking init method on bean 'startor': public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(298)
[VAMS][2014-08-01 14:55:05,913] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:55:05,969] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:05,987] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:06,004] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-127.0.0.1.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016, test/com.xiaohao.serviceApi.DemoService=override://192.168.1.35:20881/com.xiaohao.serviceApi.DemoService?category=configurators&dynamic=false&enabled=true&group=test&weight=200, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9908&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406873927779}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 14:55:06,019] DEBUG | Creating new ZookKeeper instance to connect to 127.0.0.1:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 14:55:06,019] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-127.0.0.1:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 14:55:06,029] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,030] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,030] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,030] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,031] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,031] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,032] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,032] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,032] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,033] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,033] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,034] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,034] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,034] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,035] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:55:06,037] INFO | Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1ee145b | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 14:55:06,044] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 14:55:06,068] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 14:55:06,068] INFO | Opening socket connection to server /127.0.0.1:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 14:55:06,068] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 14:55:06,071] INFO | Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 14:55:06,075] DEBUG | Session establishment request sent on 127.0.0.1/127.0.0.1:2181 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 14:55:06,099] INFO | Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x1478f7ec65f0007, negotiated timeout = 30000 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 14:55:06,101] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 14:55:06,101] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 14:55:06,102] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 14:55:06,102] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 14:55:06,114] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:06,130] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:55:06,139] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 14:55:06,167] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,484,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,195] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,485,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,207] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,486,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,220] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,487,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8340%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876105920,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8340%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876105920  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,221] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 14:55:06,232] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,488,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,244] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,489,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,257] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,490,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,265] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,490,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,277] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,490,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,293] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,491,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,306] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,492,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,318] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,493,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,319] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,493,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,320] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,493,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,331] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,494,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,343] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,495,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,354] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,496,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,357] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,496,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,358] DEBUG | Reading reply sessionid:0x1478f7ec65f0007, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,496,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:55:06,359] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 14:55:06,367] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14b2263: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 14:55:06,367] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 14:55:06,373] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:973)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:349)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:300)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:133)
	... 50 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 63 more
[VAMS][2014-08-01 14:57:20,290] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:57:20,372] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,373] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,379] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,379] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,381] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,381] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:57:20,389] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:57:20,389] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:57:20 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:57:20,428] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,429] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,429] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:57:20,438] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:57:20,440] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:57:20,460] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:57:20,467] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:57:20,471] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:57:20,495] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:57:20,499] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:57:20,504] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:57:20,526] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:57:20,539] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:57:20,594] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,595] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:57:20,595] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:57:20,608] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:57:20,609] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:57:20,611] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:57:20,612] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:57:20,614] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:57:20,643] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 14:57:20,654] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:57:20,776] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 14:57:20,776] DEBUG | Loaded 8 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:57:20,777] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@176d662: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:57:20,795] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,795] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,808] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,810] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,837] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,837] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,838] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,839] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,839] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,839] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,840] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,840] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,840] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,840] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,841] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,842] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,842] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,842] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,842] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,843] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,843] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,843] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,843] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,844] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,846] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e68a2b] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:57:20,848] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@14b2db7] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:57:20,850] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@6c9220] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:57:20,851] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@176d662: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,852] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,855] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,866] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,866] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,867] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,868] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,885] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,885] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,885] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,888] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:20,891] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:20,891] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:57:20,891] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:57:20,931] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:57:21,077] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:57:21,098] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:57:21,111] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:57:21,124] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:57:21,124] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,125] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,126] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:57:21,126] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,127] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,128] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1bcfbeb] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 14:57:21,130] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:57:21,132] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,133] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:57:21,135] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 14:57:21,135] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:57:21,135] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 14:57:21,136] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,136] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:57:21,136] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 14:57:21,137] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 14:57:21,137] INFO | Root WebApplicationContext: initialization completed in 845 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 14:59:53,337] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:59:53,412] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,413] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,421] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,421] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,422] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,423] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:59:53,427] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:59:53,427] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:59:53 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:59:53,459] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,459] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,460] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:59:53,466] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:59:53,468] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:59:53,486] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:59:53,489] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:59:53,496] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:59:53,524] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:59:53,527] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:59:53,532] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:59:53,556] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:59:53,572] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:59:53,620] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,621] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:59:53,621] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:59:53,633] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:59:53,634] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:59:53,635] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:59:53,635] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:59:53,637] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:59:53,656] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 14:59:53,665] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:59:53,790] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 14:59:53,791] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:59:53,791] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1912a56: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:59:53,811] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,811] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,827] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,832] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,860] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,860] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,862] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,863] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,863] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,863] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,864] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,865] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,865] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,865] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,867] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,867] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,867] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,867] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,868] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,869] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,871] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7bb2cb] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:59:53,873] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@de5cd9] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:59:53,875] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@13cb1eb] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:59:53,876] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1912a56: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:59:53,877] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:53,877] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:53,877] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:53,877] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:53,878] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,878] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,882] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,892] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,892] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,892] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,894] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,910] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,911] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,911] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,914] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:53,918] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:53,918] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:53,918] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:53,955] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,074] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,089] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,101] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:54,110] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:59:54,111] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:54,112] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:54,112] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:59:54,113] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:59:54,113] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:59:54,115] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 14:59:54,116] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 14:59:54,116] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:59:54,117] DEBUG | Invoking init method on bean 'startor': public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(298)
[VAMS][2014-08-01 14:59:54,118] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:59:54,155] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,171] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,202] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 14:59:54,220] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 14:59:54,221] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 14:59:54,233] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,233] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,234] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,234] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,235] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,235] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,236] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,236] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,236] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,237] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,237] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,237] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,238] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,238] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,238] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:59:54,240] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@154e38b | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 14:59:54,242] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 14:59:54,265] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 14:59:54,266] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 14:59:54,267] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 14:59:54,269] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 14:59:54,272] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 14:59:54,310] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f0008, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 14:59:54,313] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 14:59:54,314] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 14:59:54,314] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 14:59:54,314] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 14:59:54,323] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,332] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:59:54,340] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 14:59:54,363] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,499,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,389] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,500,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,402] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,501,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,414] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,502,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D6680%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876394123,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D6680%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876394123  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,415] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 14:59:54,427] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,503,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,438] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,504,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,457] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,505,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,465] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,505,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,469] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,505,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,479] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,506,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,491] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,507,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,504] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,508,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,505] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,508,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,506] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,508,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,517] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,509,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,537] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,510,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,549] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,511,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,551] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,511,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,558] DEBUG | Reading reply sessionid:0x1478f7ec65f0008, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,511,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:59:54,558] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 14:59:54,565] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1912a56: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 14:59:54,565] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 14:59:54,575] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:973)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:349)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:300)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:133)
	... 50 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 63 more
[VAMS][2014-08-01 15:06:04,848] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:06:04,942] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,943] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,948] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,949] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,951] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:04,951] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:06:04,958] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:06:04,959] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:06:04 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:06:05,000] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:05,000] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:05,000] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:06:05,007] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:06:05,009] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:06:05,027] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:06:05,033] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:06:05,038] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:06:05,065] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:06:05,069] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:06:05,077] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:06:05,100] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:06:05,116] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:06:05,158] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:05,159] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:06:05,159] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:06:05,169] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:06:05,169] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:06:05,170] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:06:05,171] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:06:05,172] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:06:05,197] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:06:05,205] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:06:05,238] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:06:05,240] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:06:05,241] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@10f243b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:06:05,357] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,357] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,372] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,375] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,408] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,409] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,410] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,410] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,411] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,411] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,412] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,413] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,413] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,413] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,415] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,415] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,415] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,415] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,416] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,416] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,416] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,417] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,417] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,417] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,420] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@f9659d] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:06:05,422] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1ac1adf] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:06:05,423] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1795327] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:06:05,425] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@10f243b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:06:05,425] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,425] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,425] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,426] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,426] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,426] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,429] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,438] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,438] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,439] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,440] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,463] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,464] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,464] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,467] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,471] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,472] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,472] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,526] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,654] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,668] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,683] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,695] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:06:05,695] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,696] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,696] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:06:05,697] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:06:05,697] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:06:05,699] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:06:05,699] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:06:05,703] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: AutowiredFieldElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:06:05,703] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:06:05,705] DEBUG | Processing injected method of bean 'startor': AutowiredFieldElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:06:05,709] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:06:05,754] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,772] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,786] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=6680&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876394123}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:06:05,800] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:06:05,800] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:06:05,808] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,808] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,808] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,809] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,809] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,810] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,811] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,811] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,811] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,812] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,812] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,813] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,813] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,813] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,813] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:06:05,815] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@12dcb8c | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:06:05,818] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:06:05,837] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:06:05,838] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:06:05,838] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:06:05,839] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:06:05,842] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:06:05,864] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000a, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:06:05,866] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:06:05,867] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:06:05,867] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:06:05,867] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:06:05,878] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,892] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:06:05,900] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:06:05,926] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,515,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,943] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,516,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,956] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,517,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,968] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,518,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8644%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876765714,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8644%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406876765714  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,968] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:06:05,981] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,519,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:05,992] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,520,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,004] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,521,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,010] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,521,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,014] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,521,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,034] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,522,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,053] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,523,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,066] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,524,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,068] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,524,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,069] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,524,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,078] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,525,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,090] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,526,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,102] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,527,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,104] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,527,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,105] DEBUG | Reading reply sessionid:0x1478f7ec65f000a, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,527,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:06:06,105] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:06:06,113] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@10f243b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:06:06,113] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:06:06,116] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
	... 49 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1017)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:960)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:858)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:480)
	... 51 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:10:30,260] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:10:30,351] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,352] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,359] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,360] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,363] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,364] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:10:30,372] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:10:30,373] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:10:30 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:10:30,432] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,433] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,433] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:10:30,444] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:10:30,447] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:10:30,470] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:10:30,475] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:10:30,481] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:10:30,509] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:10:30,521] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:10:30,532] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:10:30,547] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:10:30,557] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:10:30,589] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,590] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:10:30,591] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:10:30,603] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:10:30,604] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:10:30,606] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:10:30,607] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:10:30,609] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:10:30,646] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:10:30,661] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:10:30,803] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:10:30,804] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:10:30,804] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@75d174: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:10:30,824] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,824] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,840] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,844] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,884] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,885] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,888] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,888] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,889] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,889] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,891] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,891] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,892] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,892] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,894] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,895] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,895] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,895] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,896] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,896] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,897] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,897] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,897] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,898] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,902] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@f34a08] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:10:30,906] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1d88c1f] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:10:30,909] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1af7e68] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:10:30,911] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@75d174: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:10:30,912] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:30,912] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:30,912] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:30,912] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:30,913] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,913] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,917] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,933] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,933] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,934] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,937] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,967] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,968] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,968] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:30,971] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:30,975] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:30,975] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:30,976] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:31,012] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,153] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,166] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,178] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:31,188] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:10:31,189] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:31,190] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:31,190] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:10:31,191] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:10:31,192] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:10:31,193] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:10:31,193] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:10:31,197] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:10:31,198] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:10:31,199] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:10:31,199] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:10:31,248] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,264] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,276] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8644&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876765714}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:10:31,293] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:10:31,293] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:10:31,303] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,304] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,304] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,305] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,305] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,305] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,306] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,306] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,307] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,307] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,307] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,308] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,308] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,308] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,309] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:10:31,311] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1ab7626 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:10:31,314] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:10:31,331] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:10:31,331] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:10:31,331] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:10:31,333] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:10:31,335] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:10:31,354] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000b, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:10:31,356] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:10:31,357] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:10:31,357] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:10:31,357] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:10:31,367] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,383] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:10:31,395] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:10:31,426] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,530,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,443] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,531,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,466] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,532,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,495] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,533,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8332%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877031205,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8332%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877031205  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,495] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:10:31,516] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,534,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,534] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,535,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,546] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,536,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,550] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,536,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,1,0,0,0,1,426}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,553] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,536,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,568] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,537,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,579] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,538,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,594] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,539,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,596] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,539,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,599] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,539,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,612] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,540,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,624] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,541,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,637] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,542,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,637] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,542,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,638] DEBUG | Reading reply sessionid:0x1478f7ec65f000b, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,542,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:10:31,638] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:10:31,644] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@75d174: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:10:31,645] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:10:31,646] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:12:16,143] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:12:16,233] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,234] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,239] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,239] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,241] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,241] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:16,246] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:12:16,247] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:12:16 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:12:16,280] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,281] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,281] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:16,293] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:12:16,296] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:12:16,318] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:12:16,322] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:12:16,324] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:16,351] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:16,356] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:16,362] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:16,383] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:12:16,398] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:12:16,446] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,446] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:16,452] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:16,466] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:12:16,467] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:16,470] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:16,471] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:16,474] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:12:16,597] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:12:16,606] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:12:16,637] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:12:16,637] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:12:16,637] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@ec12f3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:12:16,655] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,655] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,672] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,677] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,715] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,715] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,716] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,717] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,717] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,717] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,718] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,718] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,719] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,719] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,721] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,721] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,722] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,722] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,722] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,722] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,723] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,723] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,723] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,723] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,726] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1af7e68] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:12:16,730] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1a462c9] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:12:16,733] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1423820] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ec12f3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:16,735] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,736] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,738] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,748] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,748] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,749] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,750] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,768] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,769] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,769] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,771] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:16,775] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:16,775] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:16,776] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:16,838] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:16,971] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:16,989] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,005] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:17,017] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:12:17,018] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:17,019] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:17,019] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:17,020] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:17,020] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:17,022] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:12:17,023] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:12:17,028] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:12:17,028] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:17,030] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:12:17,030] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:17,085] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,095] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,114] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8332&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877031205}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:12:17,133] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:12:17,133] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:12:17,142] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,143] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,143] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,143] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,143] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,144] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,144] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,144] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,145] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,145] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,145] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,146] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,146] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,146] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,147] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:17,148] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1044daf | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:12:17,150] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:12:17,171] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:12:17,171] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:12:17,172] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:12:17,173] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:12:17,176] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:12:17,550] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000d, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:12:17,552] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:12:17,553] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:12:17,553] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:12:17,553] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:12:17,561] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,574] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:17,581] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:12:17,720] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,553,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,773] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,554,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,786] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,555,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,798] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,556,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9276%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877137036,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9276%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877137036  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,798] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:12:17,810] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,557,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,822] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,558,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,835] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,559,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,841] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,559,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,2,0,0,0,2,548}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,847] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,559,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D5468%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877126296,'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,864] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,560,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,875] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,561,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,888] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,562,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,889] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,562,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,890] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,562,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,900] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,563,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,913] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,564,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,925] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,565,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,926] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,565,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,927] DEBUG | Reading reply sessionid:0x1478f7ec65f000d, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,565,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:17,928] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:12:17,938] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ec12f3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:12:17,938] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:12:17,940] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:14:20,701] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:14:20,793] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,794] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,799] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,800] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,801] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,801] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:14:20,806] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:14:20,806] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:14:20 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:14:20,842] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,843] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,843] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:14:20,849] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:14:20,853] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:14:20,873] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:14:20,877] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:14:20,879] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:14:20,903] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:14:20,912] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:14:20,920] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:14:20,938] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:14:20,950] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:14:20,992] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,994] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:14:20,995] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:14:21,007] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:14:21,008] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:14:21,009] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:14:21,009] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:14:21,011] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:14:21,038] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:14:21,044] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:14:21,169] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:14:21,170] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:14:21,170] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1174ec5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:14:21,199] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,199] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,217] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,219] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,251] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,252] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,253] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,254] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,254] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,254] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,255] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,256] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,256] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,256] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,258] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,258] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,259] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,259] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,259] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,260] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,260] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,260] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,261] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,261] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,264] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@13cb1eb] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:14:21,266] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1487b8b] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:14:21,270] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1794494] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:14:21,271] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1174ec5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:14:21,271] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,271] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,272] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,272] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,272] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,273] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,276] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,287] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,288] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,288] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,290] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,306] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,306] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,306] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,308] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,312] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,313] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,313] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,352] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,496] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,508] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,521] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,530] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:14:21,531] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,531] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,532] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:21,532] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:21,532] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:21,534] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:14:21,535] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:14:21,540] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:14:21,541] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:21,542] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:14:21,543] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:21,586] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,601] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,615] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:14:21,637] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:14:21,637] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:14:21,648] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,649] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,649] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,650] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,650] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,650] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,651] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,651] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,651] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,652] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,652] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,652] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,652] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,653] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,653] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:21,654] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1b7c63f | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:14:21,656] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:14:21,674] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:14:21,674] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:14:21,674] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:14:21,676] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:14:21,678] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:14:21,708] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000f, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:14:21,713] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:14:21,714] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:14:21,714] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:14:21,714] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:14:21,725] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,737] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:21,749] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:14:21,778] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,578,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,804] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,579,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,817] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,580,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,829] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,581,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8804%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877261548,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8804%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877261548  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,830] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:14:21,850] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,582,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,870] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,583,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,882] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,584,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,888] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,584,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,5,0,0,0,1,573}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,891] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,584,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8780%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877240413}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,903] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,585,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,915] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,586,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,928] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,587,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,929] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,587,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,930] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,587,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,948] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,588,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,960] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,589,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,972] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,590,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,973] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,590,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,974] DEBUG | Reading reply sessionid:0x1478f7ec65f000f, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,590,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:21,975] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:14:21,982] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1174ec5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:14:21,983] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:14:21,984] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:17:04,758] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:17:04,843] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,843] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,848] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,849] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,851] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,851] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:17:04,856] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:17:04,856] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:17:04 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:17:04,894] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,894] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:04,895] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:17:04,903] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:17:04,906] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:17:04,925] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:17:04,929] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:17:04,936] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:17:04,957] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:17:04,959] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:17:04,968] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:17:04,992] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:17:05,005] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:17:05,047] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:05,047] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:17:05,048] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:17:05,057] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:17:05,057] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:17:05,059] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:17:05,060] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:17:05,062] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:17:05,083] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:17:05,091] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:17:05,203] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:17:05,204] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:17:05,204] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@a0560e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:17:05,226] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,226] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,247] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,250] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,277] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,277] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,278] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,279] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,279] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,279] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,280] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,280] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,280] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,281] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,282] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,282] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,283] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,284] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,284] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,285] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,287] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e91485] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:17:05,289] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7cb66a] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:17:05,291] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@174d4c9] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:17:05,292] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@a0560e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:17:05,292] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,292] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,293] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,293] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,293] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,293] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,295] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,305] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,305] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,306] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,307] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,330] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,330] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,331] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,333] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,339] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,339] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,340] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,378] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,499] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,514] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,529] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,540] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:17:05,541] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,542] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,542] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:17:05,543] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:17:05,543] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:17:05,545] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:17:05,545] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:17:05,548] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:17:05,548] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:17:05,549] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:17:05,550] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:17:05,588] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,601] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,617] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:17:05,633] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:17:05,633] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:17:05,643] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,643] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,644] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,644] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,644] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,644] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,645] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,645] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,645] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,646] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,646] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,646] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,646] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,647] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,647] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:17:05,648] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@17a687b | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:17:05,650] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:17:05,671] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:17:05,671] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:17:05,671] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:17:05,676] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:17:05,678] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:17:05,705] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f0011, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:17:05,710] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:17:05,710] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:17:05,711] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:17:05,711] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:17:05,722] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,735] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:17:05,748] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:17:05,767] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,602,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,793] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,603,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,806] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,604,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,818] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,605,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8296%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877425554,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8296%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877425554  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,819] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:17:05,831] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,606,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,843] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,607,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,854] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,608,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,866] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,608,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{425,425,1406873134939,1406873134939,0,7,0,0,0,1,597}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,872] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,608,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7404%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877407454}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,884] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,609,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,896] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,610,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,909] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,611,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,910] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,611,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,911] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,611,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,921] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,612,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,932] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,613,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,945] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,614,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,946] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,614,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{452,452,1406873173557,1406873173557,0,0,0,0,0,0,452}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,947] DEBUG | Reading reply sessionid:0x1478f7ec65f0011, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,614,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:17:05,947] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:17:05,955] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@a0560e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:17:05,955] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:17:05,957] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:21:25,815] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:21:25,917] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,918] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,923] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,924] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,926] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,927] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:25,932] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:21:25,933] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:21:25 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:21:25,970] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,971] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:25,971] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:25,982] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:21:25,986] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:21:26,012] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:21:26,019] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:21:26,024] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:26,054] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:26,058] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:26,067] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:26,096] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:21:26,109] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:21:26,146] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:26,147] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:26,147] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:26,155] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:21:26,156] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:26,157] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:26,158] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:26,159] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:21:26,185] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:21:26,197] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:21:26,326] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:21:26,326] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:21:26,327] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@404eb2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:21:26,349] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,349] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,363] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,366] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,390] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,390] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,391] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,392] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,392] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,392] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,393] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,393] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,394] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,394] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,395] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,395] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,396] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,396] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,396] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,397] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,397] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,397] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,398] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,398] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,400] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1ac1adf] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:21:26,402] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1795327] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:21:26,404] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@968f9] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:21:26,405] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@404eb2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:21:26,405] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,406] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,410] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,431] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,432] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,432] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,434] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,461] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,462] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,462] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,464] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,471] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,471] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,471] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,517] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,658] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,680] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,696] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,707] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:21:26,707] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,708] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,709] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:26,710] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:26,710] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:26,713] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:21:26,713] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:21:26,717] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:21:26,717] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:26,719] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:21:26,720] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:26,761] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,779] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:26,798] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:21:26,813] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:21:26,813] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:21:26,823] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,823] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,823] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,824] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,824] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,824] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,824] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,825] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,825] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,825] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,826] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,826] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,826] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,826] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,827] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:26,828] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1548414 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:21:26,831] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:21:26,851] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:21:26,851] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:21:26,852] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:21:26,853] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:21:26,856] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:21:27,240] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479070c2fa0001, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:21:27,243] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:21:27,244] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:21:27,244] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:21:27,244] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:21:27,254] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:27,265] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:27,275] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:21:27,306] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,10,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,326] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,11,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,338] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,12,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,349] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,13,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9132%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877686725,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9132%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877686725  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,350] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:21:27,362] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,14,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,375] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,15,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,391] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,16,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,398] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,16,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,1,0,0,0,1,5}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,403] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,16,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9616%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877668194}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,415] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,17,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,426] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,18,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,439] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,19,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,442] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,19,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,444] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,19,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,459] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,20,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,472] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,484] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,22,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,485] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,22,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,488] DEBUG | Reading reply sessionid:0x1479070c2fa0001, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,22,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:27,489] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:21:27,498] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@404eb2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:21:27,499] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:21:27,501] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:24:21,722] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:24:21,800] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,801] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,807] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,808] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,809] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,809] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:21,816] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:24:21,817] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:24:21 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:24:21,853] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,854] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,854] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:21,860] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:24:21,864] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:24:21,881] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:24:21,885] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:24:21,887] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:21,910] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:21,918] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:21,928] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:21,943] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:24:21,956] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:24:21,991] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,991] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:21,992] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:22,002] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:24:22,002] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:22,004] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:22,004] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:22,005] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:24:22,026] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:24:22,033] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:24:22,140] INFO | Overriding bean definition for bean 'springContextUtil': replacing [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] with [Generic bean: class [com.xiaohao.dubbodemo.consumer.util.SpringContextUtil]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [consumer.xml]] | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(749)
[VAMS][2014-08-01 15:24:22,141] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:24:22,141] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@13638d4: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:24:22,160] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,161] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,180] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,183] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,224] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,225] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,227] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,227] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,227] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,228] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,228] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,229] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,229] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,229] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,231] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,231] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,231] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,231] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,232] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,232] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,232] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,232] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,233] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,233] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,235] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1abfbdc] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:24:22,239] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@13e02ed] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:24:22,241] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1756db3] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:24:22,242] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@13638d4: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:24:22,243] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,243] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,244] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,244] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,244] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,244] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,248] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,260] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,261] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,261] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,263] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,288] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,288] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,289] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,292] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,296] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,297] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,297] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,340] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,474] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,486] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,499] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,508] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:24:22,509] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,509] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,510] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:22,510] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:22,510] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:22,513] DEBUG | Found init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: public void com.xiaohao.dubbodemo.consumer.DubboCallor.test() | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(205)
[VAMS][2014-08-01 15:24:22,513] DEBUG | Registered init method on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@364492 | [main] org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.checkConfigMembers(272)
[VAMS][2014-08-01 15:24:22,517] DEBUG | Registered injected element on class [com.xiaohao.dubbodemo.consumer.DubboCallor]: ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(71)
[VAMS][2014-08-01 15:24:22,517] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:22,518] DEBUG | Processing injected method of bean 'startor': ResourceElement for com.xiaohao.dubbodemo.service.IDubboDemoService com.xiaohao.dubbodemo.consumer.DubboCallor.service | [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(85)
[VAMS][2014-08-01 15:24:22,519] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:22,561] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,583] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:22,598] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:24:22,616] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:24:22,616] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:24:22,625] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,625] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,626] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,626] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,626] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,626] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,627] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,627] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,627] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,628] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,628] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,628] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,628] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,629] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,629] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:22,630] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@141d19 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:24:22,633] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:24:22,654] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:24:22,654] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:24:22,655] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:24:22,656] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:24:22,659] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:24:23,165] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x14790742c0b0001, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:24:23,167] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:24:23,168] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:24:23,168] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:24:23,168] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:24:23,177] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:23,186] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:23,193] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:24:23,377] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,33,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,416] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,34,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,429] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,35,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,441] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,36,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8932%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877862524,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8932%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406877862524  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,441] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:24:23,453] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,37,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,465] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,38,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,477] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,39,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,490] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,39,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,2,0,0,0,2,28}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,495] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,39,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9616%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877668194,'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9380%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877851554}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,506] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,40,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,518] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,41,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,531] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,42,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,532] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,42,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,533] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,42,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,543] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,43,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,554] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,44,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,567] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,45,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,568] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,45,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,570] DEBUG | Reading reply sessionid:0x14790742c0b0001, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,45,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:23,570] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:24:23,582] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@13638d4: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:24:23,582] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:24:23,587] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:446)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:420)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	... 49 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 59 more
[VAMS][2014-08-01 15:44:11,256] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:44:11,325] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,326] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,331] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,332] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,333] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,333] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:44:11,337] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:44:11,338] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:44:11 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:44:11,375] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,375] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,376] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:44:11,382] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:44:11,384] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:44:11,400] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:44:11,404] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:44:11,406] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:44:11,424] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:44:11,427] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:44:11,432] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:44:11,455] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:44:11,468] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:44:11,502] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,503] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:44:11,504] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:44:11,514] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:44:11,515] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:44:11,516] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:44:11,517] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:44:11,518] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:44:11,541] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:44:11,548] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:44:11,649] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:44:11,649] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@14d4313: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:44:11,668] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,669] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,683] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,687] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,714] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,714] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,716] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,716] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,716] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,716] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,717] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,717] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,718] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,718] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,720] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,720] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,721] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,721] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,721] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,722] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,722] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,722] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,723] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,723] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,726] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1a21389] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:44:11,728] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e68a2b] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:44:11,731] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@14b2db7] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:44:11,733] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14d4313: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:44:11,733] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,733] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,734] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,734] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,734] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,735] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,737] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,750] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,750] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,751] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,752] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,770] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,770] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,771] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,772] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,777] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,778] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,778] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,816] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:11,941] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:11,954] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:11,967] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,977] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:44:11,978] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,979] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:11,979] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:44:11,980] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:44:11,981] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:44:11,982] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:44:11,983] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:44:12,018] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:12,031] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:12,043] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:44:12,057] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:44:12,057] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:44:12,065] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,065] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,065] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,066] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,066] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,066] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,066] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,067] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,067] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,067] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,067] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,068] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,068] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,068] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,068] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:44:12,070] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@18b995c | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:44:12,072] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:44:12,088] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:44:12,089] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:44:12,090] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:44:12,092] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:44:12,095] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:44:12,128] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940001, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:44:12,130] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:44:12,130] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:44:12,130] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:44:12,130] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:44:12,137] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:12,146] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:44:12,158] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:44:12,181] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,58,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,207] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,59,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,220] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,60,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,232] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,61,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7676%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406879051988,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7676%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406879051988  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,233] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:44:12,245] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,62,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,257] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,63,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,268] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,64,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,273] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,64,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,5,0,0,0,1,53}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,278] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,64,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9460%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879006328}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,290] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,65,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,301] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,66,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,314] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,67,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,316] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,67,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,321] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,67,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,334] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,68,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,347] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,69,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,360] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,70,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,362] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,70,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,364] DEBUG | Reading reply sessionid:0x1479085bf940001, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,70,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:44:12,364] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, urls: [empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:44:12,379] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14d4313: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-01 15:44:12,379] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-01 15:44:12,381] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Cannot resolve reference to bean 'demoService' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:336)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	... 51 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboDemoService. No provider available for the service com.xiaohao.dubbodemo.service.IDubboDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 56 more
[VAMS][2014-08-01 15:58:48,754] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:58:48,823] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,823] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,829] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,829] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,831] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,831] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:48,835] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:58:48,835] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:58:48 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:58:48,870] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,871] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:48,871] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:48,878] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:58:48,880] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:58:48,896] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:58:48,900] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:58:48,902] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:48,923] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:48,932] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:48,945] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:48,961] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:58:48,975] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:58:49,011] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:49,012] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:49,013] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:49,023] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:58:49,023] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:49,025] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:49,026] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:49,027] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:58:49,049] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 15:58:49,056] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:58:49,167] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:58:49,167] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@b81eaa: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:58:49,189] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,189] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,204] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,207] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,234] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,235] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,236] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,236] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,236] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,237] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,237] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,237] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,238] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,238] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,239] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,240] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,240] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,240] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,241] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,241] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,241] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,241] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,242] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,242] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,245] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e140bf] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:58:49,247] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6d23ea] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:58:49,249] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@7cf883] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b81eaa: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,251] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,252] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,252] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,254] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,264] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,264] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,265] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,266] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,283] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,284] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,284] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,285] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,289] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,289] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,289] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,327] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,441] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,455] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,466] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,478] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:58:49,479] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,480] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,480] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:49,481] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:49,481] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:49,482] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:49,484] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:49,521] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,535] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,547] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:58:49,560] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:58:49,561] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:58:49,569] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,569] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,569] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,570] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,570] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,570] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,570] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,571] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,571] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,571] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,571] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,572] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,572] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,572] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,573] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:49,574] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@385715 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:58:49,576] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:58:49,593] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:58:49,593] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:58:49,593] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:58:49,597] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:58:49,600] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:58:49,626] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940003, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:58:49,628] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:58:49,628] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:58:49,629] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:58:49,629] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:58:49,636] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,644] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,653] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:58:49,679] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,82,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,697] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,83,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,709] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,84,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,723] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,85,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8356%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406879929489,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8356%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406879929489  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,723] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:58:49,736] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,86,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,747] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,87,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,758] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,88,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,765] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,88,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,7,0,0,0,1,77}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,768] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,88,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9484%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879887260}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,778] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,89,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,791] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,90,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,803] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,91,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,804] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,91,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,810] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,91,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,824] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,92,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,836] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,93,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,848] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,94,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,850] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,94,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,851] DEBUG | Reading reply sessionid:0x1479085bf940003, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,94,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:49,851] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:58:49,881] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,925] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:49,944] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:50,024] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x01ba4806, /192.168.1.35:53954 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-01 15:58:50,024] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-01 15:58:50,066] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:50,082] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:50,091] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:50,104] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-01 15:58:50,111] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-01 15:58:50,419] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 15:58:50,420] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:50,420] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:50,420] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:50,421] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1e6cb2a] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:58:50,421] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:50,423] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,423] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,424] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,424] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:58:50,425] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:58:50,425] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:58:50,425] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:58:50,426] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,426] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:50,426] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:58:50,426] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:58:50,426] INFO | Root WebApplicationContext: initialization completed in 1670 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:58:59,852] DEBUG | Got ping response for sessionid: 0x1479085bf940003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:03:02,127] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 16:03:02,198] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,198] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,204] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,204] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,205] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,206] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:03:02,211] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 16:03:02,212] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 16:03:02 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 16:03:02,242] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,243] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,243] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:03:02,249] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 16:03:02,251] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 16:03:02,271] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 16:03:02,275] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 16:03:02,280] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:03:02,301] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:03:02,303] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:03:02,310] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:03:02,332] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 16:03:02,344] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 16:03:02,379] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,380] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:03:02,380] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:03:02,390] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 16:03:02,390] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:03:02,392] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:03:02,392] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:03:02,395] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 16:03:02,417] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 16:03:02,426] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 16:03:02,532] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 16:03:02,532] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@19c86c5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 16:03:02,553] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,554] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,568] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,571] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,599] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,599] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,601] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,601] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,601] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,601] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,602] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,602] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,602] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,602] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,604] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,604] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,604] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,604] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,605] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,606] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,610] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1c4d594] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 16:03:02,614] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1a722ef] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 16:03:02,616] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@857327] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 16:03:02,617] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@19c86c5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 16:03:02,618] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,618] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,618] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,618] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,619] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,619] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,621] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,632] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,632] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,633] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,634] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,653] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,653] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,653] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,655] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,659] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,660] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,660] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,699] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,810] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,823] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,835] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,846] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 16:03:02,847] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,847] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,847] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:02,848] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:03:02,848] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:03:02,849] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:03:02,850] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:02,889] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,907] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:02,920] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 16:03:02,934] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 16:03:02,934] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 16:03:02,941] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,942] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,942] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,942] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,943] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,943] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,943] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,943] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,944] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,944] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,944] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,944] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,945] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,945] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,945] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:03:02,946] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1357784 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 16:03:02,948] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 16:03:02,966] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 16:03:02,966] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 16:03:02,966] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 16:03:02,968] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 16:03:02,970] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 16:03:02,993] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940005, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 16:03:02,995] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 16:03:02,995] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 16:03:02,995] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 16:03:02,995] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 16:03:03,002] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,010] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,018] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 16:03:03,047] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,106,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,065] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,107,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,077] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,108,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,090] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,109,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8980%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406880182854,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8980%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406880182854  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,091] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 16:03:03,110] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,110,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,123] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,111,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,134] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,112,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,139] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,112,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,9,0,0,0,1,101}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,143] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,112,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8176%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406880165057}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,154] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,113,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,167] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,114,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,179] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,115,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,180] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,115,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,185] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,115,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,200] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,116,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,212] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,117,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,224] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,118,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,225] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,118,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,226] DEBUG | Reading reply sessionid:0x1479085bf940005, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,118,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:03:03,226] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 16:03:03,253] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,296] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,310] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,387] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x0174e4b3, /192.168.1.35:54521 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-01 16:03:03,389] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-01 16:03:03,418] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,435] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,445] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:03:03,463] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-01 16:03:03,472] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-01 16:03:03,778] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 16:03:03,778] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:03:03,779] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:03,779] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:03,780] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a40fff] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 16:03:03,781] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:03:03,782] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,783] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,783] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,783] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:03:03,785] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 16:03:03,785] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:03:03,785] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 16:03:03,786] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,786] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:03:03,786] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 16:03:03,787] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 16:03:03,787] INFO | Root WebApplicationContext: initialization completed in 1658 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 16:11:07,806] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 16:11:07,878] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,878] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,884] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,884] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,886] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,886] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:11:07,891] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 16:11:07,891] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 16:11:07 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 16:11:07,923] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,924] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:07,924] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:11:07,931] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 16:11:07,933] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 16:11:07,950] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 16:11:07,954] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 16:11:07,958] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:11:07,979] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:11:07,983] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:11:07,988] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:11:08,012] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 16:11:08,029] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 16:11:08,068] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:08,069] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:11:08,069] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:11:08,082] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 16:11:08,082] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:11:08,084] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:11:08,085] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:11:08,086] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 16:11:08,117] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 16:11:08,127] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 16:11:08,238] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 16:11:08,239] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@12d0430: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 16:11:08,260] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,261] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,278] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,280] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,313] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,313] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,314] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,315] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,315] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,315] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,316] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,316] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,316] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,317] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,319] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,319] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,320] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,320] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,320] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,320] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,321] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,321] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,321] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,321] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,325] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@861a09] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 16:11:08,327] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@176b9ea] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 16:11:08,329] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@82f392] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 16:11:08,330] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@12d0430: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,331] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,332] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,334] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,345] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,345] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,345] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,347] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,363] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,364] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,364] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,367] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,370] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,371] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,371] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,407] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,521] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,542] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,555] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,565] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 16:11:08,565] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,566] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,566] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:08,567] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:11:08,567] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:11:08,568] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:11:08,569] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:08,603] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,619] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:08,631] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 16:11:08,645] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 16:11:08,645] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 16:11:08,659] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,659] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,660] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,660] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,660] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,661] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,661] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,661] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,662] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,662] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,663] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,663] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,663] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,664] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,664] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:11:08,665] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@53033e | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 16:11:08,667] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 16:11:08,687] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 16:11:08,687] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 16:11:08,688] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 16:11:08,690] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 16:11:08,692] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 16:11:08,964] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940007, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 16:11:08,967] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 16:11:08,968] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 16:11:08,968] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 16:11:08,968] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 16:11:08,984] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,001] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,013] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 16:11:09,064] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,130,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,088] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,131,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,113] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,132,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,138] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,133,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9724%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406880668574,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9724%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406880668574  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,138] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 16:11:09,149] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,134,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,163] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,135,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,175] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,136,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,181] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,136,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,11,0,0,0,1,125}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,185] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,136,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7040%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406880649905}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,198] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,137,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,217] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,138,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,228] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,139,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,235] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,139,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,236] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,139,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,250] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,140,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,262] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,141,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,275] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,142,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,276] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,142,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,277] DEBUG | Reading reply sessionid:0x1479085bf940007, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,142,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:11:09,277] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 16:11:09,305] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,341] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,351] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,440] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x00b92956, /192.168.1.35:55194 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-01 16:11:09,441] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-01 16:11:09,477] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,493] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,505] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:11:09,517] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-01 16:11:09,525] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-01 16:11:09,828] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 16:11:09,831] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 16:11:09,831] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:11:09,831] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:09,832] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:09,833] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@898b41] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 16:11:09,833] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:11:09,835] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,835] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,836] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,836] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:11:09,838] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 16:11:09,838] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:11:09,838] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 16:11:09,838] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,839] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:11:09,839] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 16:11:09,839] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 16:11:09,840] INFO | Root WebApplicationContext: initialization completed in 2032 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 16:11:19,278] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:29,278] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:39,278] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:49,279] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:59,280] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:09,281] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:19,282] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:29,285] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:39,286] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:49,284] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:50,152] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-01 16:12:59,285] DEBUG | Got ping response for sessionid: 0x1479085bf940007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:49:11,221] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 17:49:11,267] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:49:11,268] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:49:11,270] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:49:11,270] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:49:11,272] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:49:11,272] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 17:49:11,276] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 17:49:11,277] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 17:49:11 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 17:49:11,298] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:49:11,298] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:49:11,299] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 17:49:11,302] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 17:49:11,305] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 17:49:11,322] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 17:49:11,325] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 17:49:11,330] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 17:49:11,348] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 17:49:11,351] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 17:49:11,356] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 17:49:11,370] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 17:49:11,378] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 17:49:11,396] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:49:11,397] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:49:11,397] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 17:49:11,404] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 17:49:11,404] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 17:49:11,405] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 17:49:11,406] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 17:49:11,407] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 17:49:11,427] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-01 17:49:11,433] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 17:49:11,454] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 17:49:11,454] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1e779a7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 17:49:11,464] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,464] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,473] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,475] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,495] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,496] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,497] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,497] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,497] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,498] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,498] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,499] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,499] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,499] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,501] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,501] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,502] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,502] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,502] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,503] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,503] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,503] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,503] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,504] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,505] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@13d5f21] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 17:49:11,509] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16d46d7] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 17:49:11,510] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@16feee5] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 17:49:11,511] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e779a7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 17:49:11,512] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:11,512] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:11,512] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:11,512] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:11,513] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,513] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,515] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,521] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,522] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,522] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,524] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,534] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,534] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,534] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,536] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,540] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,540] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,540] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,564] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:11,723] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:11,736] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:11,748] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,757] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 17:49:11,758] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:11,758] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:11,758] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:11,759] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:49:11,759] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:49:11,760] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:49:11,761] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:11,798] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:11,807] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:11,822] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 17:49:11,836] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 17:49:11,837] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 17:49:11,841] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,842] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,842] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,843] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,843] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,843] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,843] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,844] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,844] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,844] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,845] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,845] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,846] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,846] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,846] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:49:11,847] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@b17e0a | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 17:49:11,849] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 17:49:11,865] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 17:49:11,865] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 17:49:11,866] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 17:49:11,867] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 17:49:11,869] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 17:49:11,898] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf94000a, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 17:49:11,899] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 17:49:11,900] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 17:49:11,900] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 17:49:11,900] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 17:49:11,910] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:11,923] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:11,932] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 17:49:11,952] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,163,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:11,971] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,164,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:11,984] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,165,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:11,996] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,166,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8148%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406886551765,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8148%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1406886551765  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:11,996] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 17:49:12,011] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,167,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,023] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,168,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,036] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,169,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,040] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,169,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{4,4,1406877668741,1406877668741,0,15,0,0,0,1,158}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,043] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,169,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7736%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406886402132}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,056] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,170,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,068] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,171,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,081] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,172,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,082] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,172,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,083] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,172,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,092] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,173,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,106] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,174,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,118] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,175,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,119] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,175,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{22,22,1406877687473,1406877687473,0,0,0,0,0,0,22}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,121] DEBUG | Reading reply sessionid:0x1479085bf94000a, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,175,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:49:12,122] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 17:49:12,141] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:12,183] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:12,200] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:12,281] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x018b0b4a, /192.168.1.35:50080 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-01 17:49:12,281] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-01 17:49:12,303] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:12,313] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:12,327] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:49:12,341] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-01 17:49:12,347] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-01 17:49:12,528] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 17:49:12,530] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 17:49:12,531] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:49:12,531] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:12,531] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:12,532] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@793542] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 17:49:12,533] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:49:12,534] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:49:12,535] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:49:12,535] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:49:12,536] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 17:49:12,537] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 17:49:12,537] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 17:49:12,537] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 17:49:12,537] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:49:12,538] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:49:12,538] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 17:49:12,539] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 17:49:12,539] INFO | Root WebApplicationContext: initialization completed in 1314 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 10:07:40,979] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 10:07:41,030] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:41,031] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:41,035] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:41,036] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:41,038] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:41,038] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:07:41,042] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 10:07:41,043] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 10:07:41 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 10:07:41,063] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:41,063] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:41,064] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:07:41,067] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 10:07:41,070] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 10:07:41,088] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 10:07:41,091] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 10:07:41,094] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:07:41,115] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:07:41,118] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:07:41,126] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:07:41,143] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 10:07:41,152] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 10:07:41,172] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:41,173] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:41,173] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:07:41,181] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 10:07:41,181] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:07:41,182] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:07:41,183] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:07:41,184] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 10:07:41,200] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 10:07:41,205] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 10:07:41,232] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 10:07:41,232] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1a81bd5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 10:07:41,242] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,243] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,253] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,255] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,272] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,273] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,274] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,274] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,274] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,274] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,275] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,275] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,275] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,276] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,278] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,278] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,279] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,279] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,279] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,280] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,280] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,280] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,280] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,281] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,282] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e14de0] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 10:07:41,283] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16a8823] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 10:07:41,284] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@53bbfa] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 10:07:41,285] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a81bd5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 10:07:41,286] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:41,286] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:41,286] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:41,286] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:41,286] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,287] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,288] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,298] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,298] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,301] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,303] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,316] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,317] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,317] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,319] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,322] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,323] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,323] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,351] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:41,514] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:41,527] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:41,540] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,550] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 10:07:41,551] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:41,551] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:41,551] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:41,552] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:41,552] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:41,553] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:41,554] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:41,593] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:41,602] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:41,615] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 10:07:41,625] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 10:07:41,625] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 10:07:41,630] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,631] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,631] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,631] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,632] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,632] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,632] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,632] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,633] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,633] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,633] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,634] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,634] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,634] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,634] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:41,635] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@aad0b | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 10:07:41,637] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 10:07:41,652] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:07:41,652] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 10:07:41,653] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 10:07:41,655] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:07:41,657] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:07:41,683] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479ebbf48a0002, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 10:07:41,684] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:07:41,684] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:07:41,684] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:07:41,684] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 10:07:41,695] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:41,707] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:41,715] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 10:07:41,744] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,8589934607,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,775] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,8589934608,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,800] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,8589934609,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,813] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,8589934610,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2268%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407118061559,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2268%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407118061559  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,813] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 10:07:41,845] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,8589934611,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,878] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,8589934612,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,911] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,8589934613,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,915] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,8589934613,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,1,0,0,0,1,8589934602}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,917] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,8589934613,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D3388%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407118039298}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,932] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,8589934614,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,951] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,8589934615,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,989] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,8589934616,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,992] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,8589934616,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:41,993] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,8589934616,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:42,025] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,8589934617,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:42,063] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,8589934618,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:42,088] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,8589934619,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:42,089] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,8589934619,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:42,091] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,8589934619,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:42,091] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 10:07:42,110] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:42,148] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:42,161] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:42,229] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x005afcb1, /192.168.1.35:50962 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 10:07:42,230] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 10:07:42,253] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:42,265] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:42,279] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:42,292] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 10:07:42,305] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 10:07:42,397] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:07:42,402] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:07:42,403] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:42,403] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:42,403] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:42,405] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4cdac8] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 10:07:42,405] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:42,406] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:42,407] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:42,407] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:42,407] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:07:42,408] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 10:07:42,408] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:07:42,408] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 10:07:42,409] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:42,409] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:42,409] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 10:07:42,409] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 10:07:42,410] INFO | Root WebApplicationContext: initialization completed in 1428 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 10:07:42,517] INFO |  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(450)
[VAMS][2014-08-04 10:07:42,517] INFO |  [DUBBO] Close all registries [zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2268&timestamp=1407118061586], dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(63)
[VAMS][2014-08-04 10:07:42,518] INFO |  [DUBBO] Destroy registry:zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2268&timestamp=1407118061586, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(485)
[VAMS][2014-08-04 10:07:42,518] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 10:07:42,541] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 20,2  replyHeader:: 20,8589934620,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2268%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407118061559,-1  response:: null | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:42,541] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 10:07:42,542] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 10:07:42,542] INFO |  [DUBBO] Destroy unsubscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(510)
[VAMS][2014-08-04 10:07:42,542] DEBUG | Closing ZkClient... | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(915)
[VAMS][2014-08-04 10:07:42,542] INFO | Terminate ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(82)
[VAMS][2014-08-04 10:07:42,543] DEBUG | Closing ZooKeeper connected to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 | [DubboShutdownHook] org.I0Itec.zkclient.ZkConnection.close(77)
[VAMS][2014-08-04 10:07:42,543] DEBUG | Closing session: 0x1479ebbf48a0002 | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(533)
[VAMS][2014-08-04 10:07:42,543] DEBUG | Closing client for session: 0x1479ebbf48a0002 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.close(1315)
[VAMS][2014-08-04 10:07:42,573] DEBUG | Reading reply sessionid:0x1479ebbf48a0002, packet:: clientPath:null serverPath:null finished:false header:: 21,-11  replyHeader:: 21,8589934621,0  request:: null response:: null | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:42,573] DEBUG | Disconnecting client for session: 0x1479ebbf48a0002 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.disconnect(1299)
[VAMS][2014-08-04 10:07:42,574] INFO | Session: 0x1479ebbf48a0002 closed | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(544)
[VAMS][2014-08-04 10:07:42,574] DEBUG | Closing ZkClient...done | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(928)
[VAMS][2014-08-04 10:07:42,574] INFO |  [DUBBO] Close dubbo connect: /192.168.1.35:50962-->/192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(407)
[VAMS][2014-08-04 10:07:42,575] INFO | EventThread shut down | [main-EventThread] org.apache.zookeeper.ClientCnxn$EventThread.run(516)
[VAMS][2014-08-04 10:07:42,575] INFO |  [DUBBO] Close netty channel [id: 0x005afcb1, /192.168.1.35:50962 => /192.168.1.35:20881], dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-04 10:07:42,577] INFO |  [DUBBO] Close dubbo connect: 192.168.1.35:0-->192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(421)
[VAMS][2014-08-04 10:07:42,577] INFO |  [DUBBO] Destroy reference: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(63)
[VAMS][2014-08-04 10:07:42,580] INFO |  [DUBBO] disconected from /192.168.1.35:20881,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboSharedHandler-thread-1] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 10:07:43,036] INFO | Closing Root WebApplicationContext: startup date [Mon Aug 04 10:07:41 CST 2014]; root of context hierarchy | [Shutdown] org.springframework.context.support.AbstractApplicationContext.doClose(873)
[VAMS][2014-08-04 10:07:43,036] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Shutdown] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:43,037] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a81bd5: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Shutdown] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 10:07:43,037] DEBUG | Invoking destroy() on bean with name 'demoService' | [Shutdown] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 10:07:43,037] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, dubbo version: 2.5.3, current host: 192.168.1.35 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 10:08:33,476] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 10:08:33,548] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:08:33,549] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:08:33,554] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:08:33,555] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:08:33,556] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:08:33,557] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:08:33,561] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 10:08:33,561] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 10:08:33 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 10:08:33,592] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:08:33,592] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:08:33,593] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:08:33,599] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 10:08:33,601] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 10:08:33,620] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 10:08:33,624] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 10:08:33,626] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:08:33,646] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:08:33,648] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:08:33,659] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:08:33,676] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 10:08:33,691] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 10:08:33,724] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:08:33,725] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:08:33,726] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:08:33,740] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 10:08:33,740] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:08:33,742] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:08:33,743] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:08:33,744] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 10:08:33,766] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 10:08:33,773] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 10:08:33,874] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 10:08:33,875] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@2fe032: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 10:08:33,898] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:33,899] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:33,914] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:33,917] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:33,948] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:33,949] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:33,950] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:33,950] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:33,951] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:33,951] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:33,952] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:33,952] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:33,952] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:33,952] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:33,954] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:33,954] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:33,954] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:33,955] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:33,955] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:33,956] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:33,956] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:33,957] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:33,957] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:33,958] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:33,960] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@e3f02a] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 10:08:33,962] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1babddb] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 10:08:33,964] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@7bb2cb] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 10:08:33,966] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2fe032: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 10:08:33,966] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:33,966] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:33,967] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:33,967] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:33,967] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:33,967] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:33,970] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:33,985] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:33,985] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:33,985] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:33,987] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:34,004] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:34,004] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:34,004] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:34,007] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:34,010] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:34,010] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:34,010] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:34,047] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:34,166] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:34,183] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:34,194] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:34,204] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 10:08:34,205] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:34,206] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:34,207] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:34,207] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:08:34,207] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:08:34,209] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:08:34,211] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:34,246] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:34,260] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:34,272] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2268&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118061559, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 10:08:34,288] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 10:08:34,289] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 10:08:34,297] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,297] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,297] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,298] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,298] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,298] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,299] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,299] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,299] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,299] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,300] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,300] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,301] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,301] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,302] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:08:34,303] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1f31432 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 10:08:34,307] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 10:08:34,325] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 10:08:34,325] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:08:34,326] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 10:08:34,328] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:08:34,331] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:08:34,359] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479ebbf48a0003, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 10:08:34,361] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:08:34,361] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:08:34,361] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:08:34,361] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 10:08:34,369] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:34,379] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:34,389] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 10:08:34,426] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,8589934623,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,464] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,8589934624,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,488] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,8589934625,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,513] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,8589934626,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D4892%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407118114216,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D4892%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407118114216  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,513] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 10:08:34,545] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,8589934627,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,570] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,8589934628,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,609] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,8589934629,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,616] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,8589934629,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,1,0,0,0,1,8589934602}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,619] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,8589934629,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D3388%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407118039298}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,728] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,8589934630,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,889] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,8589934631,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,930] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,8589934632,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,932] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,8589934632,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,934] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,8589934632,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,958] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,8589934633,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:34,969] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,8589934634,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:35,010] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,8589934635,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:35,011] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,8589934635,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:35,012] DEBUG | Reading reply sessionid:0x1479ebbf48a0003, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,8589934635,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:08:35,012] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 10:08:35,035] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:35,074] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:35,085] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:35,174] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x001a2cc7, /192.168.1.35:50974 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 10:08:35,174] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 10:08:35,202] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:35,216] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:35,225] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:08:35,241] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 10:08:35,247] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 10:08:35,410] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:08:35,412] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:08:35,413] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:08:35,413] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:35,413] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:35,415] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@9d1714] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 10:08:35,415] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:08:35,417] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:08:35,417] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:08:35,417] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:08:35,417] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:08:35,419] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 10:08:35,419] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:08:35,419] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 10:08:35,420] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:08:35,420] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:08:35,421] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 10:08:35,421] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 10:08:35,421] INFO | Root WebApplicationContext: initialization completed in 1942 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 10:08:45,013] DEBUG | Got ping response for sessionid: 0x1479ebbf48a0003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:08:45,744] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0003, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:08:45,845] DEBUG | Received event: WatchedEvent state:Disconnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:08:45,845] INFO | zookeeper state changed (Disconnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:08:45,845] DEBUG | New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@63f6ea] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-04 10:08:45,845] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:08:45,845] DEBUG | Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@63f6ea] | [ZkClient-EventThread-20-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-04 10:08:45,846] DEBUG | Delivering event #1 done | [ZkClient-EventThread-20-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-04 10:08:46,484] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:00,712] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 10:09:00,786] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:09:00,786] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:09:00,793] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:09:00,793] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:09:00,795] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:09:00,795] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:09:00,799] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 10:09:00,800] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 10:09:00 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 10:09:00,832] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:09:00,833] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:09:00,833] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:09:00,841] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 10:09:00,843] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 10:09:00,860] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 10:09:00,864] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 10:09:00,868] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:09:00,893] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:09:00,896] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:09:00,909] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:09:00,924] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 10:09:00,940] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 10:09:00,978] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:09:00,978] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:09:00,979] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:09:00,990] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 10:09:00,990] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:09:00,992] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:09:00,992] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:09:00,994] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 10:09:01,016] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 10:09:01,023] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 10:09:01,134] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 10:09:01,135] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1061299: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 10:09:01,154] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,154] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,168] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,171] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,201] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,201] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,203] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,203] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,203] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,203] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,204] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,205] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,205] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,206] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,208] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,208] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,208] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,209] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,209] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,209] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,209] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,210] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,210] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,210] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,213] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@17b2712] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 10:09:01,215] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@a6aa31] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 10:09:01,217] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1b0bf9a] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 10:09:01,218] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1061299: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 10:09:01,218] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:09:01,219] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:09:01,219] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:09:01,219] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:09:01,219] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,219] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,222] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,232] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,232] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,233] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,234] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,251] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,251] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,251] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,253] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,257] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,258] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,258] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,294] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:09:01,416] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:09:01,430] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:09:01,442] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,452] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 10:09:01,452] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:09:01,453] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:09:01,453] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:09:01,454] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:09:01,454] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:09:01,456] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:09:01,457] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:09:01,496] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:09:01,505] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:09:01,521] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 10:09:01,535] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 10:09:01,535] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 10:09:01,546] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,547] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,547] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,547] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,547] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,548] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,548] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,548] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,549] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,549] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,549] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,549] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,550] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,550] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,550] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:09:01,551] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@311410 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 10:09:01,553] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 10:09:01,572] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 10:09:01,572] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:01,572] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 10:09:02,569] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:02,570] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:02,571] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:02,784] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:02,789] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:02,793] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:02,797] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:03,624] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:04,625] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:04,626] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:04,626] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:05,455] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:06,456] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:06,457] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:06,457] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:07,631] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:07,633] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:07,633] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:07,636] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:08,695] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:09,696] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:09,696] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:09,697] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:10,478] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:11,482] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:11,482] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:11,482] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:12,970] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:12,971] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:12,971] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:12,975] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:14,038] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:15,039] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:15,040] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:15,040] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:15,862] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:16,863] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:16,863] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:16,864] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:18,506] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:18,508] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:18,508] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:18,512] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:19,560] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:20,560] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:20,560] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:20,561] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:20,855] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:21,856] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:21,857] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:21,857] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:23,573] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:23,574] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:23,574] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:23,577] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:24,432] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:25,433] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:25,433] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:25,433] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:25,593] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:26,593] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:26,593] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:26,594] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:28,404] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:28,405] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:28,406] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:28,410] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:28,753] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:29,748] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:29,748] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:29,749] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:30,434] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:31,445] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:31,445] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:31,445] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:32,988] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:32,990] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:32,991] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:32,992] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:33,993] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:35,003] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:35,003] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:35,004] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:35,464] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:36,465] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:36,465] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:36,466] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:38,343] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:38,352] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:38,352] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:38,355] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:38,706] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:39,712] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:39,712] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:39,712] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:40,068] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:41,068] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:41,068] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:41,069] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:01,559] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 10:11:01,635] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:11:01,636] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:11:01,643] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:11:01,643] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:11:01,645] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:11:01,645] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:11:01,649] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 10:11:01,650] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 10:11:01 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 10:11:01,683] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:11:01,684] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:11:01,684] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:11:01,692] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 10:11:01,694] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 10:11:01,712] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 10:11:01,716] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 10:11:01,718] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:11:01,739] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:11:01,742] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:11:01,756] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:11:01,773] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 10:11:01,787] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 10:11:01,826] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:11:01,827] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:11:01,828] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:11:01,843] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 10:11:01,843] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:11:01,844] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:11:01,845] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:11:01,846] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 10:11:01,870] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 10:11:01,878] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 10:11:01,987] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 10:11:01,987] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@6e10d8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 10:11:02,007] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,008] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,023] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,025] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,060] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,061] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,062] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,062] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,062] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,063] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,063] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,063] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,064] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,064] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,065] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,065] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,066] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,066] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,066] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,066] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,066] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,067] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,067] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,067] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,070] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@177039] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 10:11:02,072] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1a7dd7b] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 10:11:02,074] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1450f1f] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 10:11:02,075] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6e10d8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 10:11:02,075] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:11:02,075] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:11:02,076] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:11:02,076] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:11:02,076] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,077] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,079] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,090] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,090] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,091] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,093] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,115] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,115] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,115] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,117] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,120] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,121] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,121] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,156] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:11:02,277] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:11:02,295] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:11:02,307] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,317] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 10:11:02,318] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:11:02,318] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:11:02,319] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:11:02,319] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:11:02,319] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:11:02,320] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:11:02,322] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:11:02,358] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:11:02,367] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:11:02,385] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 10:11:02,402] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 10:11:02,402] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 10:11:02,410] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,410] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,411] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,411] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,412] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,412] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,412] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,413] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,413] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,413] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,413] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,414] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,414] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,414] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,415] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:11:02,416] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1f9e6e5 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 10:11:02,418] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 10:11:02,435] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 10:11:02,435] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:02,436] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 10:11:02,437] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:02,440] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:02,441] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:03,421] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:04,434] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:04,435] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:04,435] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:05,264] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:06,275] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:06,276] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:06,276] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:08,065] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:08,066] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:08,066] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:08,068] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:09,156] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:10,159] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:10,159] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:10,160] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:10,335] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:11,344] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:11,344] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:11,345] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:13,285] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:13,286] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:13,286] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:13,290] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:14,332] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:15,328] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:15,329] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:15,329] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:15,843] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:16,844] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:16,845] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:16,845] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:18,468] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:18,469] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:18,470] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:18,472] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:19,348] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:20,348] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:20,349] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:20,349] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:21,015] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:22,017] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:22,017] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:22,018] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:23,314] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:23,315] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:23,316] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:23,319] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:24,038] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:25,039] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:25,039] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:25,039] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:25,698] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:15:20,387] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 10:15:20,462] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:15:20,463] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:15:20,468] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:15:20,468] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:15:20,470] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:15:20,470] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:15:20,475] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 10:15:20,475] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 10:15:20 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 10:15:20,511] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:15:20,511] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:15:20,511] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:15:20,518] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 10:15:20,520] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 10:15:20,537] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 10:15:20,541] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 10:15:20,543] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:15:20,561] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:15:20,565] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:15:20,579] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:15:20,595] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 10:15:20,610] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 10:15:20,650] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:15:20,651] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:15:20,652] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:15:20,670] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 10:15:20,671] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:15:20,674] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:15:20,674] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:15:20,676] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 10:15:20,704] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 10:15:20,711] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 10:15:20,823] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 10:15:20,823] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@9aa764: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 10:15:20,843] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,843] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,859] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:20,862] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:20,891] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,892] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,893] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:20,894] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:20,894] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,894] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,895] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:20,895] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:20,895] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,896] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,897] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:20,897] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:20,897] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,897] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,898] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:20,898] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:20,898] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,898] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,898] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:20,899] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:20,901] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@138ef1d] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 10:15:20,904] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@149a2c8] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 10:15:20,905] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@199049] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 10:15:20,907] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@9aa764: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 10:15:20,907] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:20,907] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:20,907] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:20,907] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:20,908] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,908] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,911] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:20,921] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:20,921] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,921] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,923] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:20,939] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:20,939] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,939] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,942] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:20,946] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:20,946] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:20,946] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:20,980] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:21,101] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:21,117] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:21,129] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:21,141] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 10:15:21,142] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:21,142] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:21,143] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:21,143] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:15:21,144] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:15:21,145] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:15:21,146] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:21,180] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:21,190] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:21,207] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 10:15:21,222] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 10:15:21,222] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 10:15:21,230] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,230] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,231] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,231] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,231] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,232] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,232] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,232] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,232] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,233] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,233] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,233] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,233] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,234] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,234] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:15:21,235] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1602bbc | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 10:15:21,237] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 10:15:21,254] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 10:15:21,254] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:15:21,255] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 10:15:22,253] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:15:22,254] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:15:22,255] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:15:23,287] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:15:23,289] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:15:23,293] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:15:23,326] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479ecc05430000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 10:15:23,328] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:15:23,329] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:15:23,329] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:15:23,329] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 10:15:23,347] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:23,363] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:23,370] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 10:15:23,421] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,17179869186,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,470] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,17179869187,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,494] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,17179869188,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,533] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,17179869189,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407118521150,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407118521150  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,534] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 10:15:23,557] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,17179869190,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,580] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,17179869191,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,605] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,17179869192,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,615] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,17179869192,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,3,0,0,0,1,12884901897}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,624] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,17179869192,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6968%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407118404744}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,654] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,17179869193,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,687] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,17179869194,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,704] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,17179869195,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,707] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,17179869195,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,713] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,17179869195,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,740] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,17179869196,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,761] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,17179869197,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,785] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,17179869198,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,787] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,17179869198,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,788] DEBUG | Reading reply sessionid:0x1479ecc05430000, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,17179869198,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:15:23,789] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 10:15:23,822] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:23,859] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:23,869] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:23,951] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x0059e205, /192.168.1.35:51375 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 10:15:23,951] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 10:15:23,988] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:24,000] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:24,012] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:15:24,024] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 10:15:24,032] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 10:15:24,245] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:15:24,248] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:15:24,248] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:15:24,249] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:24,249] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:24,251] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@18787c9] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 10:15:24,251] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:15:24,254] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:15:24,254] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:15:24,255] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:15:24,255] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:15:24,256] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 10:15:24,257] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:15:24,258] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 10:15:24,258] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:15:24,259] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:15:24,259] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 10:15:24,260] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 10:15:24,260] INFO | Root WebApplicationContext: initialization completed in 3871 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 10:15:33,790] DEBUG | Got ping response for sessionid: 0x1479ecc05430000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:23:01,771] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 10:23:01,844] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:23:01,846] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:23:01,851] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:23:01,851] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:23:01,853] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:23:01,853] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:23:01,857] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 10:23:01,858] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 10:23:01 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 10:23:01,891] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:23:01,891] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:23:01,892] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:23:01,899] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 10:23:01,902] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 10:23:01,919] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 10:23:01,923] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 10:23:01,929] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:23:01,951] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:23:01,954] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:23:01,965] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:23:01,982] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 10:23:01,996] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 10:23:02,035] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:23:02,035] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:23:02,036] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:23:02,047] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 10:23:02,048] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:23:02,049] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:23:02,050] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/consumer/WEB-INF/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:23:02,051] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 10:23:02,077] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\consumer\WEB-INF\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 10:23:02,085] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 10:23:02,196] DEBUG | Loaded 9 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 10:23:02,197] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@14b9b80: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 10:23:02,218] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,218] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,235] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,239] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,269] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,270] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,271] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,271] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,271] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,272] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,272] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,272] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,273] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,273] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,274] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,274] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,275] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,275] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,275] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,276] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,276] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,276] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,277] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,277] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,281] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@138847d] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 10:23:02,283] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@c4c05] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 10:23:02,285] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@30cd64] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 10:23:02,286] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14b9b80: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 10:23:02,286] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:23:02,286] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:23:02,287] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:23:02,287] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:23:02,287] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,287] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,289] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,301] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,301] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,301] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,303] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,319] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,320] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,320] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,322] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,325] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,325] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,325] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,360] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:23:02,484] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:23:02,501] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:23:02,513] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,523] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 10:23:02,523] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:23:02,524] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:23:02,524] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:23:02,525] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:23:02,525] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:23:02,526] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:23:02,527] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:23:02,563] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:23:02,572] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:23:02,589] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 10:23:02,603] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 10:23:02,603] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-20-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 10:23:02,612] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,612] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,612] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,613] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,613] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,613] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,614] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,614] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,614] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,614] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,615] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,615] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,615] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,616] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,616] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:23:02,617] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@260829 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 10:23:02,620] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 10:23:02,640] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 10:23:02,640] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:02,641] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 10:23:03,647] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:03,648] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:03,648] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:04,690] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:05,701] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:05,701] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:05,701] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:06,000] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:06,001] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:06,004] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:06,005] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:07,020] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:08,030] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:08,030] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:08,030] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:08,291] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:09,304] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:09,304] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:09,305] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:10,490] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:10,490] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:10,490] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:10,492] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:11,286] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:12,301] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:12,301] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:12,301] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:13,267] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:14,276] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:14,276] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:14,276] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:16,316] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:16,317] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:16,318] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:16,319] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:17,254] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:18,264] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:18,264] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:18,264] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:18,765] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:19,766] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:19,767] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:19,767] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:21,210] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:21,211] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:21,211] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:21,213] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:21,583] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:22,595] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:22,595] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:22,595] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:22,696] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:23,697] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:23,698] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:23,698] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:25,009] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:25,010] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:25,010] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:25,013] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:26,021] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:27,025] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:27,025] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:27,025] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:27,592] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:28,603] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:28,603] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:28,603] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:30,169] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:30,170] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:30,170] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:30,172] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:31,176] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:32,188] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:32,188] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:32,188] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:32,557] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:33,568] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:33,568] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:33,568] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:35,327] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:35,328] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:35,328] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:35,331] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:35,514] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:36,520] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:36,520] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:36,521] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:36,981] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:37,992] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:37,992] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:37,992] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:39,716] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:39,718] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:39,718] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:39,730] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:40,138] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:41,149] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:41,151] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:41,152] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:42,061] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:43,071] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:43,072] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:43,072] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:44,998] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:44,999] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:44,999] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:45,001] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:45,677] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:46,680] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:46,681] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:46,681] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:47,638] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:48,649] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:48,649] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:48,649] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:50,426] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:50,428] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:50,428] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:50,430] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:51,029] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:52,039] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:52,039] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:52,039] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:53,106] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:54,119] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:54,119] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:54,119] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:56,207] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:56,208] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:56,209] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:56,212] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:57,253] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:58,264] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:58,264] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:58,264] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:58,504] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:59,518] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:59,518] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:59,518] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:01,134] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:01,134] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:01,135] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:01,136] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:01,809] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:02,819] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:02,819] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:02,819] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:03,627] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:04,630] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:04,630] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:04,630] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:06,164] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:06,165] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:06,165] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:06,167] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:06,985] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:07,995] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:07,995] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:07,995] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:08,235] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:09,250] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:09,250] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:09,250] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:10,399] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:10,400] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:10,400] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:10,402] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:10,538] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:11,549] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:11,549] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:11,549] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:12,252] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:13,259] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:13,260] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:13,260] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:14,648] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:14,648] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:14,649] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:14,650] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:15,515] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:16,526] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:16,526] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:16,526] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:17,457] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:18,454] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:18,454] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:18,454] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:20,127] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:20,128] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:20,130] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:20,132] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:20,356] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:21,357] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:21,358] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:21,358] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:21,664] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:22,670] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:22,670] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:22,671] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:23,945] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:23,954] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:23,954] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:23,956] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:24,929] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:25,941] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:25,941] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:25,941] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:26,805] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:27,808] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:27,808] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:27,808] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:29,271] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:29,272] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:29,272] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:29,274] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:29,992] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:31,012] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:31,012] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:31,012] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:31,286] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:32,296] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:32,296] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:32,296] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:33,420] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:33,421] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:33,421] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:33,424] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:33,993] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:35,005] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:35,005] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:35,005] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:35,550] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:36,553] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:36,553] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:36,553] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:38,392] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:38,393] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:38,393] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:38,397] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:39,454] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:40,464] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:40,464] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:40,464] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:40,703] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:41,713] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:41,713] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:41,713] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:42,904] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:42,905] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:42,905] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:42,907] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:43,753] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:44,753] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:44,754] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:44,754] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:44,923] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:45,933] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:45,933] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:45,933] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:47,226] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:47,228] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:47,230] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:47,235] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:47,983] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:48,984] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:48,985] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:48,985] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:49,434] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:50,440] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:50,440] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:50,441] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:51,635] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:51,635] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:51,636] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:51,637] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:52,047] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:53,044] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:53,044] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:53,044] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:53,231] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:54,231] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:54,231] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:54,231] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:55,563] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:55,564] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:55,564] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:55,569] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:56,238] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:57,234] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:57,234] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:57,234] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:58,276] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:59,284] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:59,284] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:59,284] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:01,045] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:01,046] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:01,046] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:01,048] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:01,714] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:02,714] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:02,714] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:02,714] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:03,453] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:04,465] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:04,465] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:04,465] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:05,874] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:05,875] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:05,875] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:05,878] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:06,713] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:07,724] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:07,724] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:07,724] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:08,319] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:09,330] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:09,330] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:09,330] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:10,840] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:10,841] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:10,841] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:10,844] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:11,732] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:12,743] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:12,743] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:12,744] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:13,121] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:14,121] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:14,122] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:14,122] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:15,931] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:15,932] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:15,932] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:15,934] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:16,381] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:17,391] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:17,391] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:17,391] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:18,081] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:19,083] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:19,083] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:19,083] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:20,990] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:20,991] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:20,991] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:20,992] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:21,115] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:22,125] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:22,126] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:22,126] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:22,701] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:23,709] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:23,709] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:23,709] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:24,844] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:24,845] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:24,845] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:24,846] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:24,969] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:25,979] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:25,979] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:25,979] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:26,206] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:27,207] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:27,208] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:27,208] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:28,768] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:28,769] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:28,769] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:28,770] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:29,060] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:30,065] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:30,065] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:30,065] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:31,038] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:32,053] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:32,053] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:32,053] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:34,078] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:34,079] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:34,079] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:34,083] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:34,951] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:35,953] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:35,953] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:35,953] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:37,012] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:38,012] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:38,013] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:38,013] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:39,782] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:39,783] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:39,783] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:39,786] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:40,246] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:41,255] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:41,255] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:41,255] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:41,942] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:42,953] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:42,953] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:42,953] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:44,762] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:44,763] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:44,763] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:44,766] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:44,978] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:45,989] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:45,989] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:45,989] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:46,239] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:47,247] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:47,247] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:47,247] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:49,043] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:49,044] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:49,044] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:49,049] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:49,842] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:50,852] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:50,852] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:50,852] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:50,979] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:51,980] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:51,980] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:51,981] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:53,999] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:54,000] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:54,000] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:54,003] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:54,484] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:55,486] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:55,486] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:55,486] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:56,295] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:57,295] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:57,296] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:57,296] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:58,949] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:58,950] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:58,950] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:58,953] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:59,092] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:00,102] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:00,102] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:00,102] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:00,883] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:01,884] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:01,885] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:01,885] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:03,348] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:03,348] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:03,349] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:03,350] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:04,146] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:05,156] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:05,157] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:05,157] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:06,237] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:07,252] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:07,252] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:07,252] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:08,752] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:08,752] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:08,753] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:08,754] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:09,552] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:10,569] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:10,569] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:10,570] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:11,424] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:12,442] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:12,442] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:12,442] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:13,778] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:13,779] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:13,779] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:13,781] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:13,946] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:14,973] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:14,973] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:14,973] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:15,710] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:16,720] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:16,720] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:16,720] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:18,388] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:18,389] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:18,389] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:18,390] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:18,769] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:19,782] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:19,782] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:19,782] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:20,071] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:21,082] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:21,082] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:21,082] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:22,505] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:22,505] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:22,506] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:22,507] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:22,867] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:23,879] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:23,879] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:23,879] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:23,987] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:24,985] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:24,985] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:24,985] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:26,449] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:26,449] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:26,450] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:26,452] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:27,411] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:28,420] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:28,420] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:28,420] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:29,027] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:30,027] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:30,027] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:30,027] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:31,888] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:31,889] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:31,889] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:31,891] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:32,612] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:33,622] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:33,622] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:33,622] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:34,128] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:35,138] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:35,138] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:35,138] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:37,153] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:37,154] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:37,154] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:37,157] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:37,502] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:38,512] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:38,512] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:38,512] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:39,014] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:40,025] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:40,025] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:40,025] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:42,072] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:42,072] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:42,073] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:42,074] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:42,690] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:43,687] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:43,688] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:43,688] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:44,498] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:45,504] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:45,504] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:45,504] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:47,515] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:47,517] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:47,517] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:47,521] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:47,901] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:48,911] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:48,911] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:48,911] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:49,828] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:50,838] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:50,838] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:50,838] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:51,960] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:51,961] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:51,961] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:51,962] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:52,370] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:53,374] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:53,374] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:53,374] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:54,054] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:55,065] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:55,065] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:55,065] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:56,759] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:56,760] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:56,760] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:56,762] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:57,481] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:58,489] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:58,489] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:58,489] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:58,850] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:59,862] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:59,862] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:59,862] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:01,787] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:27:01,788] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:27:01,788] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:27:01,790] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:27:01,994] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:27:03,012] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:27:03,012] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:03,012] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:03,556] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:27:04,556] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:27:04,557] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:04,557] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:05,798] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:27:05,799] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:27:05,799] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:27:05,804] INFO | Unable to read additional data from server sessionid 0x0, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:27:06,816] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:27:07,826] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:27:07,830] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:07,830] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:08,873] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:03:01,601] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:03:01,647] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:03:01,648] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:03:01,650] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:03:01,651] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:03:01,652] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:03:01,652] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:03:01,656] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:03:01,657] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:03:01 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:03:01,676] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:03:01,677] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:03:01,677] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:03:01,682] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:03:01,685] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:03:01,703] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:03:01,707] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:03:01,713] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:03:01,734] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:03:01,736] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:03:01,741] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:03:01,759] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:03:01,768] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:03:01,788] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:03:01,788] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:03:01,789] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:03:01,796] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:03:01,796] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:03:01,798] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:03:01,799] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:03:01,800] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:03:01,814] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 15:03:01,819] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:03:01,846] DEBUG | Loaded 11 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:03:01,846] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@119b1ca: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:03:01,860] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,861] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,871] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:01,873] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:01,892] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,892] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,894] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:01,894] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:01,894] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,894] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,895] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:01,895] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:01,896] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,896] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,898] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:01,898] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:01,898] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,899] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,899] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:01,899] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:01,899] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,900] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,900] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:01,900] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:01,902] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@30a895] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:03:01,903] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15cd9a] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:03:01,904] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@16b352c] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:03:01,906] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@119b1ca: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:03:01,906] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:01,906] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:01,907] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:01,907] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:01,907] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,907] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,909] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:01,917] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:01,918] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,918] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,921] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:01,936] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:01,936] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,936] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,938] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:01,943] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:01,943] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:01,943] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:01,969] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:02,131] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:02,146] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:02,158] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:02,168] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:03:02,169] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:02,170] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:02,170] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:02,171] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:02,171] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:02,173] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:02,174] DEBUG | Invoking afterPropertiesSet() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:03:02,175] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:02,176] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:02,176] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:02,177] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:02,179] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:02,182] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:02,182] DEBUG | Invoking afterPropertiesSet() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:03:02,183] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:02,184] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:02,184] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:03:02,184] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:03:02,185] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:03:02,186] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:03:02,187] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:02,221] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:02,232] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:02,246] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:03:02,256] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:03:02,256] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:03:02,261] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,262] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,262] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,263] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,263] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,263] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,263] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,264] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,264] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,264] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,265] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,265] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,268] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,269] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,269] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:03:02,270] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1fce2f2 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:03:02,272] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:03:02,289] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:03:02,289] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:03:02,289] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:03:02,291] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:03:02,294] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:03:02,329] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2183, sessionid = 0x3479fbe90820000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:03:02,330] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:03:02,330] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:03:02,330] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:03:02,330] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:03:02,337] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:02,351] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:02,364] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:03:02,401] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836606,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,424] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836607,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,456] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836608,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,493] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836609,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7652%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135782192,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7652%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135782192  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,493] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:03:02,528] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836610,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,556] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836611,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,588] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836612,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,612] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836612,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,9,0,0,0,1,21474836575}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,620] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836612,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135738939}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,694] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836613,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,728] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836614,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,741] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836615,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,742] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,21474836615,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,744] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,21474836615,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,774] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836616,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,810] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836617,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,843] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,21474836618,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,845] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,21474836618,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,846] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,21474836618,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:02,846] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:03:02,875] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:02,909] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:02,921] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:03,000] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x00a5ce92, /192.168.1.35:55219 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 15:03:03,001] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 15:03:03,027] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:03,046] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:03,058] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:03,072] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:03:03,080] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:03,086] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:03:03,116] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836619,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,141] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836620,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,179] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836621,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,216] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836622,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7652%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135783081,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7652%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135783081  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,218] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:03:03,251] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836623,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,277] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836624,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,313] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,21474836625,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,314] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,21474836625,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: s{21474836588,21474836588,1407135741178,1407135741178,0,1,0,0,0,1,21474836590}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,315] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 28,8  replyHeader:: 28,21474836625,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: v{'hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135741060}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,349] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474836626,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,385] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474836627,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,424] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474836628,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,427] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 32,3  replyHeader:: 32,21474836628,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,430] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 33,8  replyHeader:: 33,21474836628,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,460] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474836629,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,493] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 35,1  replyHeader:: 35,21474836630,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,529] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 36,1  replyHeader:: 36,21474836631,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,531] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 37,3  replyHeader:: 37,21474836631,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: s{21474836601,21474836601,1407135741514,1407135741514,0,0,0,0,0,0,21474836601}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,532] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 38,8  replyHeader:: 38,21474836631,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,532] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, urls: [hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:03:03,537] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:03:03,558] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:03:03,560] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:03:03,567] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:03:03,595] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 39,1  replyHeader:: 39,21474836632,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,619] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 40,1  replyHeader:: 40,21474836633,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,642] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 41,1  replyHeader:: 41,21474836634,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,674] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 42,1  replyHeader:: 42,21474836635,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7652%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135783562,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7652%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135783562  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,674] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:03:03,710] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 43,1  replyHeader:: 43,21474836636,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,750] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 44,1  replyHeader:: 44,21474836637,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,779] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 45,1  replyHeader:: 45,21474836638,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,780] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 46,3  replyHeader:: 46,21474836638,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: s{21474836494,21474836494,1407134615769,1407134615769,0,5,0,0,0,1,21474836582}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,781] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 47,8  replyHeader:: 47,21474836638,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: v{'rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135739758}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,799] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 48,1  replyHeader:: 48,21474836639,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,824] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 49,1  replyHeader:: 49,21474836640,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,860] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 50,1  replyHeader:: 50,21474836641,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,862] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 51,3  replyHeader:: 51,21474836641,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,863] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 52,8  replyHeader:: 52,21474836641,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,898] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 53,1  replyHeader:: 53,21474836642,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,922] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 54,1  replyHeader:: 54,21474836643,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,962] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 55,1  replyHeader:: 55,21474836644,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,964] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 56,3  replyHeader:: 56,21474836644,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: s{21474836540,21474836540,1407135105323,1407135105323,0,0,0,0,0,0,21474836540}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,964] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 57,8  replyHeader:: 57,21474836644,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:03,965] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, urls: [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:03:04,041] DEBUG | Located RMI stub with URL [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] | [main] org.springframework.remoting.rmi.RmiClientInterceptor.lookupStub(203)
[VAMS][2014-08-04 15:03:04,041] DEBUG | RMI stub [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiClientInterceptor.prepare(150)
[VAMS][2014-08-04 15:03:04,046] DEBUG | Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:03:04,050] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:03:04,052] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 15:03:04,154] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:03:04,381] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@119b1ca: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:03:04,381] DEBUG | Invoking destroy() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:03:04,382] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:03:04,382] DEBUG | Invoking destroy() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:03:04,383] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:03:04,383] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:03:04,383] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:03:04,384] INFO |  [DUBBO] Close netty channel [id: 0x00a5ce92, /192.168.1.35:55219 => /192.168.1.35:20881], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-04 15:03:04,386] INFO |  [DUBBO] disconected from /192.168.1.35:20881,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboSharedHandler-thread-1] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:03:04,388] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Invocation of init method failed; nested exception is com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:101)
	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:227)
	at com.alibaba.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:72)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy1.hasseinSayHello(proxy1.java)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 59 more
Caused by: com.caucho.hessian.client.HessianConnectionException: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:139)
	at com.caucho.hessian.client.HessianProxy.sendRequest(HessianProxy.java:283)
	at com.caucho.hessian.client.HessianProxy.invoke(HessianProxy.java:170)
	at $Proxy19.hasseinSayHello(Unknown Source)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$2.doInvoke(AbstractProxyProtocol.java:93)
	at com.alibaba.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:144)
	at com.alibaba.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:74)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:48)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:77)
	... 71 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1491)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1485)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1139)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:122)
	... 88 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1434)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:109)
	... 88 more
[VAMS][2014-08-04 15:03:04,501] INFO |  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(450)
[VAMS][2014-08-04 15:03:04,502] INFO |  [DUBBO] Close all registries [zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=7652&timestamp=1407135782215], dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(63)
[VAMS][2014-08-04 15:03:04,502] INFO |  [DUBBO] Destroy registry:zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=7652&timestamp=1407135782215, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(485)
[VAMS][2014-08-04 15:03:04,502] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:03:04,532] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 58,2  replyHeader:: 58,21474836645,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7652%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135782192,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:04,532] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:03:04,533] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:03:04,565] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 59,2  replyHeader:: 59,21474836646,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7652%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135783562,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:04,566] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:03:04,566] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:03:04,602] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 60,2  replyHeader:: 60,21474836647,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7652%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135783081,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:04,603] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:03:04,603] DEBUG | Closing ZkClient... | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(915)
[VAMS][2014-08-04 15:03:04,603] INFO | Terminate ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(82)
[VAMS][2014-08-04 15:03:04,604] DEBUG | Closing ZooKeeper connected to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 | [DubboShutdownHook] org.I0Itec.zkclient.ZkConnection.close(77)
[VAMS][2014-08-04 15:03:04,604] DEBUG | Closing session: 0x3479fbe90820000 | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(533)
[VAMS][2014-08-04 15:03:04,604] DEBUG | Closing client for session: 0x3479fbe90820000 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.close(1315)
[VAMS][2014-08-04 15:03:04,709] DEBUG | Reading reply sessionid:0x3479fbe90820000, packet:: clientPath:null serverPath:null finished:false header:: 61,-11  replyHeader:: 61,21474836648,0  request:: null response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:03:04,710] DEBUG | Disconnecting client for session: 0x3479fbe90820000 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.disconnect(1299)
[VAMS][2014-08-04 15:03:04,710] INFO | Session: 0x3479fbe90820000 closed | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(544)
[VAMS][2014-08-04 15:03:04,711] DEBUG | Closing ZkClient...done | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(928)
[VAMS][2014-08-04 15:03:04,711] INFO |  [DUBBO] Close dubbo connect: 192.168.1.35:0-->192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(407)
[VAMS][2014-08-04 15:03:04,711] INFO |  [DUBBO] Close dubbo connect: 192.168.1.35:0-->192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(421)
[VAMS][2014-08-04 15:03:04,712] INFO |  [DUBBO] Destroy reference: hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(63)
[VAMS][2014-08-04 15:03:04,712] INFO |  [DUBBO] Destroy reference: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(63)
[VAMS][2014-08-04 15:03:04,716] INFO | EventThread shut down | [main-EventThread] org.apache.zookeeper.ClientCnxn$EventThread.run(516)
[VAMS][2014-08-04 15:06:20,412] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:06:20,459] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:06:20,459] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:06:20,461] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:06:20,462] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:06:20,463] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:06:20,464] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:06:20,466] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:06:20,467] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:06:20 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:06:20,487] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:06:20,487] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:06:20,488] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:06:20,492] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:06:20,495] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:06:20,513] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:06:20,516] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:06:20,522] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:06:20,545] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:06:20,548] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:06:20,551] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:06:20,571] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:06:20,581] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:06:20,605] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:06:20,605] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:06:20,605] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:06:20,611] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:06:20,612] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:06:20,613] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:06:20,614] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:06:20,615] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:06:20,632] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 15:06:20,637] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:06:20,668] DEBUG | Loaded 11 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:06:20,669] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1e779a7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:06:20,683] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,683] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,696] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,698] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,715] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,715] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,716] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,716] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,717] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,717] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,717] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,718] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,718] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,718] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,721] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,722] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,722] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,723] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,723] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,723] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,724] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,724] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,725] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,725] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,726] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@8be1c9] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:06:20,728] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16d46d7] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:06:20,729] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@16feee5] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:06:20,730] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e779a7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:06:20,730] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:20,730] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:20,731] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:20,731] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:20,731] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,731] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,733] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,740] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,741] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,741] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,743] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,756] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,756] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,756] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,758] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,762] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,762] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:20,762] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:20,794] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:20,958] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:20,971] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:20,983] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:20,996] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:06:20,997] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:20,998] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:20,999] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:20,999] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:21,000] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:21,004] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:21,005] DEBUG | Invoking afterPropertiesSet() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:06:21,006] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:21,007] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:21,008] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:21,008] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:21,011] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:21,015] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:21,016] DEBUG | Invoking afterPropertiesSet() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:06:21,017] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:21,018] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:21,018] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:06:21,019] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:06:21,019] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:06:21,020] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:06:21,021] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:21,057] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,068] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,082] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783562, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135782192, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7652&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135783081, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:06:21,099] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:06:21,099] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:06:21,106] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,107] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,107] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,107] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,108] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,108] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,108] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,109] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,109] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,109] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,109] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,110] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,113] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,113] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,114] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:06:21,115] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1978611 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:06:21,116] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:06:21,131] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:06:21,132] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:06:21,132] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:06:21,134] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:06:21,136] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:06:21,162] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2183, sessionid = 0x3479fbe90820001, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:06:21,163] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:06:21,163] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:06:21,163] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:06:21,163] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:06:21,170] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,179] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,188] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:06:21,220] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836650,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,268] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836651,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,293] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836652,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,341] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836653,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7324%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135981025,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7324%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135981025  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,342] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:06:21,374] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836654,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,387] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836655,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,410] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836656,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,416] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836656,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,9,0,0,0,1,21474836575}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,421] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836656,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135738939}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,452] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836657,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,485] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836658,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,510] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836659,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,511] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,21474836659,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,512] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,21474836659,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,546] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836660,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,570] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836661,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,595] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,21474836662,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,597] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,21474836662,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,598] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,21474836662,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,598] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:06:21,622] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,668] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,682] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,754] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x019d0e0b, /192.168.1.35:55357 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 15:06:21,755] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 15:06:21,779] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,789] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,800] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:21,813] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:06:21,818] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:21,824] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:06:21,841] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836663,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,865] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836664,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,901] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836665,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,940] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836666,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7324%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135981820,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7324%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135981820  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:21,941] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:06:21,991] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836667,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,056] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836668,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,095] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,21474836669,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,096] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,21474836669,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: s{21474836588,21474836588,1407135741178,1407135741178,0,1,0,0,0,1,21474836590}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,098] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 28,8  replyHeader:: 28,21474836669,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: v{'hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135741060}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,132] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474836670,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,167] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474836671,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,204] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474836672,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,205] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 32,3  replyHeader:: 32,21474836672,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,207] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 33,8  replyHeader:: 33,21474836672,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,226] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474836673,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,250] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 35,1  replyHeader:: 35,21474836674,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,290] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 36,1  replyHeader:: 36,21474836675,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,291] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 37,3  replyHeader:: 37,21474836675,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: s{21474836601,21474836601,1407135741514,1407135741514,0,0,0,0,0,0,21474836601}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,292] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 38,8  replyHeader:: 38,21474836675,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,292] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, urls: [hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:06:22,296] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:06:22,317] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:06:22,319] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:06:22,328] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:06:22,347] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 39,1  replyHeader:: 39,21474836676,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,382] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 40,1  replyHeader:: 40,21474836677,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,419] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 41,1  replyHeader:: 41,21474836678,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,455] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 42,1  replyHeader:: 42,21474836679,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7324%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135982322,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7324%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135982322  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,456] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:06:22,491] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 43,1  replyHeader:: 43,21474836680,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,512] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 44,1  replyHeader:: 44,21474836681,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,543] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 45,1  replyHeader:: 45,21474836682,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,544] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 46,3  replyHeader:: 46,21474836682,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: s{21474836494,21474836494,1407134615769,1407134615769,0,5,0,0,0,1,21474836582}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,548] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 47,8  replyHeader:: 47,21474836682,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: v{'rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135739758}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,576] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 48,1  replyHeader:: 48,21474836683,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,612] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 49,1  replyHeader:: 49,21474836684,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,645] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 50,1  replyHeader:: 50,21474836685,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,646] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 51,3  replyHeader:: 51,21474836685,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,647] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 52,8  replyHeader:: 52,21474836685,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:22,910] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 53,1  replyHeader:: 53,21474836686,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:23,044] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 54,1  replyHeader:: 54,21474836687,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:23,076] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 55,1  replyHeader:: 55,21474836688,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:23,078] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 56,3  replyHeader:: 56,21474836688,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: s{21474836540,21474836540,1407135105323,1407135105323,0,0,0,0,0,0,21474836540}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:23,080] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 57,8  replyHeader:: 57,21474836688,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:23,080] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, urls: [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:06:23,133] DEBUG | Located RMI stub with URL [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] | [main] org.springframework.remoting.rmi.RmiClientInterceptor.lookupStub(203)
[VAMS][2014-08-04 15:06:23,133] DEBUG | RMI stub [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiClientInterceptor.prepare(150)
[VAMS][2014-08-04 15:06:23,139] DEBUG | Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:06:23,142] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:06:23,145] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 15:06:23,196] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:06:23,323] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e779a7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:06:23,324] DEBUG | Invoking destroy() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:06:23,324] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:06:23,325] DEBUG | Invoking destroy() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:06:23,326] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:06:23,326] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:06:23,326] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:06:23,327] INFO |  [DUBBO] Close netty channel [id: 0x019d0e0b, /192.168.1.35:55357 => /192.168.1.35:20881], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-04 15:06:23,332] INFO |  [DUBBO] disconected from /192.168.1.35:20881,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboSharedHandler-thread-1] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:06:23,333] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Invocation of init method failed; nested exception is com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:101)
	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:227)
	at com.alibaba.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:72)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy1.hasseinSayHello(proxy1.java)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 59 more
Caused by: com.caucho.hessian.client.HessianConnectionException: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:139)
	at com.caucho.hessian.client.HessianProxy.sendRequest(HessianProxy.java:283)
	at com.caucho.hessian.client.HessianProxy.invoke(HessianProxy.java:170)
	at $Proxy19.hasseinSayHello(Unknown Source)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$2.doInvoke(AbstractProxyProtocol.java:93)
	at com.alibaba.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:144)
	at com.alibaba.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:74)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:48)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:77)
	... 71 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1491)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1485)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1139)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:122)
	... 88 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1434)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:109)
	... 88 more
[VAMS][2014-08-04 15:06:23,454] INFO |  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(450)
[VAMS][2014-08-04 15:06:23,455] INFO |  [DUBBO] Close all registries [zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=7324&timestamp=1407135981049], dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(63)
[VAMS][2014-08-04 15:06:23,455] INFO |  [DUBBO] Destroy registry:zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=7324&timestamp=1407135981049, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(485)
[VAMS][2014-08-04 15:06:23,455] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:06:23,487] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 58,2  replyHeader:: 58,21474836689,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7324%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135981025,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:23,487] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:06:23,487] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:06:23,510] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 59,2  replyHeader:: 59,21474836690,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7324%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135982322,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:23,511] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:06:23,511] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:06:23,548] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 60,2  replyHeader:: 60,21474836691,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7324%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407135981820,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:23,549] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:06:23,549] DEBUG | Closing ZkClient... | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(915)
[VAMS][2014-08-04 15:06:23,550] INFO | Terminate ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(82)
[VAMS][2014-08-04 15:06:23,550] DEBUG | Closing ZooKeeper connected to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 | [DubboShutdownHook] org.I0Itec.zkclient.ZkConnection.close(77)
[VAMS][2014-08-04 15:06:23,550] DEBUG | Closing session: 0x3479fbe90820001 | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(533)
[VAMS][2014-08-04 15:06:23,551] DEBUG | Closing client for session: 0x3479fbe90820001 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.close(1315)
[VAMS][2014-08-04 15:06:23,592] DEBUG | Reading reply sessionid:0x3479fbe90820001, packet:: clientPath:null serverPath:null finished:false header:: 61,-11  replyHeader:: 61,21474836692,0  request:: null response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:06:23,592] DEBUG | Disconnecting client for session: 0x3479fbe90820001 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.disconnect(1299)
[VAMS][2014-08-04 15:06:23,593] INFO | Session: 0x3479fbe90820001 closed | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(544)
[VAMS][2014-08-04 15:06:23,593] INFO | EventThread shut down | [main-EventThread] org.apache.zookeeper.ClientCnxn$EventThread.run(516)
[VAMS][2014-08-04 15:06:23,593] DEBUG | Closing ZkClient...done | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(928)
[VAMS][2014-08-04 15:06:23,594] INFO |  [DUBBO] Close dubbo connect: 192.168.1.35:0-->192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(407)
[VAMS][2014-08-04 15:06:23,594] INFO |  [DUBBO] Close dubbo connect: 192.168.1.35:0-->192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(421)
[VAMS][2014-08-04 15:06:23,595] INFO |  [DUBBO] Destroy reference: hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(63)
[VAMS][2014-08-04 15:06:23,595] INFO |  [DUBBO] Destroy reference: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(63)
[VAMS][2014-08-04 15:08:58,978] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:08:59,025] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:08:59,026] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:08:59,029] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:08:59,029] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:08:59,030] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:08:59,031] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:08:59,034] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:08:59,036] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:08:59 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:08:59,058] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:08:59,059] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:08:59,059] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:08:59,064] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:08:59,067] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:08:59,084] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:08:59,087] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:08:59,090] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:08:59,108] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:08:59,112] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:08:59,120] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:08:59,138] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:08:59,147] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:08:59,167] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:08:59,168] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:08:59,168] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:08:59,176] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:08:59,176] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:08:59,178] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:08:59,179] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:08:59,180] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:08:59,195] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 15:08:59,199] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:08:59,225] DEBUG | Loaded 11 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:08:59,225] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@119b1ca: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:08:59,240] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,240] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,253] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,257] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,277] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,277] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,278] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,279] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,279] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,279] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,280] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,280] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,280] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,280] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,283] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,283] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,283] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,283] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,284] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,284] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,284] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,284] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,285] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,285] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,287] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@30a895] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:08:59,288] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15cd9a] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:08:59,289] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@16b352c] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:08:59,291] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@119b1ca: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:08:59,291] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,291] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,291] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,292] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,292] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,292] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,294] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,301] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,301] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,302] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,304] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,317] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,317] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,318] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,319] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,323] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,323] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,324] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,349] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:08:59,510] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:08:59,523] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:08:59,536] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,546] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:08:59,547] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,547] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,548] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,548] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,548] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,551] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,552] DEBUG | Invoking afterPropertiesSet() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:08:59,554] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,554] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,555] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,555] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,557] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,560] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,561] DEBUG | Invoking afterPropertiesSet() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:08:59,562] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,563] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,563] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:08:59,563] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:08:59,563] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:08:59,564] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:08:59,566] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:08:59,599] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:08:59,610] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:08:59,623] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135982322, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981025, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7324&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407135981820, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:08:59,635] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:08:59,635] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:08:59,640] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,641] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,641] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,641] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,642] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,642] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,642] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,642] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,643] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,643] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,643] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,644] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,647] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,647] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,648] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:08:59,649] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1fce2f2 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:08:59,651] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:08:59,668] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:08:59,668] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:08:59,669] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:08:59,670] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:08:59,672] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:08:59,716] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479fbe4cc60002, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:08:59,718] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:08:59,718] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:08:59,718] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:08:59,719] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:08:59,730] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:08:59,741] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:08:59,751] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:08:59,788] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836694,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:08:59,818] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836695,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:08:59,851] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836696,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:08:59,877] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836697,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2684%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136139570,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2684%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136139570  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:08:59,879] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:08:59,909] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836698,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:08:59,944] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836699,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:08:59,980] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836700,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:08:59,986] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836700,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,9,0,0,0,1,21474836575}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:08:59,990] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836700,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135738939}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,022] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836701,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,058] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836702,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,094] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836703,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,096] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,21474836703,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,097] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,21474836703,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,127] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836704,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,151] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836705,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,184] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,21474836706,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,186] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,21474836706,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,187] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,21474836706,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,187] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:09:00,210] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:09:00,242] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:09:00,254] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:09:00,327] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x00a5ce92, /192.168.1.35:55391 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 15:09:00,327] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 15:09:00,351] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:09:00,363] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:09:00,373] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:09:00,385] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:09:00,393] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:09:00,400] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:09:00,412] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836707,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,426] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836708,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,457] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836709,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,493] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836710,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D2684%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136140395,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D2684%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136140395  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,493] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:09:00,530] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836711,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,562] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836712,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,599] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,21474836713,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,600] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,21474836713,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: s{21474836588,21474836588,1407135741178,1407135741178,0,1,0,0,0,1,21474836590}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,602] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 28,8  replyHeader:: 28,21474836713,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: v{'hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135741060}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,635] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474836714,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,676] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474836715,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,688] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474836716,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,690] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 32,3  replyHeader:: 32,21474836716,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,692] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 33,8  replyHeader:: 33,21474836716,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,722] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474836717,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,755] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 35,1  replyHeader:: 35,21474836718,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,790] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 36,1  replyHeader:: 36,21474836719,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,791] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 37,3  replyHeader:: 37,21474836719,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: s{21474836601,21474836601,1407135741514,1407135741514,0,0,0,0,0,0,21474836601}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,792] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 38,8  replyHeader:: 38,21474836719,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,792] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, urls: [hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:09:00,798] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:09:00,821] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:09:00,823] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:09:00,832] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:09:00,864] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 39,1  replyHeader:: 39,21474836720,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,888] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 40,1  replyHeader:: 40,21474836721,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,912] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 41,1  replyHeader:: 41,21474836722,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,926] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 42,1  replyHeader:: 42,21474836723,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D2684%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136140827,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D2684%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136140827  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,926] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:09:00,957] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 43,1  replyHeader:: 43,21474836724,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:00,993] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 44,1  replyHeader:: 44,21474836725,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,030] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 45,1  replyHeader:: 45,21474836726,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,031] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 46,3  replyHeader:: 46,21474836726,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: s{21474836494,21474836494,1407134615769,1407134615769,0,5,0,0,0,1,21474836582}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,032] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 47,8  replyHeader:: 47,21474836726,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: v{'rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135739758}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,062] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 48,1  replyHeader:: 48,21474836727,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,099] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 49,1  replyHeader:: 49,21474836728,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,123] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 50,1  replyHeader:: 50,21474836729,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,124] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 51,3  replyHeader:: 51,21474836729,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,125] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 52,8  replyHeader:: 52,21474836729,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,155] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 53,1  replyHeader:: 53,21474836730,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,169] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 54,1  replyHeader:: 54,21474836731,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,192] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 55,1  replyHeader:: 55,21474836732,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,193] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 56,3  replyHeader:: 56,21474836732,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: s{21474836540,21474836540,1407135105323,1407135105323,0,0,0,0,0,0,21474836540}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,194] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 57,8  replyHeader:: 57,21474836732,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,195] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, urls: [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:09:01,226] DEBUG | Located RMI stub with URL [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] | [main] org.springframework.remoting.rmi.RmiClientInterceptor.lookupStub(203)
[VAMS][2014-08-04 15:09:01,226] DEBUG | RMI stub [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiClientInterceptor.prepare(150)
[VAMS][2014-08-04 15:09:01,231] DEBUG | Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:09:01,236] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:09:01,238] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 15:09:01,292] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:09:01,456] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@119b1ca: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:09:01,456] DEBUG | Invoking destroy() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:09:01,457] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:09:01,457] DEBUG | Invoking destroy() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:09:01,457] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:09:01,458] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:09:01,458] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:09:01,459] INFO |  [DUBBO] Close netty channel [id: 0x00a5ce92, /192.168.1.35:55391 => /192.168.1.35:20881], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-04 15:09:01,460] INFO |  [DUBBO] disconected from /192.168.1.35:20881,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboSharedHandler-thread-1] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:09:01,463] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Invocation of init method failed; nested exception is com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:101)
	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:227)
	at com.alibaba.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:72)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy1.hasseinSayHello(proxy1.java)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 59 more
Caused by: com.caucho.hessian.client.HessianConnectionException: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:139)
	at com.caucho.hessian.client.HessianProxy.sendRequest(HessianProxy.java:283)
	at com.caucho.hessian.client.HessianProxy.invoke(HessianProxy.java:170)
	at $Proxy19.hasseinSayHello(Unknown Source)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$2.doInvoke(AbstractProxyProtocol.java:93)
	at com.alibaba.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:144)
	at com.alibaba.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:74)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:48)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:77)
	... 71 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1491)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1485)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1139)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:122)
	... 88 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1434)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:109)
	... 88 more
[VAMS][2014-08-04 15:09:01,580] INFO |  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(450)
[VAMS][2014-08-04 15:09:01,581] INFO |  [DUBBO] Close all registries [zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2684&timestamp=1407136139592], dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(63)
[VAMS][2014-08-04 15:09:01,581] INFO |  [DUBBO] Destroy registry:zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2684&timestamp=1407136139592, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(485)
[VAMS][2014-08-04 15:09:01,582] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:09:01,594] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 58,2  replyHeader:: 58,21474836733,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2684%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136139570,-1  response:: null | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,594] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:09:01,595] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:09:01,618] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 59,2  replyHeader:: 59,21474836734,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D2684%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136140395,-1  response:: null | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,618] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:09:01,619] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:09:01,643] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 60,2  replyHeader:: 60,21474836735,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D2684%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136140827,-1  response:: null | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,644] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:09:01,645] DEBUG | Closing ZkClient... | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(915)
[VAMS][2014-08-04 15:09:01,645] INFO | Terminate ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(82)
[VAMS][2014-08-04 15:09:01,645] DEBUG | Closing ZooKeeper connected to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 | [DubboShutdownHook] org.I0Itec.zkclient.ZkConnection.close(77)
[VAMS][2014-08-04 15:09:01,647] DEBUG | Closing session: 0x1479fbe4cc60002 | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(533)
[VAMS][2014-08-04 15:09:01,647] DEBUG | Closing client for session: 0x1479fbe4cc60002 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.close(1315)
[VAMS][2014-08-04 15:09:01,676] DEBUG | Reading reply sessionid:0x1479fbe4cc60002, packet:: clientPath:null serverPath:null finished:false header:: 61,-11  replyHeader:: 61,21474836736,0  request:: null response:: null | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:09:01,676] DEBUG | Disconnecting client for session: 0x1479fbe4cc60002 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.disconnect(1299)
[VAMS][2014-08-04 15:09:01,676] INFO | Session: 0x1479fbe4cc60002 closed | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(544)
[VAMS][2014-08-04 15:09:01,676] DEBUG | Closing ZkClient...done | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(928)
[VAMS][2014-08-04 15:09:01,677] INFO |  [DUBBO] Close dubbo connect: 192.168.1.35:0-->192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(407)
[VAMS][2014-08-04 15:09:01,677] INFO |  [DUBBO] Close dubbo connect: 192.168.1.35:0-->192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(421)
[VAMS][2014-08-04 15:09:01,677] INFO |  [DUBBO] Destroy reference: hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(63)
[VAMS][2014-08-04 15:09:01,677] INFO |  [DUBBO] Destroy reference: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(63)
[VAMS][2014-08-04 15:09:01,680] INFO | EventThread shut down | [main-EventThread] org.apache.zookeeper.ClientCnxn$EventThread.run(516)
[VAMS][2014-08-04 15:17:19,239] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:17:19,300] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:17:19,300] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:17:19,303] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:17:19,303] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:17:19,305] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:17:19,305] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:17:19,310] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:17:19,312] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:17:19 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:17:19,337] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:17:19,338] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:17:19,338] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:17:19,343] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:17:19,347] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:17:19,369] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:17:19,373] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:17:19,375] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:17:19,397] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:17:19,401] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:17:19,406] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:17:19,432] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:17:19,442] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:17:19,468] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:17:19,469] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:17:19,469] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:17:19,477] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:17:19,478] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:17:19,479] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:17:19,480] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:17:19,483] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:17:19,501] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 15:17:19,508] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:17:19,545] DEBUG | Loaded 11 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:17:19,546] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1e3e7d2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:17:19,560] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,561] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,571] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,573] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,595] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,596] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,597] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,598] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,598] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,598] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,599] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,600] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,600] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,600] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,602] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,603] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,603] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,603] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,604] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,604] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,604] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,604] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,605] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,605] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,606] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1947647] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:17:19,608] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@145d424] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:17:19,609] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1ad0d89] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:17:19,611] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e3e7d2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:17:19,612] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,612] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,612] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,613] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,613] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,613] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,615] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,623] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,623] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,624] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,626] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,645] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,645] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,645] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,649] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,654] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,654] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,655] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,693] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:19,893] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:19,912] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:19,929] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,942] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:17:19,943] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,944] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,944] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,945] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,945] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,949] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,950] DEBUG | Invoking afterPropertiesSet() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:17:19,953] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,953] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,954] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,954] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,957] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,966] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,967] DEBUG | Invoking afterPropertiesSet() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:17:19,969] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,970] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:19,970] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:17:19,970] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:17:19,971] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:17:19,972] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:17:19,973] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:20,015] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,026] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,045] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:17:20,057] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:17:20,057] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:17:20,064] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,064] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,065] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,065] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,066] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,066] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,067] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,067] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,067] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,068] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,068] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,068] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,072] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,072] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,072] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:17:20,074] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1fce2f2 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:17:20,076] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:17:20,097] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:17:20,097] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:17:20,098] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:17:20,100] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:17:20,102] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:17:20,145] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0003, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:17:20,147] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:17:20,147] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:17:20,148] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:17:20,148] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:17:20,157] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,170] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,186] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:17:20,227] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836761,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,258] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836762,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,295] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836763,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,332] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836764,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136639978,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136639978  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,333] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:17:20,364] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836765,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,398] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836766,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,433] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836767,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,437] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836767,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,11,0,0,0,1,21474836742}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,440] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836767,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136617241}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,469] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836768,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,493] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836769,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,527] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836770,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,531] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,21474836770,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,533] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,21474836770,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,558] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836771,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,592] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836772,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,638] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,21474836773,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,639] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,21474836773,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,640] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,21474836773,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,641] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:17:20,666] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,705] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,719] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,810] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x01f81efb, /192.168.1.35:55651 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 15:17:20,811] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 15:17:20,845] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,865] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,875] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:20,895] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:17:20,903] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:20,909] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:17:20,931] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836774,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:20,967] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836775,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,003] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836776,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,028] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836777,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136640904,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136640904  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,029] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:17:21,064] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836778,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,100] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836779,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,126] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,21474836780,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,128] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,21474836780,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: s{21474836588,21474836588,1407135741178,1407135741178,0,3,0,0,0,1,21474836756}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,130] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 28,8  replyHeader:: 28,21474836780,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: v{'hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136619306}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,159] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474836781,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,195] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474836782,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,233] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474836783,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,235] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 32,3  replyHeader:: 32,21474836783,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,236] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 33,8  replyHeader:: 33,21474836783,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,265] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474836784,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,298] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 35,1  replyHeader:: 35,21474836785,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,330] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 36,1  replyHeader:: 36,21474836786,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,333] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 37,3  replyHeader:: 37,21474836786,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: s{21474836601,21474836601,1407135741514,1407135741514,0,0,0,0,0,0,21474836601}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,334] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 38,8  replyHeader:: 38,21474836786,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,335] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, urls: [hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:17:21,342] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:17:21,365] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:17:21,368] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:17:21,375] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:17:21,407] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 39,1  replyHeader:: 39,21474836787,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,419] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 40,1  replyHeader:: 40,21474836788,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,447] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 41,1  replyHeader:: 41,21474836789,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,486] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 42,1  replyHeader:: 42,21474836790,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136641370,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136641370  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,486] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:17:21,526] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 43,1  replyHeader:: 43,21474836791,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,558] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 44,1  replyHeader:: 44,21474836792,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,594] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 45,1  replyHeader:: 45,21474836793,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,595] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 46,3  replyHeader:: 46,21474836793,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: s{21474836494,21474836494,1407134615769,1407134615769,0,7,0,0,0,1,21474836749}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,599] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 47,8  replyHeader:: 47,21474836793,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: v{'rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136617995}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,632] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 48,1  replyHeader:: 48,21474836794,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,667] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 49,1  replyHeader:: 49,21474836795,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,692] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 50,1  replyHeader:: 50,21474836796,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,693] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 51,3  replyHeader:: 51,21474836796,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,694] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 52,8  replyHeader:: 52,21474836796,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,723] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 53,1  replyHeader:: 53,21474836797,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,763] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 54,1  replyHeader:: 54,21474836798,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,797] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 55,1  replyHeader:: 55,21474836799,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,799] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 56,3  replyHeader:: 56,21474836799,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: s{21474836540,21474836540,1407135105323,1407135105323,0,0,0,0,0,0,21474836540}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,800] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 57,8  replyHeader:: 57,21474836799,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:21,800] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, urls: [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:17:21,850] DEBUG | Located RMI stub with URL [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] | [main] org.springframework.remoting.rmi.RmiClientInterceptor.lookupStub(203)
[VAMS][2014-08-04 15:17:21,850] DEBUG | RMI stub [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiClientInterceptor.prepare(150)
[VAMS][2014-08-04 15:17:21,856] DEBUG | Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:17:21,861] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:17:21,864] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 15:17:22,004] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:17:22,251] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e3e7d2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:17:22,252] DEBUG | Invoking destroy() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:17:22,252] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:17:22,252] DEBUG | Invoking destroy() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:17:22,253] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:17:22,253] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:17:22,253] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:17:22,254] INFO |  [DUBBO] Close netty channel [id: 0x01f81efb, /192.168.1.35:55651 => /192.168.1.35:20881], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-04 15:17:22,256] INFO |  [DUBBO] disconected from /192.168.1.35:20881,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboSharedHandler-thread-1] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:17:22,258] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Invocation of init method failed; nested exception is com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:101)
	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:227)
	at com.alibaba.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:72)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy1.hasseinSayHello(proxy1.java)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 59 more
Caused by: com.caucho.hessian.client.HessianConnectionException: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:139)
	at com.caucho.hessian.client.HessianProxy.sendRequest(HessianProxy.java:283)
	at com.caucho.hessian.client.HessianProxy.invoke(HessianProxy.java:170)
	at $Proxy19.hasseinSayHello(Unknown Source)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$2.doInvoke(AbstractProxyProtocol.java:93)
	at com.alibaba.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:144)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:48)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:74)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:77)
	... 71 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1491)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1485)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1139)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:122)
	... 88 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1434)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:109)
	... 88 more
[VAMS][2014-08-04 15:17:22,390] INFO |  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(450)
[VAMS][2014-08-04 15:17:22,391] INFO |  [DUBBO] Close all registries [zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=5624&timestamp=1407136640006], dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(63)
[VAMS][2014-08-04 15:17:22,391] INFO |  [DUBBO] Destroy registry:zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=5624&timestamp=1407136640006, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(485)
[VAMS][2014-08-04 15:17:22,392] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:17:22,424] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 58,2  replyHeader:: 58,21474836800,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136639978,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:22,425] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:17:22,425] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:17:22,463] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 59,2  replyHeader:: 59,21474836801,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136640904,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:22,466] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:17:22,466] INFO |  [DUBBO] Unregister: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:17:22,499] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 60,2  replyHeader:: 60,21474836802,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5624%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136641370,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:22,507] INFO |  [DUBBO] Destroy unregister url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:17:22,507] DEBUG | Closing ZkClient... | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(915)
[VAMS][2014-08-04 15:17:22,515] INFO | Terminate ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(82)
[VAMS][2014-08-04 15:17:22,517] DEBUG | Closing ZooKeeper connected to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 | [DubboShutdownHook] org.I0Itec.zkclient.ZkConnection.close(77)
[VAMS][2014-08-04 15:17:22,518] DEBUG | Closing session: 0x2479fbe4cae0003 | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(533)
[VAMS][2014-08-04 15:17:22,518] DEBUG | Closing client for session: 0x2479fbe4cae0003 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.close(1315)
[VAMS][2014-08-04 15:17:22,552] DEBUG | Reading reply sessionid:0x2479fbe4cae0003, packet:: clientPath:null serverPath:null finished:false header:: 61,-11  replyHeader:: 61,21474836803,0  request:: null response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:17:22,552] DEBUG | Disconnecting client for session: 0x2479fbe4cae0003 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.disconnect(1299)
[VAMS][2014-08-04 15:17:22,554] INFO | Session: 0x2479fbe4cae0003 closed | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(544)
[VAMS][2014-08-04 15:17:22,554] DEBUG | Closing ZkClient...done | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(928)
[VAMS][2014-08-04 15:17:22,554] INFO |  [DUBBO] Close dubbo connect: 192.168.1.35:0-->192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(407)
[VAMS][2014-08-04 15:17:22,555] INFO |  [DUBBO] Close dubbo connect: 192.168.1.35:0-->192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(421)
[VAMS][2014-08-04 15:17:22,555] INFO |  [DUBBO] Destroy reference: hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(63)
[VAMS][2014-08-04 15:17:22,556] INFO |  [DUBBO] Destroy reference: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(63)
[VAMS][2014-08-04 15:17:22,557] INFO | EventThread shut down | [main-EventThread] org.apache.zookeeper.ClientCnxn$EventThread.run(516)
[VAMS][2014-08-04 15:23:01,859] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:23:01,908] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:23:01,908] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:23:01,911] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:23:01,911] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:23:01,912] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:23:01,913] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:23:01,917] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:23:01,918] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:23:01 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:23:01,941] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:23:01,941] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:23:01,942] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:23:01,946] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:23:01,949] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:23:01,968] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:23:01,971] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:23:01,973] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:23:01,993] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:23:01,995] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:23:01,999] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:23:02,019] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:23:02,028] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:23:02,049] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:23:02,050] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:23:02,050] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:23:02,057] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:23:02,058] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:23:02,060] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:23:02,061] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:23:02,062] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:23:02,076] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 15:23:02,081] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:23:02,104] DEBUG | Loaded 11 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:23:02,104] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1410a85: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:23:02,119] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,120] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,133] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,136] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,157] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,157] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,159] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,159] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,160] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,161] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,162] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,162] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,162] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,163] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,164] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,165] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,165] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,166] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,166] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,166] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,166] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,167] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,167] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,167] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,169] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@13d5f21] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:23:02,170] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@bfb545] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:23:02,171] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@10fb9bd] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:23:02,173] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1410a85: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:23:02,173] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,173] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,173] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,174] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,174] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,174] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,176] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,184] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,184] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,184] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,186] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,199] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,200] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,200] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,202] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,206] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,206] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,207] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,233] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:02,408] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:02,424] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:02,441] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,452] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:23:02,453] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,453] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,454] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,454] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,454] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,457] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,457] DEBUG | Invoking afterPropertiesSet() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:23:02,458] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,459] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,459] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,460] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,462] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,464] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,464] DEBUG | Invoking afterPropertiesSet() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:23:02,465] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,465] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,466] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:23:02,466] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:23:02,467] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:23:02,467] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:23:02,469] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:02,504] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:02,515] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:02,528] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136969491, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136971260, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:23:02,539] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:23:02,539] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:23:02,545] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,545] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,546] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,546] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,546] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,547] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,547] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,547] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,548] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,548] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,548] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,548] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,552] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,553] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,553] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:23:02,555] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1087be0 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:23:02,558] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:23:02,575] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:23:02,576] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:23:02,575] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:23:02,578] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:23:02,580] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:23:02,625] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479fbe4cc60004, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:23:02,629] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:23:02,629] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:23:02,629] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:23:02,630] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:23:02,638] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:02,649] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:02,659] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:23:02,780] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836831,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:02,812] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836832,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:02,848] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836833,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:02,885] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836834,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7052%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136982472,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7052%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136982472  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:02,885] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:23:02,906] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836835,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:02,931] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836836,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:02,967] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836837,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:02,975] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836837,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,13,0,0,0,1,21474836812}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:02,981] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836837,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7688%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136968847}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,008] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836838,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,040] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836839,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,065] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836840,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,066] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,21474836840,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,067] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,21474836840,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,098] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836841,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,139] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836842,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,176] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,21474836843,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,177] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,21474836843,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,178] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,21474836843,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,179] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:23:03,204] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:03,241] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:03,253] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:03,317] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x00a5ce92, /192.168.1.35:55735 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 15:23:03,318] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 15:23:03,339] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:03,354] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:03,367] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:03,384] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:23:03,390] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:03,396] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:23:03,413] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836844,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,437] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836845,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,475] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836846,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,511] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836847,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7052%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136983391,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7052%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136983391  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,512] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:23:03,549] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836848,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,585] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836849,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,610] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,21474836850,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,612] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,21474836850,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: s{21474836588,21474836588,1407135741178,1407135741178,0,5,0,0,0,1,21474836826}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,613] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 28,8  replyHeader:: 28,21474836850,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: v{'hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7688%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136971260}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,643] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474836851,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,655] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474836852,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,679] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474836853,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,680] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 32,3  replyHeader:: 32,21474836853,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,681] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 33,8  replyHeader:: 33,21474836853,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,715] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474836854,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,739] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 35,1  replyHeader:: 35,21474836855,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,764] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 36,1  replyHeader:: 36,21474836856,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,766] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 37,3  replyHeader:: 37,21474836856,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: s{21474836601,21474836601,1407135741514,1407135741514,0,0,0,0,0,0,21474836601}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,767] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 38,8  replyHeader:: 38,21474836856,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,767] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391, urls: [hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136971260, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:23:03,771] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:23:03,793] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:23:03,795] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:23:03,804] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983799, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:23:03,821] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 39,1  replyHeader:: 39,21474836857,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,845] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 40,1  replyHeader:: 40,21474836858,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,870] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 41,1  replyHeader:: 41,21474836859,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,894] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 42,1  replyHeader:: 42,21474836860,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7052%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136983799,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7052%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407136983799  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,895] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983799, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:23:03,927] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 43,1  replyHeader:: 43,21474836861,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,963] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 44,1  replyHeader:: 44,21474836862,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:03,999] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 45,1  replyHeader:: 45,21474836863,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,001] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 46,3  replyHeader:: 46,21474836863,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: s{21474836494,21474836494,1407134615769,1407134615769,0,9,0,0,0,1,21474836819}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,002] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 47,8  replyHeader:: 47,21474836863,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: v{'rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7688%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136969491}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,046] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 48,1  replyHeader:: 48,21474836864,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,088] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 49,1  replyHeader:: 49,21474836865,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,113] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 50,1  replyHeader:: 50,21474836866,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,114] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 51,3  replyHeader:: 51,21474836866,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,115] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 52,8  replyHeader:: 52,21474836866,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,134] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 53,1  replyHeader:: 53,21474836867,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,156] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 54,1  replyHeader:: 54,21474836868,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,190] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 55,1  replyHeader:: 55,21474836869,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,191] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 56,3  replyHeader:: 56,21474836869,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: s{21474836540,21474836540,1407135105323,1407135105323,0,0,0,0,0,0,21474836540}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,192] DEBUG | Reading reply sessionid:0x1479fbe4cc60004, packet:: clientPath:null serverPath:null finished:false header:: 57,8  replyHeader:: 57,21474836869,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:23:04,192] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983799, urls: [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136969491, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983799, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983799], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:23:04,244] DEBUG | Located RMI stub with URL [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] | [main] org.springframework.remoting.rmi.RmiClientInterceptor.lookupStub(203)
[VAMS][2014-08-04 15:23:04,244] DEBUG | RMI stub [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiClientInterceptor.prepare(150)
[VAMS][2014-08-04 15:23:04,249] DEBUG | Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:23:04,253] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983799, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:23:04,255] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 15:23:04,351] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:23:04,508] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1410a85: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:23:04,508] DEBUG | Invoking destroy() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:23:04,508] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:23:04,509] DEBUG | Invoking destroy() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:23:04,509] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983799, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:23:04,510] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:23:04,510] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:23:04,511] INFO |  [DUBBO] Close netty channel [id: 0x00a5ce92, /192.168.1.35:55735 => /192.168.1.35:20881], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-04 15:23:04,513] INFO |  [DUBBO] disconected from /192.168.1.35:20881,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboSharedHandler-thread-1] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:23:04,514] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Invocation of init method failed; nested exception is com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:20883] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:101)
	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:227)
	at com.alibaba.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:72)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy1.hasseinSayHello(proxy1.java)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 59 more
Caused by: com.caucho.hessian.client.HessianConnectionException: HessianProxy cannot connect to 'http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:139)
	at com.caucho.hessian.client.HessianProxy.sendRequest(HessianProxy.java:283)
	at com.caucho.hessian.client.HessianProxy.invoke(HessianProxy.java:170)
	at $Proxy19.hasseinSayHello(Unknown Source)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$2.doInvoke(AbstractProxyProtocol.java:93)
	at com.alibaba.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:144)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:48)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:74)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:77)
	... 71 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1491)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1485)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1139)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:122)
	... 88 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1434)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:109)
	... 88 more
[VAMS][2014-08-04 15:23:14,192] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:23:24,193] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:23:34,194] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:23:44,195] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:23:54,195] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:04,197] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:14,198] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:24,199] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:34,200] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:44,201] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:54,202] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:04,204] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:14,204] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:24,205] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:34,204] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:44,207] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:54,208] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:26:04,208] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:27:51,630] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:27:51,675] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:51,676] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:51,678] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:51,679] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:51,680] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:51,680] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:27:51,684] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:27:51,685] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:27:51 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:27:51,704] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:51,704] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:51,705] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:27:51,709] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:27:51,713] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:27:51,732] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:27:51,736] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:27:51,740] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:27:51,761] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:27:51,768] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:27:51,778] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:27:51,794] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:27:51,803] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:27:51,824] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:51,825] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:51,825] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:27:51,832] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:27:51,832] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:27:51,834] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:27:51,834] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:27:51,836] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:27:51,850] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 15:27:51,855] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:27:51,883] DEBUG | Loaded 11 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:27:51,883] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@119b1ca: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:27:51,893] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,894] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:51,905] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:51,906] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:51,927] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,927] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:51,928] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:51,929] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:51,929] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,929] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:51,930] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:51,930] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:51,930] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,931] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:51,933] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:51,934] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:51,934] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,934] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:51,935] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:51,935] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:51,935] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,935] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:51,936] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:51,936] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:51,938] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@13d5f21] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:27:51,939] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@bfb545] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:27:51,940] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@10fb9bd] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:27:51,941] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@119b1ca: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:27:51,941] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:51,942] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:51,942] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:51,942] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:51,942] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,943] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:51,947] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:51,954] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:51,955] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,955] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:51,957] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:51,967] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:51,968] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,968] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:51,970] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:51,975] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:51,975] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:51,975] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:52,002] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:52,157] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:52,170] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:52,182] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:52,194] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:27:52,194] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:52,195] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:52,195] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:52,196] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:52,196] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:52,199] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:52,199] DEBUG | Invoking afterPropertiesSet() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:27:52,201] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:52,201] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:52,201] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:52,202] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:52,204] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:52,206] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:52,207] DEBUG | Invoking afterPropertiesSet() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:27:52,207] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:52,208] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:52,208] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:52,209] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:52,209] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:52,210] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:52,211] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:52,243] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:52,253] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:52,265] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:27:52,275] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:27:52,276] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:27:52,281] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,281] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,282] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,282] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,282] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,282] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,283] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,283] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,283] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,284] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,284] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,284] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,288] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,288] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,288] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:52,289] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1087be0 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:27:52,291] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:27:52,307] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:27:52,308] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:27:52,308] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:27:52,310] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:27:52,312] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:27:52,347] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0005, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:27:52,349] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:27:52,349] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:27:52,349] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:27:52,349] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:27:52,357] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:52,368] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:52,380] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:27:52,413] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836895,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,447] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836896,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,484] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836897,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,509] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836898,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9212%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407137272214,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9212%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407137272214  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,509] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:27:52,545] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836899,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,584] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836900,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,619] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836901,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,623] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836901,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,15,0,0,0,1,21474836876}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,642] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836901,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137252009}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,702] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836902,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,725] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836903,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,764] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836904,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,767] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,21474836904,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,769] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,21474836904,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,801] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836905,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,833] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836906,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,869] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,21474836907,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,870] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,21474836907,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,871] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,21474836907,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:52,872] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:27:52,900] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:52,933] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:52,944] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:53,028] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x0183ee9a, /192.168.1.35:55816 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 15:27:53,028] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 15:27:53,049] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:53,064] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:53,078] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:53,098] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:27:53,104] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:53,111] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:27:53,127] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836908,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,149] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836909,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,183] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836910,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,222] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836911,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D9212%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407137273106,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D9212%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407137273106  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,222] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:27:53,257] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836912,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,290] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836913,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,327] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,21474836914,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,328] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,21474836914,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: s{21474836588,21474836588,1407135741178,1407135741178,0,7,0,0,0,1,21474836890}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,329] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 28,8  replyHeader:: 28,21474836914,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: v{'hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137253964}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,363] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474836915,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,400] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474836916,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,424] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474836917,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,426] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 32,3  replyHeader:: 32,21474836917,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,427] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 33,8  replyHeader:: 33,21474836917,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,461] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474836918,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,496] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 35,1  replyHeader:: 35,21474836919,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,528] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 36,1  replyHeader:: 36,21474836920,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,531] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 37,3  replyHeader:: 37,21474836920,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: s{21474836601,21474836601,1407135741514,1407135741514,0,0,0,0,0,0,21474836601}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,533] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 38,8  replyHeader:: 38,21474836920,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,533] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106, urls: [hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:27:53,538] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:53,561] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:27:53,563] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:53,574] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273566, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:27:53,604] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 39,1  replyHeader:: 39,21474836921,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,629] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 40,1  replyHeader:: 40,21474836922,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,654] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 41,1  replyHeader:: 41,21474836923,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,666] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 42,1  replyHeader:: 42,21474836924,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D9212%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407137273566,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D9212%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407137273566  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,666] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273566, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:27:53,699] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 43,1  replyHeader:: 43,21474836925,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,735] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 44,1  replyHeader:: 44,21474836926,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,771] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 45,1  replyHeader:: 45,21474836927,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,772] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 46,3  replyHeader:: 46,21474836927,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: s{21474836494,21474836494,1407134615769,1407134615769,0,11,0,0,0,1,21474836883}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,773] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 47,8  replyHeader:: 47,21474836927,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: v{'rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137252686}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,809] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 48,1  replyHeader:: 48,21474836928,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,846] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 49,1  replyHeader:: 49,21474836929,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,883] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 50,1  replyHeader:: 50,21474836930,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,885] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 51,3  replyHeader:: 51,21474836930,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,887] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 52,8  replyHeader:: 52,21474836930,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,917] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 53,1  replyHeader:: 53,21474836931,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,942] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 54,1  replyHeader:: 54,21474836932,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,973] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 55,1  replyHeader:: 55,21474836933,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,974] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 56,3  replyHeader:: 56,21474836933,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: s{21474836540,21474836540,1407135105323,1407135105323,0,0,0,0,0,0,21474836540}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,975] DEBUG | Reading reply sessionid:0x2479fbe4cae0005, packet:: clientPath:null serverPath:null finished:false header:: 57,8  replyHeader:: 57,21474836933,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:53,975] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273566, urls: [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273566, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273566], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:27:54,021] DEBUG | Located RMI stub with URL [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] | [main] org.springframework.remoting.rmi.RmiClientInterceptor.lookupStub(203)
[VAMS][2014-08-04 15:27:54,021] DEBUG | RMI stub [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiClientInterceptor.prepare(150)
[VAMS][2014-08-04 15:27:54,027] DEBUG | Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:27:54,031] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273566, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:27:54,034] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 15:27:54,132] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:27:54,356] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@119b1ca: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:27:54,356] DEBUG | Invoking destroy() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:27:54,357] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:27:54,358] DEBUG | Invoking destroy() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:27:54,360] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273566, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:27:54,361] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:27:54,362] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:27:54,364] INFO |  [DUBBO] Close netty channel [id: 0x0183ee9a, /192.168.1.35:55816 => /192.168.1.35:20881], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-04 15:27:54,367] INFO |  [DUBBO] disconected from /192.168.1.35:20881,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboSharedHandler-thread-1] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:27:54,371] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Invocation of init method failed; nested exception is com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:9898] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:9898] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:101)
	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:227)
	at com.alibaba.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:72)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy1.hasseinSayHello(proxy1.java)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 59 more
Caused by: com.caucho.hessian.client.HessianConnectionException: HessianProxy cannot connect to 'http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:139)
	at com.caucho.hessian.client.HessianProxy.sendRequest(HessianProxy.java:283)
	at com.caucho.hessian.client.HessianProxy.invoke(HessianProxy.java:170)
	at $Proxy19.hasseinSayHello(Unknown Source)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$2.doInvoke(AbstractProxyProtocol.java:93)
	at com.alibaba.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:144)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:48)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:74)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:77)
	... 71 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1491)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1485)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1139)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:122)
	... 88 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1434)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:109)
	... 88 more
[VAMS][2014-08-04 15:28:03,978] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0005 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:28:13,979] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0005 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:28:23,980] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0005 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:41:44,034] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:41:44,082] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:44,083] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:44,085] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:44,086] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:44,087] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:44,088] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:41:44,091] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:41:44,092] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:41:44 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:41:44,112] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:44,112] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:44,113] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:41:44,117] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:41:44,120] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:41:44,139] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:41:44,143] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:41:44,148] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:41:44,167] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:41:44,171] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:41:44,175] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:41:44,191] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:41:44,200] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:41:44,220] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:44,221] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:44,221] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:41:44,229] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:41:44,230] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:41:44,231] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:41:44,231] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:41:44,233] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:41:44,250] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 15:41:44,255] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:41:44,280] DEBUG | Loaded 11 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:41:44,281] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1e779a7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:41:44,294] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,296] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,307] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,309] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,329] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,329] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,330] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,330] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,331] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,331] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,331] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,332] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,332] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,332] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,334] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,335] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,335] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,335] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,336] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,336] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,336] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,337] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,337] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,337] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,341] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@8be1c9] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:41:44,343] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16d46d7] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:41:44,344] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@16feee5] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:41:44,346] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e779a7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:41:44,346] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,346] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,347] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,347] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,347] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,347] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,349] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,357] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,357] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,357] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,359] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,370] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,370] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,370] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,372] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,376] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,376] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,377] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,403] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:44,564] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:44,577] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:44,590] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,600] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:41:44,601] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,602] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,602] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,603] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,603] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,607] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,607] DEBUG | Invoking afterPropertiesSet() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:41:44,609] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,609] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,610] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,610] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,612] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,614] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,615] DEBUG | Invoking afterPropertiesSet() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:41:44,616] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,616] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,616] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:44,617] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:44,617] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:44,618] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:44,619] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:44,656] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:44,667] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:44,680] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138086435, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9096&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138087728, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:41:44,690] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:41:44,690] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:41:44,696] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,696] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,696] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,697] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,697] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,697] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,698] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,698] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,698] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,699] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,699] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,699] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,703] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,703] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,704] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:44,706] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1fce2f2 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:41:44,708] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:41:44,723] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:41:44,724] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:41:44,724] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:41:44,726] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:41:44,729] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:41:44,764] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479fbe4cc60005, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:41:44,766] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:41:44,766] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:41:44,766] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:41:44,766] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:41:44,775] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:44,789] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:44,799] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138104622, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:41:44,834] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474837014,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:44,865] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474837015,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:44,890] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474837016,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:44,913] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474837017,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6964%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407138104622,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6964%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407138104622  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:44,913] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138104622, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:41:44,937] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474837018,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:44,962] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474837019,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:44,999] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474837020,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,004] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474837020,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,21,0,0,0,1,21474836995}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,008] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474837020,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9096%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138085744}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,034] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474837021,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,053] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837022,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,075] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837023,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,076] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,21474837023,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,077] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,21474837023,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,107] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837024,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,143] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837025,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,179] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,21474837026,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,180] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,21474837026,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,181] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,21474837026,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,182] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138104622, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138104622, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138104622], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:41:45,207] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:45,242] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:45,258] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:45,327] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x00a5ce92, /192.168.1.35:56202 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 15:41:45,327] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 15:41:45,349] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:45,363] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:45,373] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:45,386] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138104622, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:41:45,392] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:45,398] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105394, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:41:45,423] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837027,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,447] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837028,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,473] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837029,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,497] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837030,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D6964%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407138105394,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D6964%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407138105394  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,497] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105394, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:41:45,533] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837031,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,569] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837032,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,605] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,21474837033,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,606] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,21474837033,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: s{21474836588,21474836588,1407135741178,1407135741178,0,13,0,0,0,1,21474837009}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,607] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 28,8  replyHeader:: 28,21474837033,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: v{'hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D9096%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407138087728}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,641] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474837034,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,666] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474837035,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,702] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474837036,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,703] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 32,3  replyHeader:: 32,21474837036,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,705] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 33,8  replyHeader:: 33,21474837036,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,738] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474837037,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,763] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 35,1  replyHeader:: 35,21474837038,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,799] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 36,1  replyHeader:: 36,21474837039,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,801] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 37,3  replyHeader:: 37,21474837039,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: s{21474836601,21474836601,1407135741514,1407135741514,0,0,0,0,0,0,21474836601}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,802] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 38,8  replyHeader:: 38,21474837039,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,803] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105394, urls: [hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9096&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138087728, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105394, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105394], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:41:45,807] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:45,826] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6964&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407138105394, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:41:45,828] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:45,837] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105832, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:41:45,864] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 39,1  replyHeader:: 39,21474837040,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,889] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 40,1  replyHeader:: 40,21474837041,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,901] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 41,1  replyHeader:: 41,21474837042,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,926] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 42,1  replyHeader:: 42,21474837043,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D6964%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407138105832,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D6964%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407138105832  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:45,926] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105832, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:41:45,975] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 43,1  replyHeader:: 43,21474837044,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,011] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 44,1  replyHeader:: 44,21474837045,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,036] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 45,1  replyHeader:: 45,21474837046,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,037] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 46,3  replyHeader:: 46,21474837046,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: s{21474836494,21474836494,1407134615769,1407134615769,0,17,0,0,0,1,21474837002}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,039] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 47,8  replyHeader:: 47,21474837046,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: v{'rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D9096%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138086435}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,073] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 48,1  replyHeader:: 48,21474837047,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,108] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 49,1  replyHeader:: 49,21474837048,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,145] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 50,1  replyHeader:: 50,21474837049,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,146] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 51,3  replyHeader:: 51,21474837049,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,147] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 52,8  replyHeader:: 52,21474837049,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,157] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 53,1  replyHeader:: 53,21474837050,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,215] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 54,1  replyHeader:: 54,21474837051,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,251] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 55,1  replyHeader:: 55,21474837052,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,253] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 56,3  replyHeader:: 56,21474837052,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: s{21474836540,21474836540,1407135105323,1407135105323,0,0,0,0,0,0,21474836540}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,255] DEBUG | Reading reply sessionid:0x1479fbe4cc60005, packet:: clientPath:null serverPath:null finished:false header:: 57,8  replyHeader:: 57,21474837052,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:46,256] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105832, urls: [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138086435, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105832, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105832], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:41:46,339] DEBUG | Located RMI stub with URL [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] | [main] org.springframework.remoting.rmi.RmiClientInterceptor.lookupStub(203)
[VAMS][2014-08-04 15:41:46,340] DEBUG | RMI stub [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiClientInterceptor.prepare(150)
[VAMS][2014-08-04 15:41:46,345] DEBUG | Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:41:46,349] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105832, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 15:41:46,352] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 15:41:46,446] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:41:46,597] DEBUG | Finished creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:46,597] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:46,597] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:46,598] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@f757b9] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:41:46,599] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:46,600] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:46,600] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:46,600] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:46,600] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:41:46,601] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 15:41:46,601] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:41:46,602] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 15:41:46,602] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:46,602] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:46,603] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 15:41:46,603] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 15:41:46,603] INFO | Root WebApplicationContext: initialization completed in 2564 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 15:41:56,256] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:06,255] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:16,258] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:26,258] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:36,260] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:46,261] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:56,293] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 30ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:06,264] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:16,266] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:26,025] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-04 15:43:26,266] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:36,268] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:46,269] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:56,268] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:06,271] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:16,273] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:26,034] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-04 15:44:26,273] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:36,274] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:46,273] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:56,276] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:06,277] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:16,278] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:26,035] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-04 15:45:26,280] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:36,281] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:46,282] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:56,282] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:06,283] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:16,284] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:26,037] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-04 15:46:26,285] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:36,288] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:46,289] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:56,289] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:06,290] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:16,291] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:26,039] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-04 15:47:26,292] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:36,292] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:46,293] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:56,293] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:06,295] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:16,295] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:26,042] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-04 15:48:26,296] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:36,297] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:46,297] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:56,298] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:06,299] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:16,298] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:26,044] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-04 15:49:26,300] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:36,301] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:46,303] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:56,303] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:50:06,320] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:50:16,320] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:50:26,047] DEBUG |  [DUBBO] Received heartbeat from remote channel /192.168.1.35:20881, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 192.168.1.35 | [New I/O client worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(72)
[VAMS][2014-08-04 15:50:26,321] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60005 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:08:15,279] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 16:08:15,329] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:15,330] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:15,332] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:15,333] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:15,334] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:15,334] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:08:15,337] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 16:08:15,338] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 16:08:15 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 16:08:15,358] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:15,359] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:15,360] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:08:15,364] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 16:08:15,367] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 16:08:15,386] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 16:08:15,390] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 16:08:15,395] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:08:15,416] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:08:15,423] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:08:15,428] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:08:15,444] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 16:08:15,453] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 16:08:15,473] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:15,474] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:15,474] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:08:15,486] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 16:08:15,487] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:08:15,488] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:08:15,488] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:08:15,489] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 16:08:15,504] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 16:08:15,509] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 16:08:15,542] DEBUG | Loaded 12 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 16:08:15,542] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@188a387: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 16:08:15,553] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,554] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,565] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,567] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,585] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,586] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,587] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,587] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,587] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,587] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,588] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,589] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,589] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,589] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,592] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,592] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,593] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,593] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,593] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,594] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,594] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,594] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,594] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,595] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,596] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1947647] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 16:08:15,597] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@145d424] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 16:08:15,598] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1ad0d89] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 16:08:15,600] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@188a387: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 16:08:15,600] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,600] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,600] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,601] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,601] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,603] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,605] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,613] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,613] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,613] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,615] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,627] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,628] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,628] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,630] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,634] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,635] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,635] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,661] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:15,827] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:15,841] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:15,854] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,864] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:08:15,864] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,865] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,865] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,866] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,866] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,869] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,869] DEBUG | Invoking afterPropertiesSet() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:08:15,870] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,871] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,871] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,872] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,872] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,876] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,877] DEBUG | Invoking afterPropertiesSet() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:08:15,878] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,879] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,879] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,879] DEBUG | Creating shared instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,879] DEBUG | Creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,882] DEBUG | Eagerly caching bean 'webServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,882] DEBUG | Invoking afterPropertiesSet() on bean with name 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:08:15,883] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,883] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,884] DEBUG | Finished creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:15,884] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:15,884] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:15,885] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:15,887] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:15,921] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:15,932] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:15,946] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139681664, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139680966, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683391, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, test/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 16:08:15,962] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 16:08:15,967] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 16:08:15,968] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,968] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,969] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,969] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,969] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,970] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,973] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,974] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,974] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,974] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,975] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,975] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,975] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,976] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,976] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:15,977] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@e9927a | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 16:08:15,979] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 16:08:15,997] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 16:08:15,997] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 16:08:15,998] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 16:08:16,000] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 16:08:16,002] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 16:08:16,048] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae000a, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 16:08:16,050] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 16:08:16,050] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 16:08:16,050] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 16:08:16,050] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 16:08:16,056] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:16,067] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:16,077] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139695891, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:08:16,108] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474837211,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,143] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474837212,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,168] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474837213,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,182] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474837214,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6460%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407139695891,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6460%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407139695891  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,182] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139695891, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:08:16,215] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474837215,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,227] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474837216,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,247] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474837217,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,252] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474837217,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,33,0,0,0,1,21474837185}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,257] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474837217,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139680966}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,291] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474837218,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,322] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837219,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,359] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837220,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,361] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,21474837220,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,362] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,21474837220,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,398] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837221,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,423] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837222,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,447] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,21474837223,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,448] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,21474837223,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,452] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,21474837223,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,453] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139695891, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139680966, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139695891, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139695891], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:08:16,477] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:16,517] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:16,531] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:16,608] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x0055108e, /192.168.1.35:56686 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 16:08:16,608] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 16:08:16,637] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:16,648] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:16,659] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:16,674] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139695891, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 16:08:16,682] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:16,690] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139696684, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:08:16,743] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837224,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,755] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837225,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,780] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837226,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,819] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837227,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D6460%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407139696684,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D6460%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407139696684  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,819] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139696684, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:08:16,857] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837228,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,895] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837229,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,931] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,21474837230,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,933] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,21474837230,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: s{21474836588,21474836588,1407135741178,1407135741178,0,25,0,0,0,1,21474837199}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,934] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 28,8  replyHeader:: 28,21474837230,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: v{'hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139683391}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:16,969] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474837231,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,005] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474837232,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,018] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474837233,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,020] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 32,3  replyHeader:: 32,21474837233,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,021] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 33,8  replyHeader:: 33,21474837233,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,051] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474837234,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,088] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 35,1  replyHeader:: 35,21474837235,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,126] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 36,1  replyHeader:: 36,21474837236,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,136] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 37,3  replyHeader:: 37,21474837236,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: s{21474836601,21474836601,1407135741514,1407135741514,0,0,0,0,0,0,21474836601}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,139] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 38,8  replyHeader:: 38,21474837236,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,139] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139696684, urls: [hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683391, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139696684, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139696684], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:08:17,147] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:17,165] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6460&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407139696684, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 16:08:17,168] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:17,176] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697170, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:08:17,195] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 39,1  replyHeader:: 39,21474837237,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,232] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 40,1  replyHeader:: 40,21474837238,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,271] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 41,1  replyHeader:: 41,21474837239,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,303] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 42,1  replyHeader:: 42,21474837240,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D6460%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407139697170,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D6460%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407139697170  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,304] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697170, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:08:17,343] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 43,1  replyHeader:: 43,21474837241,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,373] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 44,1  replyHeader:: 44,21474837242,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,410] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 45,1  replyHeader:: 45,21474837243,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,411] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 46,3  replyHeader:: 46,21474837243,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: s{21474836494,21474836494,1407134615769,1407134615769,0,29,0,0,0,1,21474837192}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,412] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 47,8  replyHeader:: 47,21474837243,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: v{'rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139681664}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,445] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 48,1  replyHeader:: 48,21474837244,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,475] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 49,1  replyHeader:: 49,21474837245,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,513] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 50,1  replyHeader:: 50,21474837246,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,514] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 51,3  replyHeader:: 51,21474837246,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,515] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 52,8  replyHeader:: 52,21474837246,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,545] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 53,1  replyHeader:: 53,21474837247,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,579] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 54,1  replyHeader:: 54,21474837248,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,593] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 55,1  replyHeader:: 55,21474837249,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,594] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 56,3  replyHeader:: 56,21474837249,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: s{21474836540,21474836540,1407135105323,1407135105323,0,0,0,0,0,0,21474836540}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,595] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 57,8  replyHeader:: 57,21474837249,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,596] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697170, urls: [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139681664, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697170, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697170], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:08:17,648] DEBUG | Located RMI stub with URL [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] | [main] org.springframework.remoting.rmi.RmiClientInterceptor.lookupStub(203)
[VAMS][2014-08-04 16:08:17,649] DEBUG | RMI stub [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiClientInterceptor.prepare(150)
[VAMS][2014-08-04 16:08:17,655] DEBUG | Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 16:08:17,658] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697170, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 16:08:17,666] DEBUG | Returning cached instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:17,675] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697668, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:08:17,717] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 58,1  replyHeader:: 58,21474837250,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,749] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 59,1  replyHeader:: 59,21474837251,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,787] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 60,1  replyHeader:: 60,21474837252,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/consumers  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,823] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 61,1  replyHeader:: 61,21474837253,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%2526methods%253DwebServiceSayHello%2526pid%253D6460%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407139697668,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%2526methods%253DwebServiceSayHello%2526pid%253D6460%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407139697668  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,824] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697668, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:08:17,860] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 62,1  replyHeader:: 62,21474837254,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,897] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 63,1  replyHeader:: 63,21474837255,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,935] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 64,1  replyHeader:: 64,21474837256,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,936] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 65,3  replyHeader:: 65,21474837256,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers,T  response:: s{21474837175,21474837175,1407139506173,1407139506173,0,3,0,0,0,1,21474837206}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,937] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 66,8  replyHeader:: 66,21474837256,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers,T  response:: v{'webservice%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%2526methods%253DwebServiceSayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139683712}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,972] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 67,1  replyHeader:: 67,21474837257,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:17,996] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 68,1  replyHeader:: 68,21474837258,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:18,021] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 69,1  replyHeader:: 69,21474837259,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:18,023] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 70,3  replyHeader:: 70,21474837259,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators,T  response:: s{21474837179,21474837179,1407139506313,1407139506313,0,0,0,0,0,0,21474837179}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:18,024] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 71,8  replyHeader:: 71,21474837259,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:18,058] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 72,1  replyHeader:: 72,21474837260,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:18,095] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 73,1  replyHeader:: 73,21474837261,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:18,120] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 74,1  replyHeader:: 74,21474837262,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/routers  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:18,121] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 75,3  replyHeader:: 75,21474837262,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/routers,T  response:: s{21474837262,21474837262,1407139698096,1407139698096,0,0,0,0,0,0,21474837262}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:18,122] DEBUG | Reading reply sessionid:0x2479fbe4cae000a, packet:: clientPath:null serverPath:null finished:false header:: 76,8  replyHeader:: 76,21474837262,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:18,122] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697668, urls: [webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697668, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697668], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:08:18,271] DEBUG | Using org.apache.cxf.common.logging.Log4jLogger for logging. | [main] org.apache.cxf.common.logging.LogUtils.<clinit>(140)
[VAMS][2014-08-04 16:08:18,312] ERROR |  [DUBBO] Failed to refer invoker for interface:interface com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,url:(webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407139697668)Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.integration.RegistryDirectory.toInvokers(398)
java.lang.IllegalStateException: Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:518)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:319)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.refer(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.toInvokers(RegistryDirectory.java:395)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.refreshInvoker(RegistryDirectory.java:224)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.notify(RegistryDirectory.java:195)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:449)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.doNotify(FailbackRegistry.java:273)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.notify(FailbackRegistry.java:259)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doSubscribe(ZookeeperRegistry.java:170)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.subscribe(FailbackRegistry.java:189)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.subscribe(RegistryDirectory.java:133)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doRefer(RegistryProtocol.java:271)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:254)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:63)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.refer(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:392)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NoClassDefFoundError: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.rpc.protocol.webservice.WebServiceProtocol.<init>(WebServiceProtocol.java:64)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:506)
	... 88 more
Caused by: java.lang.ClassNotFoundException: org.apache.cxf.transport.http.HTTPTransportFactory
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:375)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
	... 96 more
[VAMS][2014-08-04 16:08:18,316] ERROR | urls to invokers error .invokerUrls.size :1, invoker.size :0. urls :[webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712] | [main] com.alibaba.dubbo.registry.integration.RegistryDirectory.refreshInvoker(229)
java.lang.IllegalStateException: urls to invokers error .invokerUrls.size :1, invoker.size :0. urls :[webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712]
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.refreshInvoker(RegistryDirectory.java:229)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.notify(RegistryDirectory.java:195)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:449)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.doNotify(FailbackRegistry.java:273)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.notify(FailbackRegistry.java:259)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doSubscribe(ZookeeperRegistry.java:170)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.subscribe(FailbackRegistry.java:189)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.subscribe(RegistryDirectory.java:133)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doRefer(RegistryProtocol.java:271)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:254)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:63)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.refer(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:392)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
[VAMS][2014-08-04 16:08:18,325] ERROR |  [DUBBO] Failed to refer invoker for interface:interface com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,url:(webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407139697668)Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.integration.RegistryDirectory.toInvokers(398)
java.lang.IllegalStateException: Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:518)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:319)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.refer(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.toInvokers(RegistryDirectory.java:395)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.refreshInvoker(RegistryDirectory.java:224)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.notify(RegistryDirectory.java:195)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:449)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.doNotify(FailbackRegistry.java:273)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.notify(FailbackRegistry.java:259)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doSubscribe(ZookeeperRegistry.java:170)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.subscribe(FailbackRegistry.java:189)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.subscribe(RegistryDirectory.java:133)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doRefer(RegistryProtocol.java:271)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:254)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:63)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.refer(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:392)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NoClassDefFoundError: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.rpc.protocol.webservice.WebServiceProtocol.<init>(WebServiceProtocol.java:64)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:506)
	... 88 more
[VAMS][2014-08-04 16:08:18,329] ERROR | urls to invokers error .invokerUrls.size :1, invoker.size :0. urls :[webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712] | [main] com.alibaba.dubbo.registry.integration.RegistryDirectory.refreshInvoker(229)
java.lang.IllegalStateException: urls to invokers error .invokerUrls.size :1, invoker.size :0. urls :[webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712]
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.refreshInvoker(RegistryDirectory.java:229)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.notify(RegistryDirectory.java:195)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:449)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.doNotify(FailbackRegistry.java:273)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.notify(FailbackRegistry.java:259)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doSubscribe(ZookeeperRegistry.java:170)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.subscribe(FailbackRegistry.java:189)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.subscribe(RegistryDirectory.java:133)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doRefer(RegistryProtocol.java:271)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:254)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:63)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.refer(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:392)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
[VAMS][2014-08-04 16:08:18,334] ERROR |  [DUBBO] Failed to refer invoker for interface:interface com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,url:(webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407139697668)Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.integration.RegistryDirectory.toInvokers(398)
java.lang.IllegalStateException: Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:518)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:319)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.refer(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.toInvokers(RegistryDirectory.java:395)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.refreshInvoker(RegistryDirectory.java:224)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.notify(RegistryDirectory.java:195)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:449)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.doNotify(FailbackRegistry.java:273)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.notify(FailbackRegistry.java:259)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doSubscribe(ZookeeperRegistry.java:170)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.subscribe(FailbackRegistry.java:189)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.subscribe(RegistryDirectory.java:133)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doRefer(RegistryProtocol.java:271)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:254)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:63)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.refer(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:392)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NoClassDefFoundError: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.rpc.protocol.webservice.WebServiceProtocol.<init>(WebServiceProtocol.java:64)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:506)
	... 88 more
[VAMS][2014-08-04 16:08:18,337] ERROR | urls to invokers error .invokerUrls.size :1, invoker.size :0. urls :[webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712] | [main] com.alibaba.dubbo.registry.integration.RegistryDirectory.refreshInvoker(229)
java.lang.IllegalStateException: urls to invokers error .invokerUrls.size :1, invoker.size :0. urls :[webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712]
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.refreshInvoker(RegistryDirectory.java:229)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.notify(RegistryDirectory.java:195)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:449)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.doNotify(FailbackRegistry.java:273)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.notify(FailbackRegistry.java:259)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doSubscribe(ZookeeperRegistry.java:170)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.subscribe(FailbackRegistry.java:189)
	at com.alibaba.dubbo.registry.integration.RegistryDirectory.subscribe(RegistryDirectory.java:133)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doRefer(RegistryProtocol.java:271)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:254)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:63)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.refer(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:392)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
[VAMS][2014-08-04 16:08:18,339] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@188a387: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 16:08:18,339] DEBUG | Invoking destroy() on bean with name 'webServiceDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:08:18,340] DEBUG | Invoking destroy() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:08:18,340] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139696684, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 16:08:18,341] DEBUG | Invoking destroy() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:08:18,341] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139697170, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 16:08:18,341] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:08:18,341] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139695891, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 16:08:18,342] INFO |  [DUBBO] Close netty channel [id: 0x0055108e, /192.168.1.35:56686 => /192.168.1.35:20881], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-04 16:08:18,344] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Cannot resolve reference to bean 'webServiceDemoService' while setting bean property 'webServiceDemoService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webServiceDemoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService. No provider available for the service test/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407139697668 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:336)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webServiceDemoService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService. No provider available for the service test/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407139697668 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	... 62 more
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService. No provider available for the service test/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService from the url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=6460&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407139697668 to the consumer 192.168.1.35 use dubbo version 2.5.3
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 67 more
[VAMS][2014-08-04 16:08:18,346] INFO |  [DUBBO] disconected from /192.168.1.35:20881,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6460&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407139695891, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboSharedHandler-thread-1] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 16:08:28,123] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:08:38,123] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:08:48,125] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:08:58,125] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:08,126] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:18,129] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 2ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:28,128] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:38,131] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:48,132] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:58,136] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:08,135] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:18,135] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:28,138] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:38,138] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:48,140] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:58,141] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:08,141] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:18,142] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:28,145] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:38,147] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:48,146] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:58,149] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:12:08,150] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:12:18,151] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000a after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:48:22,210] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 16:48:22,255] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:48:22,255] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:48:22,258] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:48:22,259] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:48:22,260] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:48:22,260] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:48:22,264] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 16:48:22,265] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 16:48:22 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 16:48:22,290] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:48:22,291] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:48:22,291] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:48:22,296] INFO | Loading XML bean definitions from class path resource [consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 16:48:22,299] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 16:48:22,318] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 16:48:22,321] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 16:48:22,328] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:48:22,348] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:48:22,351] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:48:22,355] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:48:22,370] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 16:48:22,380] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 16:48:22,407] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:48:22,407] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:48:22,408] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:48:22,413] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 16:48:22,414] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:48:22,415] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:48:22,416] DEBUG | Searching directory [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util] for files matching pattern [F:/myCode/dubbodemo/consumer/target/classes/com/xiaohao/dubbodemo/consumer/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:48:22,417] DEBUG | Resolved location pattern [classpath*:com/xiaohao/dubbodemo/consumer/*/**/*.class] to resources [file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper$1.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\curator\TryToOptZookeeper.class], file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 16:48:22,433] DEBUG | Identified candidate component class: file [F:\myCode\dubbodemo\consumer\target\classes\com\xiaohao\dubbodemo\consumer\util\SpringContextUtil.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(284)
[VAMS][2014-08-04 16:48:22,438] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 16:48:22,461] DEBUG | Loaded 11 bean definitions from location pattern [classpath:consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 16:48:22,461] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1e3e7d2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 16:48:22,473] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,476] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,488] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,491] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,514] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,514] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,515] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,516] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,516] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,516] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,517] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,517] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,517] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,518] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,520] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,520] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,521] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,521] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,521] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,522] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,522] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,522] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,522] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,523] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,524] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1947647] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 16:48:22,525] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@145d424] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 16:48:22,526] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1ad0d89] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 16:48:22,529] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e3e7d2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 16:48:22,529] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,529] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,530] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,530] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,530] DEBUG | Creating shared instance of singleton bean 'springContextUtil' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,530] DEBUG | Creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,532] DEBUG | Eagerly caching bean 'springContextUtil' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,539] DEBUG | Finished creating instance of bean 'springContextUtil' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,541] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,542] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,544] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,555] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,556] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,556] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,558] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,561] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,562] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,562] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,589] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:22,752] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:22,765] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:22,778] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,788] DEBUG | Invoking afterPropertiesSet() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:48:22,789] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,789] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,790] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,790] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,790] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,793] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,794] DEBUG | Invoking afterPropertiesSet() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:48:22,795] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,796] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,796] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,797] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,798] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,802] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,802] DEBUG | Invoking afterPropertiesSet() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:48:22,803] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,804] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,804] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:48:22,805] DEBUG | Creating shared instance of singleton bean 'startor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:48:22,805] DEBUG | Creating instance of bean 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:48:22,805] DEBUG | Eagerly caching bean 'startor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:48:22,807] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:22,840] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:22,850] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:22,864] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5488&revision=1.0-SNAPSHOT&side=provider&timestamp=1407142042294, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5488&revision=1.0-SNAPSHOT&side=provider&timestamp=1407142041638, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5488&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407142043755, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, test/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=5488&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407142044161, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 16:48:22,875] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 16:48:22,875] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-17-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 16:48:22,881] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,881] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,882] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,882] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,882] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,882] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,883] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,883] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,883] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,884] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,884] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,888] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,888] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,888] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,888] INFO | Client environment:user.dir=F:\myCode\dubbodemo\consumer | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:48:22,889] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@8fc7a7 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 16:48:22,891] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 16:48:22,908] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 16:48:22,909] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 16:48:22,909] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 16:48:22,911] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 16:48:22,913] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 16:48:22,983] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae000c, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 16:48:22,987] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 16:48:22,987] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 16:48:22,988] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 16:48:22,988] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 16:48:22,995] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:23,006] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:23,016] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142102810, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:48:23,049] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474837346,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,084] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474837347,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,121] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474837348,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,148] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474837349,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6176%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407142102810,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6176%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407142102810  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,149] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142102810, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:48:23,181] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474837350,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,214] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474837351,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,240] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474837352,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,245] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474837352,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: s{8589934601,8589934601,1407118039735,1407118039735,0,35,0,0,0,1,21474837270}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,249] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474837352,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5488%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407142041638}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,272] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474837353,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,296] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837354,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,334] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837355,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,337] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,21474837355,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,339] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,21474837355,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,376] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837356,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,412] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837357,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,425] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,21474837358,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,428] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,21474837358,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: s{8589934619,8589934619,1407118062064,1407118062064,0,0,0,0,0,0,8589934619}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,429] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,21474837358,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,429] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142102810, urls: [dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5488&revision=1.0-SNAPSHOT&side=provider&timestamp=1407142041638, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142102810, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142102810], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:48:23,453] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:23,487] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:23,500] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:23,577] INFO |  [DUBBO] Successed connect to server /192.168.1.35:20881 from NettyClient 192.168.1.35 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x00b206e9, /192.168.1.35:57966 => /192.168.1.35:20881]], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.connect(287)
[VAMS][2014-08-04 16:48:23,578] INFO |  [DUBBO] Start NettyClient xiaohao-PC/192.168.1.35 connect to the server /192.168.1.35:20881, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(105)
[VAMS][2014-08-04 16:48:23,609] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:23,621] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:23,638] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:23,656] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142102810, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 16:48:23,662] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:23,668] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142103664, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:48:23,699] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837359,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,724] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837360,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,736] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837361,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,774] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837362,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D6176%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407142103664,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D6176%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407142103664  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,774] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142103664, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:48:23,805] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837363,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,819] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837364,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,844] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,21474837365,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,845] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,21474837365,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: s{21474836588,21474836588,1407135741178,1407135741178,0,27,0,0,0,1,21474837284}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,846] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 28,8  replyHeader:: 28,21474837365,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,T  response:: v{'hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5488%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407142043755}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,880] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474837366,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,905] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474837367,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,930] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474837368,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,933] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 32,3  replyHeader:: 32,21474837368,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,936] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 33,8  replyHeader:: 33,21474837368,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:23,967] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474837369,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,004] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 35,1  replyHeader:: 35,21474837370,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,040] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 36,1  replyHeader:: 36,21474837371,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,042] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 37,3  replyHeader:: 37,21474837371,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: s{21474836601,21474836601,1407135741514,1407135741514,0,0,0,0,0,0,21474836601}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,043] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 38,8  replyHeader:: 38,21474837371,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,043] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142103664, urls: [hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5488&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407142043755, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142103664, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142103664], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:48:24,054] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:48:24,077] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407142103664, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 16:48:24,079] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:48:24,087] INFO |  [DUBBO] Register: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=consumers&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142104082, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:48:24,115] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 39,1  replyHeader:: 39,21474837372,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,140] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 40,1  replyHeader:: 40,21474837373,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,165] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 41,1  replyHeader:: 41,21474837374,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,177] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 42,1  replyHeader:: 42,21474837375,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D6176%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407142104082,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/consumers/consumer%253A%252F%252F192.168.1.35%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fapplication%253DdubboDemo%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D6176%2526revision%253D1.0-SNAPSHOT%2526side%253Dconsumer%2526timestamp%253D1407142104082  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,178] INFO |  [DUBBO] Subscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142104082, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:48:24,210] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 43,1  replyHeader:: 43,21474837376,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,247] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 44,1  replyHeader:: 44,21474837377,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,285] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 45,1  replyHeader:: 45,21474837378,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,286] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 46,3  replyHeader:: 46,21474837378,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: s{21474836494,21474836494,1407134615769,1407134615769,0,31,0,0,0,1,21474837277}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,289] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 47,8  replyHeader:: 47,21474837378,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,T  response:: v{'rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5488%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407142042294}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,392] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 48,1  replyHeader:: 48,21474837379,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,430] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 49,1  replyHeader:: 49,21474837380,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,464] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 50,1  replyHeader:: 50,21474837381,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,466] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 51,3  replyHeader:: 51,21474837381,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,468] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 52,8  replyHeader:: 52,21474837381,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,496] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 53,1  replyHeader:: 53,21474837382,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,533] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 54,1  replyHeader:: 54,21474837383,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,566] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 55,1  replyHeader:: 55,21474837384,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,567] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 56,3  replyHeader:: 56,21474837384,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: s{21474836540,21474836540,1407135105323,1407135105323,0,0,0,0,0,0,21474836540}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,568] DEBUG | Reading reply sessionid:0x2479fbe4cae000c, packet:: clientPath:null serverPath:null finished:false header:: 57,8  replyHeader:: 57,21474837384,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/routers,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:48:24,568] INFO |  [DUBBO] Notify urls for subscribe url consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142104082, urls: [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5488&revision=1.0-SNAPSHOT&side=provider&timestamp=1407142042294, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142104082, empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142104082], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:48:24,610] DEBUG | Located RMI stub with URL [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] | [main] org.springframework.remoting.rmi.RmiClientInterceptor.lookupStub(203)
[VAMS][2014-08-04 16:48:24,610] DEBUG | RMI stub [rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiClientInterceptor.prepare(150)
[VAMS][2014-08-04 16:48:24,615] DEBUG | Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 16:48:24,619] INFO |  [DUBBO] Refer dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService from url zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142104082, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.config.ReferenceConfig.createProxy(423)
[VAMS][2014-08-04 16:48:24,622] DEBUG | Invoking init method  'test' on bean with name 'startor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(1653)
[VAMS][2014-08-04 16:48:24,723] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboClientHandler-192.168.1.35:20881-thread-1] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 16:48:24,959] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e3e7d2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,springContextUtil,dubboDemo,com.alibaba.dubbo.config.RegistryConfig,demoService,rmiDemoService,hessianDemoService,startor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 16:48:24,960] DEBUG | Invoking destroy() on bean with name 'hessianDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:48:24,961] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142103664, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 16:48:24,962] DEBUG | Invoking destroy() on bean with name 'rmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:48:24,963] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142104082, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 16:48:24,964] DEBUG | Invoking destroy() on bean with name 'demoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:48:24,964] INFO |  [DUBBO] Unsubscribe: consumer://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers,configurators,routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142102810, dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 16:48:24,966] INFO |  [DUBBO] Close netty channel [id: 0x00b206e9, /192.168.1.35:57966 => /192.168.1.35:20881], dubbo version: 2.5.3, current host: 192.168.1.35 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-04 16:48:24,969] INFO |  [DUBBO] disconected from /192.168.1.35:20881,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&check=false&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6176&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407142102810, dubbo version: 2.5.3, current host: 192.168.1.35 | [DubboSharedHandler-thread-1] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 16:48:24,972] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'startor' defined in class path resource [consumer.xml]: Invocation of init method failed; nested exception is com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:9898] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407142103664
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to invoke the method hasseinSayHello in the service com.xiaohao.dubbodemo.service.IDubboHessianDemoService. Tried 3 times of the providers [192.168.1.35:9898] (1/1) from the registry 192.168.1.35:2181 on the consumer 192.168.1.35 using the dubbo version 2.5.3. Last error is: Failed to invoke remote service: interface com.xiaohao.dubbodemo.service.IDubboHessianDemoService, method: hasseinSayHello, cause: HessianProxy cannot connect to 'http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407142103664
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:101)
	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:227)
	at com.alibaba.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:72)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy1.hasseinSayHello(proxy1.java)
	at com.xiaohao.dubbodemo.consumer.DubboCallor.test(DubboCallor.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 59 more
Caused by: com.caucho.hessian.client.HessianConnectionException: HessianProxy cannot connect to 'http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407142103664
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:139)
	at com.caucho.hessian.client.HessianProxy.sendRequest(HessianProxy.java:283)
	at com.caucho.hessian.client.HessianProxy.invoke(HessianProxy.java:170)
	at $Proxy19.hasseinSayHello(Unknown Source)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$2.doInvoke(AbstractProxyProtocol.java:93)
	at com.alibaba.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:144)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:48)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:74)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:77)
	... 71 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407142103664
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1491)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1485)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1139)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:122)
	... 88 more
Caused by: java.io.FileNotFoundException: http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6176&revision=1.0-SNAPSHOT&server=servlet&side=consumer&timestamp=1407142103664
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1434)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)
	at com.caucho.hessian.client.HessianURLConnection.sendRequest(HessianURLConnection.java:109)
	... 88 more
[VAMS][2014-08-04 16:48:34,568] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:48:44,570] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:48:54,570] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:49:04,571] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:49:14,572] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:49:24,572] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:49:34,573] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:49:44,573] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:49:54,574] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:50:04,574] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:50:14,575] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:50:24,579] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 4ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:50:34,577] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:50:44,579] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:50:54,580] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:51:04,582] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:51:14,582] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:51:24,583] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:51:34,584] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:51:44,585] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:51:54,585] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:52:04,587] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:52:14,588] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:52:24,589] DEBUG | Got ping response for sessionid: 0x2479fbe4cae000c after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
