[VAMS][2014-08-01 14:05:33,639] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:05:33,730] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,731] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,736] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,737] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,739] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,739] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:05:33,744] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:05:33,745] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:05:33 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:05:33,778] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,778] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,779] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:05:33,785] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:05:33,787] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:05:33,804] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:05:33,808] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:05:33,814] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:05:33,840] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:05:33,855] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:05:33,857] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:05:33,864] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:05:33,879] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:05:33,891] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:05:33,953] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,954] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,954] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:05:33,968] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:05:33,968] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:05:33,969] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:05:33,970] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:05:33,971] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 14:05:33,971] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:05:34,081] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:05:34,082] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@15c0c91: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:05:34,106] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,107] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,123] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,126] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,142] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,142] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,144] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,145] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,145] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,145] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,146] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,146] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,146] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,147] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,148] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,148] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,148] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,150] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,150] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,152] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1ad4feb] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:05:34,154] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@167f4bf] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:05:34,156] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@b55c7f] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:05:34,157] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@15c0c91: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:05:34,157] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,157] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,161] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,193] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,194] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,194] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,198] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,202] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,202] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,202] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,204] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,215] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,215] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,216] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,252] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,381] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,397] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,409] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,409] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,410] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,411] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,415] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:05:34,416] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,416] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,417] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,417] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,417] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,417] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,419] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2e1b6c] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 14:05:34,420] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,422] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,423] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 14:05:34,488] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,499] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,509] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,521] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 14:05:34,522] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 14:05:34,522] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=3988&registry=zookeeper&timestamp=1406873134430, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 14:05:34,531] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,540] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,569] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,592] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,607] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,663] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 14:05:34,723] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 14:05:34,730] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,769] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016, test/com.xiaohao.serviceApi.DemoService=override://192.168.1.35:20881/com.xiaohao.serviceApi.DemoService?category=configurators&dynamic=false&enabled=true&group=test&weight=200}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 14:05:34,782] DEBUG | Creating new ZookKeeper instance to connect to 127.0.0.1:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 14:05:34,782] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-127.0.0.1:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 14:05:34,790] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,790] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,790] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,790] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,792] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,792] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,794] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,794] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,794] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,794] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,799] INFO | Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1469a69 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 14:05:34,802] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 14:05:34,814] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 14:05:34,815] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 14:05:34,815] INFO | Opening socket connection to server /127.0.0.1:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 14:05:34,817] INFO | Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 14:05:34,819] DEBUG | Session establishment request sent on 127.0.0.1/127.0.0.1:2181 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 14:05:34,897] INFO | Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x1478f7ec65f0004, negotiated timeout = 30000 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 14:05:34,899] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 14:05:34,899] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 14:05:34,900] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 14:05:34,900] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 14:05:34,901] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 14:05:34,918] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,423,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,938] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,424,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,949] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,425,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,962] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,426,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,963] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 14:05:34,973] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,427,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,985] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,428,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,998] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,429,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:35,005] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,429,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:35,011] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,429,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:35,011] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 14:05:35,020] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:35,037] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:35,048] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,049] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,049] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,049] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:05:35,050] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 14:05:35,051] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:05:35,051] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 14:05:35,051] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,052] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,052] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 14:05:35,052] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 14:05:35,052] INFO | Root WebApplicationContext: initialization completed in 1409 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 14:05:45,010] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:05:55,012] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:05,013] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:15,015] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:25,018] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:35,018] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:45,020] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:55,021] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:05,023] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:15,025] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:25,025] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:35,028] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:45,027] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:55,029] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:05,029] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:15,031] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:25,033] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:35,034] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:45,036] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:55,037] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:05,040] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:15,039] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:25,041] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:35,042] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:45,044] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:55,045] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:05,045] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:15,052] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:25,052] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:35,055] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:45,055] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:55,056] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:05,056] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:15,058] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:25,062] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:35,064] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 4ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:45,062] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:55,062] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:05,063] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:15,064] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:25,065] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:35,073] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:45,072] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:55,095] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 21ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:05,075] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:15,077] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:25,080] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:35,080] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:45,081] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:55,080] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:05,084] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:15,083] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:25,086] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:35,086] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:45,088] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:55,088] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:05,090] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:15,092] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:25,091] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:35,093] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:45,097] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:55,098] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:05,100] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:15,100] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:25,105] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:35,104] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:45,105] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:55,107] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:05,109] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:15,109] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:25,119] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:35,120] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:45,121] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:55,123] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:05,126] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:15,125] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:25,128] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:35,127] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:45,129] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:55,129] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:05,131] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:15,133] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:25,133] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:35,136] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:45,135] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:55,136] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:05,136] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:15,137] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:25,139] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:35,139] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:45,139] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:55,140] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:05,141] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:15,141] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:25,143] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:35,144] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:45,143] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:55,145] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:05,146] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:15,148] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:25,149] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:35,150] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:45,153] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:55,154] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:05,156] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:15,157] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:25,158] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:35,160] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:45,161] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:55,163] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:05,163] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:15,165] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:25,166] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:35,166] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:45,168] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:55,169] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:05,171] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:15,172] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:25,173] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:35,173] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:45,175] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:55,175] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:05,176] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:15,178] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:25,178] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:35,181] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:45,182] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:55,185] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:05,184] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:15,185] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:25,186] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:35,186] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:45,190] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 3ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:55,190] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:05,191] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:15,192] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:25,194] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:35,195] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:45,196] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:55,199] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:05,198] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:15,199] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:25,201] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:35,202] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:45,202] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:55,204] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:05,205] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:15,205] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:25,207] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:35,208] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:45,210] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:55,210] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:05,210] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:15,211] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:25,214] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:35,214] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:45,214] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:55,216] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:05,216] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:15,217] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:25,218] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:35,219] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:45,221] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:55,222] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:05,222] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:15,223] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:25,226] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:35,227] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:45,229] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:55,229] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:05,230] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:15,244] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:25,245] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:35,246] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:45,247] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:55,247] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:05,249] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:15,251] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:25,252] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:35,252] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:45,254] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:55,254] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:05,260] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:15,260] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:25,261] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:35,263] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:45,266] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:55,271] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 3ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:05,268] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:15,270] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:25,270] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:35,270] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:45,272] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:55,273] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:05,274] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:15,276] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:25,278] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:35,279] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:45,280] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:55,280] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:05,282] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:15,282] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:25,284] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:35,285] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:45,288] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:55,287] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:05,289] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:15,295] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:25,297] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:35,303] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 5ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:45,298] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:55,299] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:05,299] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:15,301] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:25,305] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:35,304] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:45,306] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:55,308] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:05,309] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:15,308] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:25,309] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:35,312] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:45,313] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:55,315] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:05,317] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:15,316] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:25,316] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:35,318] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:45,320] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:55,319] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:05,319] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:15,320] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:25,322] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:35,322] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:45,325] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:55,325] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:05,327] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:15,328] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:25,327] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:35,331] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:45,331] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:55,331] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:05,334] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:15,334] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:25,336] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:35,336] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:45,338] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:55,342] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:05,342] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:15,344] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:25,343] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:35,345] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:45,344] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:55,347] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:05,348] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:15,350] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:25,351] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:35,350] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:45,353] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:55,354] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:05,354] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:15,356] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:25,355] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:35,356] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:45,358] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:55,359] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:05,359] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:15,361] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:25,361] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:35,362] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:45,363] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:55,365] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:05,365] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:15,366] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:25,366] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:35,367] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:45,368] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:55,370] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:05,369] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:15,371] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:25,372] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:35,374] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:45,378] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:55,379] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:05,380] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:15,382] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:25,382] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:35,388] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:45,388] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:55,389] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:05,390] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:15,392] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:25,392] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:35,394] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:45,395] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:55,396] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:05,399] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:15,398] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:25,401] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:35,400] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:45,402] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:55,403] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:05,404] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:15,405] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:25,406] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:35,408] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:45,408] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:55,409] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:05,411] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:15,412] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:25,412] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:35,413] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:45,415] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:55,420] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 4ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:05,417] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:15,418] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:25,420] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:35,421] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:45,422] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:55,425] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:05,428] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 3ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:15,426] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:25,427] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:35,429] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:45,429] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:55,430] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:05,432] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:15,433] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:25,434] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:35,434] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:45,436] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:55,438] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:05,438] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:15,440] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:25,442] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:35,442] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:45,442] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:55,444] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:05,444] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:15,445] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:25,446] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:35,446] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:45,448] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:55,447] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:05,449] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:15,449] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:25,450] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:35,452] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:45,451] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:55,454] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:05,453] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:15,454] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:25,456] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:35,457] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:45,458] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:55,458] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:05,460] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:15,461] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:25,462] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:35,464] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:45,464] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:55,466] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:05,466] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:15,467] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:25,467] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:35,469] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:45,471] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:55,472] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:05,473] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:15,473] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:25,475] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:35,476] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:45,477] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:55,480] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:05,479] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:15,481] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:25,490] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:35,489] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:45,489] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:55,490] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:05,497] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 3ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:15,495] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:25,495] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:35,497] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:45,497] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:55,497] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:05,498] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:15,500] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:25,500] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:35,501] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:45,503] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:55,503] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:05,504] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:15,504] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:25,506] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:35,506] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:45,507] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:55,508] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:12:05,425] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:12:05,509] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,510] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,515] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,515] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,517] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,517] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:05,521] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:12:05,522] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:12:05 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:12:05,564] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,564] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,565] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:05,576] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:12:05,579] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:12:05,600] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:12:05,604] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:12:05,608] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:05,646] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:05,664] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:05,667] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:05,675] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:12:05,694] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:12:05,701] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:12:05,768] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,769] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,769] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:05,779] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:12:05,782] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:05,784] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:05,784] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:05,786] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:12:05,787] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:12:05,813] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:12:05,814] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1b4d679: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:12:05,925] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,926] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,942] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,944] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,959] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,959] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,960] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,961] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,961] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,962] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,963] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,963] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,963] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,964] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,965] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,965] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,966] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,966] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,966] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,967] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,967] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,967] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,967] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,968] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,970] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@e776f7] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:12:05,972] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1574b88] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:12:05,974] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@18efd7c] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:12:05,975] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b4d679: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:12:05,976] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,976] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,979] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,011] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,011] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:06,012] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:06,013] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,022] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,022] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:06,022] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:06,024] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,036] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,036] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:06,036] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:06,088] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,221] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,239] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,258] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:06,259] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:06,259] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,262] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,265] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:12:06,266] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,266] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,267] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,267] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,267] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,268] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,268] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,268] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,268] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,269] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,269] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,270] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@156f14c] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:12:06,271] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,275] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,275] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:12:06,384] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,395] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,408] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,420] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:12:06,420] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:12:06,420] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=5468&registry=zookeeper&timestamp=1406877126284, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:12:06,428] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,446] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,487] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,507] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,517] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,565] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:12:06,627] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:12:06,634] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,665] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-127.0.0.1.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016, test/com.xiaohao.serviceApi.DemoService=override://192.168.1.35:20881/com.xiaohao.serviceApi.DemoService?category=configurators&dynamic=false&enabled=true&group=test&weight=200, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:12:06,690] DEBUG | Creating new ZookKeeper instance to connect to 127.0.0.1:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:12:06,692] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-127.0.0.1:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:12:06,703] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,704] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,704] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,704] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,704] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,705] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,705] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,705] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,705] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,706] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,706] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,707] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,707] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,707] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,708] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,710] INFO | Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@e1fb6c | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:12:06,713] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:12:06,729] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:12:06,729] INFO | Opening socket connection to server /127.0.0.1:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:12:06,730] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:12:06,731] INFO | Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:12:06,735] DEBUG | Session establishment request sent on 127.0.0.1/127.0.0.1:2181 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:12:06,959] INFO | Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x1478f7ec65f000c, negotiated timeout = 30000 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:12:06,961] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:12:06,962] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:12:06,962] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:12:06,962] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:12:06,964] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:12:06,993] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,545,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,011] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,546,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,025] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,547,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,037] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,548,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D5468%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877126296,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D5468%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877126296  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,041] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:12:07,056] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,549,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,069] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,550,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,089] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,551,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,093] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,551,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,096] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,551,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,097] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:12:07,105] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:07,112] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:07,120] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,120] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,121] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,121] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:12:07,122] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:12:07,122] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:12:07,122] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:12:07,123] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,123] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,123] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:12:07,123] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:12:07,123] INFO | Root WebApplicationContext: initialization completed in 1695 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:12:17,098] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000c after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:12:27,098] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000c after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:13:59,582] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:13:59,682] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,683] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,690] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,690] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,692] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,693] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:13:59,702] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:13:59,703] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:13:59 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:13:59,747] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,748] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,748] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:13:59,757] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:13:59,761] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:13:59,784] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:13:59,789] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:13:59,792] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:13:59,819] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:13:59,834] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:13:59,838] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:13:59,844] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:13:59,858] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:13:59,865] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:13:59,921] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,922] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,922] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:13:59,932] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:13:59,932] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:13:59,934] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:13:59,935] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:13:59,937] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:13:59,938] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:13:59,966] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:13:59,966] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@11daf60: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:13:59,985] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:13:59,985] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,080] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,083] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,097] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,098] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,099] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,099] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,099] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,100] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,100] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,100] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,101] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,101] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,103] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,103] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,103] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,103] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,104] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,104] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,104] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,104] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,105] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,105] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,107] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@aa4c7c] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:14:00,109] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@b3a5d1] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:14:00,111] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1900f17] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:14:00,112] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@11daf60: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:14:00,113] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,113] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,117] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,154] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,154] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,154] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,156] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,160] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,160] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,161] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,162] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,173] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,173] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,174] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,214] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,354] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,371] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,385] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,385] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,386] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,387] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,389] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:14:00,390] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,390] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,392] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,392] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,392] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,392] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,393] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@11de914] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:14:00,394] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,396] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,397] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:14:00,462] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,483] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,496] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,508] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:14:00,508] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:14:00,509] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=8780&registry=zookeeper&timestamp=1406877240404, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:14:00,516] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,531] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,560] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,588] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,601] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,642] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:14:00,700] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:14:00,706] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,719] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:14:00,739] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:14:00,739] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:14:00,752] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,752] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,752] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,753] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,753] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,753] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,755] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,755] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,755] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,756] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,757] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@4b29cf | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:14:00,760] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:14:00,774] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:14:00,775] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:14:00,775] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:14:00,778] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:14:00,782] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:14:00,823] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000e, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:14:00,824] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:14:00,824] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:14:00,825] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:14:00,825] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:14:00,826] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:14:00,851] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,570,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,880] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,571,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,891] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,572,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,903] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,573,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8780%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877240413,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8780%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877240413  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,905] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:14:00,923] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,574,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,936] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,575,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,948] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,576,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,952] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,576,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,956] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,576,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,956] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:14:00,965] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,976] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,983] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,984] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,984] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,984] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:14:00,986] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:14:00,986] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:14:00,986] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:14:00,987] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,987] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,987] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:14:00,987] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:14:00,988] INFO | Root WebApplicationContext: initialization completed in 1404 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:14:10,957] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:14:20,961] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:14:30,961] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:14:40,964] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:14:50,962] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:00,962] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:10,963] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:20,965] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:30,967] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:40,969] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:50,970] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:16:46,635] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:16:46,734] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,735] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,741] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,741] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,742] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,743] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:16:46,750] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:16:46,750] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:16:46 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:16:46,786] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,787] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,787] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:16:46,793] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:16:46,795] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:16:46,812] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:16:46,816] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:16:46,819] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:16:46,854] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:16:46,871] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:16:46,874] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:16:46,881] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:16:46,893] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:16:46,900] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:16:46,958] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,959] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,959] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:16:46,971] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:16:46,975] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:16:46,976] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:16:46,977] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:16:46,978] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:16:46,979] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:16:47,006] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:16:47,006] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f27e: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:16:47,111] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,112] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,127] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,129] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,147] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,148] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,149] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,150] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,150] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,150] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,151] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,151] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,152] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,152] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,153] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,154] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,154] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,154] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,155] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,155] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,155] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,156] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,156] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,156] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,160] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@47108e] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:16:47,163] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@9764bd] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:16:47,166] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@335297] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:16:47,167] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f27e: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:16:47,168] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,168] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,171] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,197] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,197] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,197] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,199] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,204] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,204] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,204] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,206] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,216] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,217] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,217] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,265] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,396] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,409] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,420] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,421] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,422] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,423] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,425] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:16:47,426] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,426] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,427] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,427] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,427] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,430] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@17aaeec] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:16:47,430] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,433] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,433] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:16:47,508] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,520] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,532] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,541] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:16:47,541] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:16:47,542] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=7404&registry=zookeeper&timestamp=1406877407444, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:16:47,549] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,558] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,587] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,618] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,636] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,681] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:16:47,743] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:16:47,749] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,763] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:16:47,779] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:16:47,779] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:16:47,788] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,788] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,789] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,789] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,789] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,789] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,791] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,791] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,791] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,791] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,793] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@de6570 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:16:47,795] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:16:47,809] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:16:47,809] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:16:47,810] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:16:47,812] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:16:47,815] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:16:47,842] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f0010, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:16:47,844] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:16:47,844] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:16:47,844] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:16:47,844] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:16:47,846] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:16:47,872] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,594,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,890] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,595,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,903] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,596,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,915] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,597,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7404%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877407454,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7404%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877407454  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,917] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:16:47,935] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,598,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,948] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,599,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,959] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,600,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,965] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,600,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,970] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,600,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,970] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:16:47,979] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,984] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,991] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,991] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,991] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,992] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:16:47,993] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:16:47,993] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:16:47,994] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:16:47,994] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,994] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,994] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:16:47,995] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:16:47,995] INFO | Root WebApplicationContext: initialization completed in 1358 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:16:57,971] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:07,972] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:17,975] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:27,976] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:37,977] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:47,977] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:57,978] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:07,981] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:17,980] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:27,982] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:37,983] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:47,984] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:49,133] WARN | Session 0x1478f7ec65f0010 for server xiaohao-PC/192.168.1.35:2181, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:25)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:202)
	at sun.nio.ch.IOUtil.read(IOUtil.java:169)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:243)
	at org.apache.zookeeper.ClientCnxn$SendThread.doIO(ClientCnxn.java:856)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1154)
[VAMS][2014-08-01 15:18:49,236] DEBUG | Received event: WatchedEvent state:Disconnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:18:49,236] INFO | zookeeper state changed (Disconnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:18:49,236] DEBUG | New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@fbd45] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-01 15:18:49,237] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:18:49,241] DEBUG | Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@fbd45] | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-01 15:18:49,241] DEBUG | Delivering event #1 done | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-01 15:18:50,674] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:18:51,677] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:18:51,677] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:51,679] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:53,204] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:18:54,214] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:18:54,214] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:54,215] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:55,949] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:18:56,943] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:18:56,943] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:56,943] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:58,397] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:18:59,397] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:18:59,398] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:59,398] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:00,900] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:01,900] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:01,900] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:01,900] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:03,499] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:04,499] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:04,499] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:04,499] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:05,680] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:06,691] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:06,691] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:06,691] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:08,181] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:09,182] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:09,182] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:09,182] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:10,440] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:11,433] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:11,433] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:11,433] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:12,567] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:13,569] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:13,569] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:13,569] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:14,688] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:15,699] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:15,699] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:15,699] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:17,419] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:18,424] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:18,425] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:18,425] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:20,200] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:21,205] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:21,205] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:21,205] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:22,376] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:23,382] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:23,382] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:23,382] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:24,930] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:25,931] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:25,931] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:25,931] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:27,739] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:28,740] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:28,740] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:28,740] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:29,884] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:30,885] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:30,885] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:30,885] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:32,073] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:33,078] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:33,078] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:33,078] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:34,663] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:35,683] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:35,683] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:35,683] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:37,063] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:38,083] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:38,083] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:38,083] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:39,949] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:40,965] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:40,965] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:40,965] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:42,368] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:43,369] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:43,369] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:43,369] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:44,660] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:45,670] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:45,670] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:45,670] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:47,357] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:48,357] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:48,357] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:48,357] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:50,089] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:51,091] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:51,094] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:51,094] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:52,954] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:53,954] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:53,954] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:53,954] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:55,555] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:56,557] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:56,557] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:56,557] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:58,308] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:59,308] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:59,308] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:59,308] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:00,453] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:01,463] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:01,463] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:01,463] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:03,415] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:04,426] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:04,426] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:04,426] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:05,887] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:06,897] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:06,897] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:06,897] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:08,497] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:09,498] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:09,498] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:09,498] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:11,220] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:12,221] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:12,221] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:12,221] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:13,493] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:14,513] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:14,513] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:14,513] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:16,089] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:16,090] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:16,092] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:16,098] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:17,786] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:17,788] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:17,788] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:17,794] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:19,195] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:19,196] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:19,196] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:19,200] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:20,456] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:20,457] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:20,457] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:20,462] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:22,204] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:22,206] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:22,209] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:22,215] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:24,061] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:24,062] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:24,062] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:24,067] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:25,685] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:25,686] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:25,686] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:25,692] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:27,598] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:27,598] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:27,599] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:27,603] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:28,808] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:28,809] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:28,809] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:28,814] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:30,854] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:30,855] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:30,855] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:30,858] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:32,019] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:32,021] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:32,021] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:32,023] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:33,176] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:33,177] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:33,177] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:33,178] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:35,087] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:35,088] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:35,088] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:35,091] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:36,362] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:36,363] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:36,363] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:36,365] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:37,708] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:37,709] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:37,709] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:37,710] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:39,239] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:39,245] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:39,245] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:39,253] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:40,557] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:40,558] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:40,563] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:40,565] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:42,450] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:42,452] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:42,452] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:42,454] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:44,440] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:44,441] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:44,441] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:44,444] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:21:07,405] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:21:07,485] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,486] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,492] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,493] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,494] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,495] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:07,499] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:21:07,499] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:21:07 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:21:07,540] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,540] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,541] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:07,547] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:21:07,550] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:21:07,566] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:21:07,571] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:21:07,574] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:07,605] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:07,620] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:07,624] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:07,631] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:21:07,647] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:21:07,655] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:21:07,709] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,710] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,710] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:07,723] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:21:07,727] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:07,729] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:07,729] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:07,731] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:21:07,731] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:21:07,758] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:21:07,758] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1e4e3e4: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:21:07,847] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,847] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,861] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,865] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,884] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,884] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,886] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,886] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,886] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,887] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,888] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,888] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,889] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,889] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,891] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,893] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,893] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,893] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,893] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,896] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@13bedc4] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:21:07,897] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@139ef3a] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:21:07,900] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@26807f] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:21:07,902] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e4e3e4: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:21:07,902] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,903] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,907] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,942] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,943] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,943] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,944] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,952] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,952] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,953] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,954] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,965] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,966] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,966] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:08,000] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,123] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,142] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:08,159] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:08,160] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:08,160] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:08,162] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:08,165] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:21:08,165] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,166] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,166] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,167] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:08,167] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,169] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,171] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@fc5408] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:21:08,172] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,178] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,178] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:21:08,248] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,260] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,272] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,282] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:21:08,283] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:21:08,283] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=9616&registry=zookeeper&timestamp=1406877668185, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:21:08,291] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,300] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,321] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,350] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,365] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,406] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:21:08,464] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:21:08,472] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,492] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:21:08,504] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:21:08,504] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:21:08,511] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,511] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,512] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,512] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,512] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,513] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,513] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,513] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,513] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,514] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,514] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,514] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,515] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,515] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,515] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,516] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1fd9b49 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:21:08,519] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:21:08,531] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:21:08,531] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:21:08,532] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:21:08,533] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:21:08,536] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:21:08,569] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479070c2fa0000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:21:08,571] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:21:08,572] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:21:08,572] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:21:08,572] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:21:08,578] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:21:08,633] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,2,0  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:08,740] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,3,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:08,855] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,4,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:08,949] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,5,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9616%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877668194,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9616%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877668194  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:08,951] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:21:08,972] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,6,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,002] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,7,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,014] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,8,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,027] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,8,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,032] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,8,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,033] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:21:09,042] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:09,050] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:09,061] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,061] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,062] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,062] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:21:09,064] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:21:09,064] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:21:09,064] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:21:09,064] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,065] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,065] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:21:09,065] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:21:09,065] INFO | Root WebApplicationContext: initialization completed in 1658 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:21:19,033] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:21:29,034] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:21:39,034] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:21:49,036] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:21:59,037] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:22:09,037] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:22:19,038] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:22:27,124] WARN | Session 0x1479070c2fa0000 for server xiaohao-PC/192.168.1.35:2181, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:25)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:202)
	at sun.nio.ch.IOUtil.read(IOUtil.java:169)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:243)
	at org.apache.zookeeper.ClientCnxn$SendThread.doIO(ClientCnxn.java:856)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1154)
[VAMS][2014-08-01 15:22:27,225] DEBUG | Received event: WatchedEvent state:Disconnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:22:27,225] INFO | zookeeper state changed (Disconnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:22:27,226] DEBUG | New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@bec43f] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-01 15:22:27,226] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:22:27,232] DEBUG | Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@bec43f] | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-01 15:22:27,233] DEBUG | Delivering event #1 done | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-01 15:22:29,059] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:30,060] WARN | Session 0x1479070c2fa0000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:22:30,060] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:30,061] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:31,884] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:32,886] WARN | Session 0x1479070c2fa0000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:22:32,886] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:32,886] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:34,110] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:35,120] WARN | Session 0x1479070c2fa0000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:22:35,120] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:35,120] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:36,451] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:37,462] WARN | Session 0x1479070c2fa0000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:22:37,462] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:37,462] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:39,466] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:40,466] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:22:40,467] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:22:40,475] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479070c2fa0000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:22:40,475] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:22:40,475] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:22:40,475] DEBUG | New event: ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@bec43f] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-01 15:22:40,475] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:22:40,475] DEBUG | Delivering event #2 ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@bec43f] | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-01 15:22:40,475] DEBUG | Delivering event #2 done | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-01 15:22:40,497] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: -8,101  replyHeader:: -8,23,0  request:: 8,v{'/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators},v{},v{'/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators}  response:: null | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:22:50,471] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:23:41,180] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:23:41,275] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,276] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,280] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,281] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,282] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,282] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:23:41,288] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:23:41,289] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:23:41 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:23:41,326] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,326] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,327] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:23:41,335] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:23:41,338] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:23:41,360] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:23:41,367] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:23:41,373] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:23:41,397] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:23:41,411] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:23:41,413] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:23:41,422] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:23:41,439] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:23:41,450] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:23:41,510] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,511] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,512] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:23:41,522] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:23:41,526] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:23:41,527] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:23:41,528] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:23:41,529] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:23:41,529] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:23:41,555] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:23:41,556] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1f49969: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:23:41,674] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,675] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,688] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,690] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,705] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,706] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,708] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,708] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,708] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,709] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,709] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,710] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,710] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,710] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,712] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,712] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,713] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,713] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,714] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,714] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,715] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,715] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,716] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,716] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,719] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@144569b] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:23:41,722] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1593ce6] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:23:41,724] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@19b0124] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:23:41,725] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f49969: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:23:41,725] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,725] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,729] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,755] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,755] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,755] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,757] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,763] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,763] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,763] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,765] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,776] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,777] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,777] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,824] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:41,950] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:41,968] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,985] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,986] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,987] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,989] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,992] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:23:41,993] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,993] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,994] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,996] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,996] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,996] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,997] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1b271f1] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:23:41,998] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:42,002] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:42,002] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:23:42,076] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,088] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,097] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,106] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:23:42,106] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8584&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877822017, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:23:42,106] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8584&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877822017 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=8584&registry=zookeeper&timestamp=1406877822009, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:23:42,115] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,132] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,160] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,180] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,192] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,233] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:23:42,294] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:23:42,299] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,316] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:23:42,329] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:23:42,329] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:23:42,337] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,337] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,337] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,339] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,339] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,339] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,339] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,340] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,340] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,340] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,341] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@686cea | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:23:42,343] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:23:42,353] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:23:42,353] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:23:42,354] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:23:43,356] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:23:43,357] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:43,357] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:44,754] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:23:45,765] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:23:45,765] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:45,765] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:47,566] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:23:48,568] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:23:48,569] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:48,569] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:50,647] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:24:10,726] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:24:10,812] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,813] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,820] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,821] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,823] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,823] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:10,828] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:24:10,828] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:24:10 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:24:10,861] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,861] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,862] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:10,868] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:24:10,871] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:24:10,891] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:24:10,895] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:24:10,904] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:10,931] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:10,946] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:10,949] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:10,954] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:24:10,968] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:24:10,978] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:24:11,033] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:11,033] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:11,034] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:11,047] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:24:11,047] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:11,048] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:11,049] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:11,050] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:24:11,050] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:24:11,078] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:24:11,079] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@fb2ac4: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:24:11,184] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,185] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,205] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,210] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,233] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,233] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,235] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,235] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,236] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,236] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,237] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,237] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,238] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,238] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,240] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,240] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,241] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,241] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,241] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,241] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,242] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,242] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,242] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,243] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,246] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@8c2d23] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:24:11,248] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@9a41d2] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:24:11,251] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@7db754] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:24:11,253] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@fb2ac4: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:24:11,253] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,253] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,259] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,283] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,283] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,283] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,285] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,292] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,292] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,292] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,294] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,304] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,305] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,305] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,353] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,484] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,501] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,516] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,516] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,518] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,520] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,523] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:24:11,524] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,525] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,526] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,526] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,527] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,527] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,527] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,527] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,528] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,528] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,528] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,530] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@111c3f0] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:24:11,531] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,535] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,536] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:24:11,608] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,620] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,635] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,647] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:24:11,648] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:24:11,648] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=9380&registry=zookeeper&timestamp=1406877851546, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:24:11,656] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,672] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,696] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,721] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,736] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,780] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:24:11,842] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:24:11,848] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,863] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:24:11,875] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:24:11,875] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:24:11,883] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,883] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,883] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,885] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,885] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,885] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,885] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,886] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,886] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,886] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,887] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@41825e | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:24:11,889] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:24:11,900] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:24:11,900] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:24:11,900] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:24:11,902] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:24:11,905] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:24:11,951] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x14790742c0b0000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:24:11,953] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:24:11,954] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:24:11,954] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:24:11,954] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:24:11,956] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:24:11,992] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,25,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,027] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,26,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,038] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,27,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,050] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,28,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9380%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877851554,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9380%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877851554  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,051] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:24:12,063] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,29,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,075] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,30,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,088] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,31,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,095] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,31,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,101] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,31,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,101] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:24:12,110] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:12,118] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:12,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,134] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:24:12,135] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:24:12,135] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:24:12,135] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:24:12,135] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,136] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,136] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:24:12,136] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:24:12,136] INFO | Root WebApplicationContext: initialization completed in 1408 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:24:22,100] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:24:32,103] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:24:42,104] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:24:52,104] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:02,111] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:12,113] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:22,113] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:32,114] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:42,114] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:52,116] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:02,117] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:12,118] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:22,123] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:32,122] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:42,122] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:52,125] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:02,124] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:12,126] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:22,126] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:32,129] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:42,128] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:52,130] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:02,132] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:12,136] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:22,136] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:32,138] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:42,139] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:52,139] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:02,140] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:12,141] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:22,142] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:32,144] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:42,146] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:52,148] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:02,146] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:12,148] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:22,150] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:32,151] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:42,156] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:52,154] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:02,156] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:12,157] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:22,161] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:32,162] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:42,163] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:52,162] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:02,163] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:12,166] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:22,166] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:32,167] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:42,169] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:52,171] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:02,172] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:12,176] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:22,175] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:32,177] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:42,179] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:52,179] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:02,179] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:12,180] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:22,181] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:32,181] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:42,181] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:52,182] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:02,184] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:12,184] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:22,184] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:32,186] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:42,188] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:52,188] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:02,190] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:12,191] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:22,192] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:32,192] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:42,192] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:52,193] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:02,193] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:12,195] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:22,196] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:32,197] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:42,198] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:52,199] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:02,199] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:12,199] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:22,200] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:32,201] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:42,201] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:52,202] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:02,202] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:12,203] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:22,203] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:32,204] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:42,206] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:52,206] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:02,207] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:12,209] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:22,210] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:32,211] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:42,211] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:52,212] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:02,212] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:12,213] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:22,213] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:32,214] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:42,215] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:52,215] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:43:25,605] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:43:25,680] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,680] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,685] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,686] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,687] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,687] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:43:25,691] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:43:25,692] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:43:25 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:43:25,728] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,728] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,729] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:43:25,735] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:43:25,738] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:43:25,755] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:43:25,759] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:43:25,765] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:43:25,792] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:43:25,810] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:43:25,812] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:43:25,818] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:43:25,830] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:43:25,836] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:43:25,883] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,884] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,884] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:43:25,894] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:43:25,894] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:43:25,900] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:43:25,900] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:43:25,901] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:43:25,902] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:43:25,928] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:43:25,928] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1fa10da: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:43:26,013] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,014] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,026] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,029] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,045] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,045] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,047] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,047] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,047] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,047] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,048] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,048] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,048] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,049] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,051] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,051] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,052] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,052] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,052] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,053] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,053] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,053] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,054] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,054] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,057] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@beebcd] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:43:26,059] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@433545] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:43:26,060] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1ea25aa] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:43:26,062] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1fa10da: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:43:26,062] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,062] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,068] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,094] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,095] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,095] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,096] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,103] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,103] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,104] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,105] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,116] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,116] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,117] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,150] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,273] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,286] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,298] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,299] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,300] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,301] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,304] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:43:26,304] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,305] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,305] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,307] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,307] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,307] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,308] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a422d9] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:43:26,309] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,312] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,312] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:43:26,377] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,390] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,399] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,407] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:43:26,407] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:43:26,407] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=9460&registry=zookeeper&timestamp=1406879006321, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:43:26,415] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,424] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,445] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,465] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,475] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,514] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:43:26,564] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:43:26,570] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,587] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:43:26,604] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:43:26,604] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:43:26,613] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,613] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,614] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,614] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,614] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,616] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,616] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,616] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,616] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,617] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,618] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1bcfbeb | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:43:26,620] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:43:26,631] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:43:26,631] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:43:26,631] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:43:26,633] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:43:26,635] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:43:27,006] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:43:27,010] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:43:27,010] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:43:27,011] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:43:27,011] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:43:27,013] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:43:27,061] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,50,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,080] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,51,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,092] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,52,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,104] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,53,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9460%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879006328,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9460%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879006328  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,105] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:43:27,125] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,54,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,137] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,55,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,150] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,56,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,157] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,56,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,165] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,56,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,165] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:43:27,175] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:27,180] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:27,188] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,188] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,188] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,188] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:43:27,190] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:43:27,190] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:43:27,190] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:43:27,190] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,191] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,191] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:43:27,191] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:43:27,191] INFO | Root WebApplicationContext: initialization completed in 1584 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:43:37,164] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:43:47,167] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:43:57,167] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:07,167] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:17,168] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:27,168] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:37,171] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:47,171] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:57,173] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:07,172] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:17,176] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:27,174] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:37,175] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:47,176] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:57,176] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:07,177] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:17,177] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:27,178] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:37,178] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:47,179] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:57,180] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:07,180] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:17,181] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:27,182] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:37,183] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:47,183] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:57,185] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:07,186] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:17,186] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:27,187] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:37,188] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:47,189] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:57,189] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:07,191] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:17,191] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:27,193] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:37,202] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 8ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:47,195] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:57,197] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:07,197] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:17,199] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:26,630] DEBUG |  [DUBBO] Send heartbeat to remote channel /127.0.0.1:52815, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 15:50:27,200] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:37,200] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:47,201] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:57,201] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:07,203] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:17,208] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 4ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:26,632] DEBUG |  [DUBBO] Send heartbeat to remote channel /127.0.0.1:52815, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 15:51:27,207] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:37,208] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:47,212] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:57,212] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:07,212] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:17,213] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:26,634] DEBUG |  [DUBBO] Send heartbeat to remote channel /127.0.0.1:52815, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 15:52:26,635] WARN |  [DUBBO] Close channel NettyChannel [channel=[id: 0x019bdb65, /127.0.0.1:52815 => /127.0.0.1:20881]], because heartbeat read idle time out: 180000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(71)
[VAMS][2014-08-01 15:52:26,636] INFO |  [DUBBO] Close netty channel [id: 0x019bdb65, /127.0.0.1:52815 => /127.0.0.1:20881], dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-01 15:52:26,636] WARN |  [DUBBO] All clients has discontected from /127.0.0.1:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-01 15:52:26,638] INFO |  [DUBBO] disconected from /127.0.0.1:52815,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-13] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-01 15:52:27,213] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:37,214] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:47,214] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:57,216] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:07,218] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:17,218] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:27,221] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:37,221] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:47,222] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:57,223] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:54:07,223] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:54:17,224] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:54:27,224] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:06,527] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:58:06,607] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,608] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,613] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,614] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,615] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,616] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:06,620] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:58:06,620] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:58:06 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:58:06,652] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,652] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,653] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:06,659] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:58:06,662] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:58:06,678] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:58:06,682] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:58:06,687] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:06,712] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:06,728] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:06,730] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:06,736] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:58:06,748] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:58:06,757] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:58:06,807] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,807] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,807] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:06,823] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:58:06,823] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:06,825] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:06,826] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:06,827] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:58:06,828] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:58:06,921] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:58:06,921] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1cb01e3: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:58:06,941] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,942] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,959] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,962] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,978] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,978] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,979] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,979] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,980] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,980] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,980] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,981] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,981] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,981] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,983] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,984] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,984] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,984] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,985] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,985] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,985] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,986] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,986] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,986] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,989] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4b62a7] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:58:06,991] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@ced1a8] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:58:06,992] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@ba8180] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:58:06,993] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1cb01e3: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:58:06,994] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,994] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,999] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,026] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,027] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:07,027] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:07,029] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,037] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,038] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:07,038] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:07,040] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,049] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,050] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:07,050] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:07,083] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,197] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,211] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,225] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:07,226] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:07,226] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,227] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,229] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:58:07,230] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,230] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,232] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,232] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,232] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,232] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,234] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@230be4] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:58:07,235] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,240] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,240] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:58:07,329] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,339] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,351] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,361] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:58:07,361] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:58:07,361] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=9484&registry=zookeeper&timestamp=1406879887250, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:58:07,372] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,389] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,415] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,442] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,454] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,495] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:58:07,541] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:58:07,546] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,558] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:58:07,573] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:58:07,573] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:58:07,582] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,583] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,583] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,583] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,583] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,584] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,584] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,584] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,585] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,585] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,585] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,586] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,586] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,586] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,586] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,588] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1b0edb2 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:58:07,591] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:58:07,603] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:58:07,603] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:58:07,604] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:58:07,605] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:58:07,607] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:58:07,627] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940002, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:58:07,631] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:58:07,631] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:58:07,632] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:58:07,632] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:58:07,634] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:58:07,663] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,74,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,691] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,75,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,702] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,76,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,715] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,77,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9484%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879887260,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9484%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879887260  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,716] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:58:07,735] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,78,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,746] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,79,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,759] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,80,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,765] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,80,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,770] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,80,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,770] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:58:07,779] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,788] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,796] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,797] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,797] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,797] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:58:07,800] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:58:07,801] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:58:07,802] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:58:07,802] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,802] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,803] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:58:07,803] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:58:07,803] INFO | Root WebApplicationContext: initialization completed in 1273 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:58:17,772] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:27,774] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:37,775] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:47,774] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:50,401] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 15:58:57,775] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:59:01,551] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-01 15:59:01,580] INFO |  [DUBBO] disconected from /192.168.1.35:53954,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-4] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
