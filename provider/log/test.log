[VAMS][2014-08-01 14:05:33,639] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 14:05:33,730] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,731] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,736] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,737] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,739] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,739] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:05:33,744] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 14:05:33,745] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 14:05:33 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 14:05:33,778] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,778] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,779] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:05:33,785] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 14:05:33,787] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 14:05:33,804] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 14:05:33,808] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 14:05:33,814] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:05:33,840] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:05:33,855] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:05:33,857] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 14:05:33,864] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 14:05:33,879] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 14:05:33,891] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 14:05:33,953] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,954] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 14:05:33,954] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 14:05:33,968] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 14:05:33,968] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:05:33,969] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:05:33,970] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 14:05:33,971] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 14:05:33,971] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 14:05:34,081] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 14:05:34,082] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@15c0c91: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 14:05:34,106] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,107] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,123] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,126] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,142] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,142] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,144] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,145] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,145] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,145] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,146] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,146] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,146] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,147] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,148] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,148] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,148] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,149] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,150] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,150] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,152] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1ad4feb] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 14:05:34,154] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@167f4bf] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 14:05:34,156] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@b55c7f] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 14:05:34,157] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@15c0c91: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 14:05:34,157] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,157] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,161] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,193] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,194] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,194] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,198] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,202] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,202] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,202] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,204] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,215] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,215] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,216] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,252] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,381] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,397] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,409] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 14:05:34,409] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 14:05:34,410] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 14:05:34,411] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,415] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 14:05:34,416] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,416] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,417] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,417] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 14:05:34,417] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,417] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,418] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,419] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2e1b6c] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 14:05:34,420] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,422] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 14:05:34,423] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 14:05:34,488] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,499] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,509] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,521] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 14:05:34,522] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 14:05:34,522] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=3988&registry=zookeeper&timestamp=1406873134430, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 14:05:34,531] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,540] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,569] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,592] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,607] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,663] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 14:05:34,723] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 14:05:34,730] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:34,769] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016, test/com.xiaohao.serviceApi.DemoService=override://192.168.1.35:20881/com.xiaohao.serviceApi.DemoService?category=configurators&dynamic=false&enabled=true&group=test&weight=200}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 14:05:34,782] DEBUG | Creating new ZookKeeper instance to connect to 127.0.0.1:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 14:05:34,782] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-127.0.0.1:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 14:05:34,790] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,790] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,790] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,790] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,791] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,792] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,792] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,794] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,794] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,794] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,794] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 14:05:34,799] INFO | Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1469a69 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 14:05:34,802] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 14:05:34,814] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 14:05:34,815] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 14:05:34,815] INFO | Opening socket connection to server /127.0.0.1:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 14:05:34,817] INFO | Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 14:05:34,819] DEBUG | Session establishment request sent on 127.0.0.1/127.0.0.1:2181 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 14:05:34,897] INFO | Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x1478f7ec65f0004, negotiated timeout = 30000 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 14:05:34,899] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 14:05:34,899] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 14:05:34,900] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 14:05:34,900] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 14:05:34,901] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 14:05:34,918] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,423,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,938] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,424,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,949] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,425,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,962] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,426,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D3988%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406873134437  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,963] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 14:05:34,973] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,427,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,985] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,428,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:34,998] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,429,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:35,005] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,429,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:35,011] DEBUG | Reading reply sessionid:0x1478f7ec65f0004, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,429,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 14:05:35,011] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 14:05:35,020] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:35,037] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 14:05:35,048] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,049] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,049] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,049] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:05:35,050] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 14:05:35,051] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 14:05:35,051] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 14:05:35,051] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,052] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 14:05:35,052] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 14:05:35,052] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 14:05:35,052] INFO | Root WebApplicationContext: initialization completed in 1409 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 14:05:45,010] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:05:55,012] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:05,013] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:15,015] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:25,018] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:35,018] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:45,020] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:06:55,021] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:05,023] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:15,025] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:25,025] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:35,028] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:45,027] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:07:55,029] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:05,029] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:15,031] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:25,033] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:35,034] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:45,036] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:08:55,037] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:05,040] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:15,039] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:25,041] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:35,042] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:45,044] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:09:55,045] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:05,045] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:15,052] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:25,052] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:35,055] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:45,055] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:10:55,056] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:05,056] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:15,058] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:25,062] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:35,064] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 4ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:45,062] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:11:55,062] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:05,063] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:15,064] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:25,065] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:35,073] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:45,072] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:12:55,095] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 21ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:05,075] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:15,077] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:25,080] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:35,080] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:45,081] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:13:55,080] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:05,084] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:15,083] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:25,086] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:35,086] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:45,088] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:14:55,088] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:05,090] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:15,092] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:25,091] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:35,093] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:45,097] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:15:55,098] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:05,100] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:15,100] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:25,105] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:35,104] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:45,105] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:16:55,107] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:05,109] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:15,109] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:25,119] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:35,120] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:45,121] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:17:55,123] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:05,126] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:15,125] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:25,128] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:35,127] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:45,129] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:18:55,129] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:05,131] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:15,133] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:25,133] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:35,136] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:45,135] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:19:55,136] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:05,136] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:15,137] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:25,139] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:35,139] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:45,139] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:20:55,140] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:05,141] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:15,141] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:25,143] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:35,144] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:45,143] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:21:55,145] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:05,146] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:15,148] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:25,149] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:35,150] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:45,153] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:22:55,154] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:05,156] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:15,157] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:25,158] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:35,160] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:45,161] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:23:55,163] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:05,163] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:15,165] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:25,166] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:35,166] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:45,168] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:24:55,169] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:05,171] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:15,172] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:25,173] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:35,173] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:45,175] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:25:55,175] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:05,176] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:15,178] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:25,178] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:35,181] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:45,182] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:26:55,185] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:05,184] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:15,185] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:25,186] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:35,186] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:45,190] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 3ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:27:55,190] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:05,191] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:15,192] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:25,194] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:35,195] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:45,196] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:28:55,199] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:05,198] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:15,199] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:25,201] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:35,202] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:45,202] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:29:55,204] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:05,205] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:15,205] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:25,207] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:35,208] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:45,210] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:30:55,210] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:05,210] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:15,211] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:25,214] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:35,214] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:45,214] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:31:55,216] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:05,216] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:15,217] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:25,218] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:35,219] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:45,221] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:32:55,222] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:05,222] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:15,223] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:25,226] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:35,227] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:45,229] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:33:55,229] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:05,230] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:15,244] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:25,245] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:35,246] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:45,247] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:34:55,247] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:05,249] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:15,251] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:25,252] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:35,252] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:45,254] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:35:55,254] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:05,260] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:15,260] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:25,261] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:35,263] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:45,266] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:36:55,271] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 3ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:05,268] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:15,270] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:25,270] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:35,270] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:45,272] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:37:55,273] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:05,274] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:15,276] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:25,278] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:35,279] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:45,280] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:38:55,280] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:05,282] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:15,282] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:25,284] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:35,285] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:45,288] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:39:55,287] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:05,289] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:15,295] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:25,297] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:35,303] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 5ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:45,298] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:40:55,299] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:05,299] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:15,301] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:25,305] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:35,304] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:45,306] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:41:55,308] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:05,309] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:15,308] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:25,309] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:35,312] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:45,313] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:42:55,315] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:05,317] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:15,316] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:25,316] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:35,318] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:45,320] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:43:55,319] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:05,319] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:15,320] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:25,322] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:35,322] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:45,325] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:44:55,325] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:05,327] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:15,328] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:25,327] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:35,331] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:45,331] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:45:55,331] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:05,334] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:15,334] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:25,336] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:35,336] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:45,338] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:46:55,342] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:05,342] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:15,344] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:25,343] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:35,345] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:45,344] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:47:55,347] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:05,348] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:15,350] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:25,351] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:35,350] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:45,353] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:48:55,354] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:05,354] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:15,356] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:25,355] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:35,356] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:45,358] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:49:55,359] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:05,359] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:15,361] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:25,361] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:35,362] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:45,363] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:50:55,365] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:05,365] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:15,366] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:25,366] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:35,367] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:45,368] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:51:55,370] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:05,369] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:15,371] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:25,372] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:35,374] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:45,378] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:52:55,379] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:05,380] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:15,382] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:25,382] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:35,388] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:45,388] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:53:55,389] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:05,390] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:15,392] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:25,392] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:35,394] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:45,395] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:54:55,396] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:05,399] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:15,398] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:25,401] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:35,400] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:45,402] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:55:55,403] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:05,404] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:15,405] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:25,406] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:35,408] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:45,408] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:56:55,409] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:05,411] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:15,412] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:25,412] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:35,413] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:45,415] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:57:55,420] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 4ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:05,417] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:15,418] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:25,420] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:35,421] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:45,422] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:58:55,425] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:05,428] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 3ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:15,426] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:25,427] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:35,429] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:45,429] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 14:59:55,430] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:05,432] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:15,433] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:25,434] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:35,434] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:45,436] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:00:55,438] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:05,438] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:15,440] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:25,442] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:35,442] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:45,442] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:01:55,444] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:05,444] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:15,445] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:25,446] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:35,446] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:45,448] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:02:55,447] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:05,449] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:15,449] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:25,450] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:35,452] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:45,451] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:03:55,454] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:05,453] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:15,454] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:25,456] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:35,457] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:45,458] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:04:55,458] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:05,460] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:15,461] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:25,462] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:35,464] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:45,464] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:05:55,466] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:05,466] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:15,467] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:25,467] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:35,469] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:45,471] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:06:55,472] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:05,473] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:15,473] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:25,475] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:35,476] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:45,477] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:07:55,480] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:05,479] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:15,481] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:25,490] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 2ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:35,489] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:45,489] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:08:55,490] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:05,497] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 3ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:15,495] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:25,495] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:35,497] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:45,497] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:09:55,497] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:05,498] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:15,500] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:25,500] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:35,501] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:45,503] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:10:55,503] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:05,504] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:15,504] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:25,506] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:35,506] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:45,507] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:11:55,508] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0004 after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:12:05,425] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:12:05,509] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,510] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,515] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,515] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,517] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,517] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:05,521] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:12:05,522] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:12:05 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:12:05,564] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,564] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,565] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:05,576] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:12:05,579] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:12:05,600] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:12:05,604] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:12:05,608] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:05,646] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:05,664] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:05,667] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:12:05,675] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:12:05,694] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:12:05,701] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:12:05,768] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,769] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:12:05,769] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:12:05,779] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:12:05,782] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:05,784] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:05,784] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:12:05,786] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:12:05,787] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:12:05,813] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:12:05,814] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1b4d679: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:12:05,925] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,926] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,942] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,944] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,959] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,959] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,960] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,961] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,961] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,962] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,963] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,963] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,963] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,964] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,965] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,965] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,966] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,966] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,966] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,967] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,967] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,967] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,967] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:05,968] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:05,970] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@e776f7] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:12:05,972] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1574b88] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:12:05,974] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@18efd7c] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:12:05,975] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b4d679: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:12:05,976] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:05,976] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:05,979] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,011] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,011] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:06,012] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:06,013] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,022] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,022] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:06,022] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:06,024] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,036] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,036] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:06,036] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:06,088] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,221] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,239] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,258] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:12:06,259] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:12:06,259] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:12:06,262] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,265] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:12:06,266] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,266] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,267] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,267] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:12:06,267] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,268] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,268] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,268] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,268] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,269] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,269] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,270] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@156f14c] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:12:06,271] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,275] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:12:06,275] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:12:06,384] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,395] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,408] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,420] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:12:06,420] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:12:06,420] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=5468&registry=zookeeper&timestamp=1406877126284, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:12:06,428] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,446] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,487] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,507] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,517] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,565] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:12:06,627] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:12:06,634] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:06,665] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-127.0.0.1.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=3988&revision=1.0-SNAPSHOT&side=provider&timestamp=1406873134437, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=5752&side=consumer&timestamp=1406796623016, test/com.xiaohao.serviceApi.DemoService=override://192.168.1.35:20881/com.xiaohao.serviceApi.DemoService?category=configurators&dynamic=false&enabled=true&group=test&weight=200, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8340&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406876105920}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:12:06,690] DEBUG | Creating new ZookKeeper instance to connect to 127.0.0.1:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:12:06,692] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-127.0.0.1:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:12:06,703] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,704] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,704] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,704] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,704] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,705] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,705] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,705] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,705] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,706] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,706] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,707] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,707] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,707] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,708] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:12:06,710] INFO | Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@e1fb6c | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:12:06,713] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:12:06,729] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:12:06,729] INFO | Opening socket connection to server /127.0.0.1:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:12:06,730] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:12:06,731] INFO | Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:12:06,735] DEBUG | Session establishment request sent on 127.0.0.1/127.0.0.1:2181 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:12:06,959] INFO | Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x1478f7ec65f000c, negotiated timeout = 30000 | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:12:06,961] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:12:06,962] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:12:06,962] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:12:06,962] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:12:06,964] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:12:06,993] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,545,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,011] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,546,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,025] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,547,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,037] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,548,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D5468%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877126296,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D5468%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877126296  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,041] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:12:07,056] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,549,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,069] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,550,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,089] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,551,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,093] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,551,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,096] DEBUG | Reading reply sessionid:0x1478f7ec65f000c, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,551,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:12:07,097] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=5468&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877126296], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:12:07,105] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:07,112] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:12:07,120] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,120] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,121] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,121] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:12:07,122] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:12:07,122] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:12:07,122] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:12:07,123] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,123] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:12:07,123] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:12:07,123] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:12:07,123] INFO | Root WebApplicationContext: initialization completed in 1695 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:12:17,098] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000c after 1ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:12:27,098] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000c after 0ms | [main-SendThread(127.0.0.1:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:13:59,582] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:13:59,682] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,683] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,690] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,690] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,692] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,693] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:13:59,702] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:13:59,703] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:13:59 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:13:59,747] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,748] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,748] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:13:59,757] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:13:59,761] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:13:59,784] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:13:59,789] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:13:59,792] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:13:59,819] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:13:59,834] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:13:59,838] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:13:59,844] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:13:59,858] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:13:59,865] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:13:59,921] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,922] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:13:59,922] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:13:59,932] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:13:59,932] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:13:59,934] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:13:59,935] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:13:59,937] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:13:59,938] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:13:59,966] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:13:59,966] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@11daf60: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:13:59,985] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:13:59,985] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,080] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,083] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,097] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,098] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,099] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,099] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,099] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,100] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,100] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,100] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,101] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,101] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,103] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,103] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,103] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,103] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,104] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,104] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,104] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,104] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,105] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,105] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,107] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@aa4c7c] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:14:00,109] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@b3a5d1] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:14:00,111] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1900f17] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:14:00,112] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@11daf60: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:14:00,113] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,113] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,117] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,154] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,154] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,154] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,156] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,160] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,160] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,161] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,162] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,173] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,173] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,174] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,214] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,354] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,371] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,385] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:14:00,385] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:14:00,386] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:14:00,387] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,389] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:14:00,390] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,390] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,391] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,392] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,392] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,392] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,392] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,393] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@11de914] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:14:00,394] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,396] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:14:00,397] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:14:00,462] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,483] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,496] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,508] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:14:00,508] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:14:00,509] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=8780&registry=zookeeper&timestamp=1406877240404, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:14:00,516] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,531] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,560] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,588] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,601] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,642] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:14:00,700] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:14:00,706] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,719] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9276&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877137036}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:14:00,739] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:14:00,739] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:14:00,752] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,752] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,752] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,753] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,753] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,753] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,754] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,755] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,755] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,755] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,756] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:14:00,757] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@4b29cf | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:14:00,760] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:14:00,774] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:14:00,775] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:14:00,775] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:14:00,778] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:14:00,782] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:14:00,823] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f000e, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:14:00,824] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:14:00,824] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:14:00,825] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:14:00,825] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:14:00,826] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:14:00,851] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,570,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,880] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,571,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,891] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,572,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,903] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,573,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8780%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877240413,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8780%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877240413  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,905] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:14:00,923] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,574,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,936] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,575,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,948] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,576,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,952] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,576,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,956] DEBUG | Reading reply sessionid:0x1478f7ec65f000e, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,576,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:14:00,956] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:14:00,965] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,976] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:14:00,983] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,984] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,984] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,984] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:14:00,986] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:14:00,986] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:14:00,986] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:14:00,987] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,987] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:14:00,987] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:14:00,987] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:14:00,988] INFO | Root WebApplicationContext: initialization completed in 1404 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:14:10,957] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:14:20,961] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:14:30,961] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:14:40,964] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:14:50,962] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:00,962] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:10,963] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:20,965] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:30,967] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:40,969] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:15:50,970] DEBUG | Got ping response for sessionid: 0x1478f7ec65f000e after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:16:46,635] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:16:46,734] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,735] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,741] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,741] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,742] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,743] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:16:46,750] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:16:46,750] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:16:46 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:16:46,786] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,787] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,787] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:16:46,793] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:16:46,795] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:16:46,812] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:16:46,816] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:16:46,819] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:16:46,854] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:16:46,871] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:16:46,874] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:16:46,881] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:16:46,893] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:16:46,900] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:16:46,958] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,959] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:16:46,959] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:16:46,971] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:16:46,975] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:16:46,976] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:16:46,977] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:16:46,978] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:16:46,979] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:16:47,006] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:16:47,006] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f27e: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:16:47,111] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,112] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,127] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,129] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,147] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,148] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,149] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,150] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,150] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,150] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,151] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,151] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,152] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,152] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,153] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,154] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,154] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,154] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,155] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,155] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,155] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,156] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,156] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,156] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,160] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@47108e] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:16:47,163] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@9764bd] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:16:47,166] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@335297] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:16:47,167] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f27e: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:16:47,168] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,168] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,171] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,197] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,197] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,197] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,199] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,204] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,204] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,204] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,206] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,216] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,217] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,217] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,265] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,396] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,409] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,420] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:16:47,421] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:16:47,422] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:16:47,423] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,425] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:16:47,426] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,426] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,427] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,427] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:16:47,427] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,428] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,430] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@17aaeec] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:16:47,430] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,433] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:16:47,433] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:16:47,508] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,520] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,532] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,541] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:16:47,541] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:16:47,542] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=7404&registry=zookeeper&timestamp=1406877407444, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:16:47,549] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,558] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,587] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,618] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,636] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,681] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:16:47,743] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:16:47,749] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,763] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8780&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877240413, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8804&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877261548}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:16:47,779] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:16:47,779] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:16:47,788] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,788] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,789] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,789] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,789] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,789] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,790] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,791] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,791] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,791] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,791] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:16:47,793] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@de6570 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:16:47,795] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:16:47,809] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:16:47,809] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:16:47,810] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:16:47,812] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:16:47,815] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:16:47,842] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1478f7ec65f0010, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:16:47,844] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:16:47,844] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:16:47,844] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:16:47,844] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:16:47,846] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:16:47,872] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,594,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,890] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,595,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,903] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,596,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,915] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,597,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7404%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877407454,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D7404%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877407454  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,917] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:16:47,935] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,598,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,948] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,599,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,959] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,600,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,965] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,600,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{429,429,1406873134986,1406873134986,0,0,0,0,0,0,429}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,970] DEBUG | Reading reply sessionid:0x1478f7ec65f0010, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,600,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:16:47,970] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:16:47,979] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,984] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:16:47,991] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,991] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,991] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,992] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:16:47,993] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:16:47,993] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:16:47,994] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:16:47,994] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,994] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:16:47,994] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:16:47,995] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:16:47,995] INFO | Root WebApplicationContext: initialization completed in 1358 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:16:57,971] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:07,972] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:17,975] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:27,976] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:37,977] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:47,977] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:17:57,978] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:07,981] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:17,980] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:27,982] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:37,983] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:47,984] DEBUG | Got ping response for sessionid: 0x1478f7ec65f0010 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:18:49,133] WARN | Session 0x1478f7ec65f0010 for server xiaohao-PC/192.168.1.35:2181, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:25)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:202)
	at sun.nio.ch.IOUtil.read(IOUtil.java:169)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:243)
	at org.apache.zookeeper.ClientCnxn$SendThread.doIO(ClientCnxn.java:856)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1154)
[VAMS][2014-08-01 15:18:49,236] DEBUG | Received event: WatchedEvent state:Disconnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:18:49,236] INFO | zookeeper state changed (Disconnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:18:49,236] DEBUG | New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@fbd45] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-01 15:18:49,237] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:18:49,241] DEBUG | Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@fbd45] | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-01 15:18:49,241] DEBUG | Delivering event #1 done | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-01 15:18:50,674] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:18:51,677] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:18:51,677] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:51,679] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:53,204] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:18:54,214] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:18:54,214] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:54,215] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:55,949] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:18:56,943] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:18:56,943] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:56,943] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:58,397] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:18:59,397] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:18:59,398] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:18:59,398] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:00,900] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:01,900] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:01,900] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:01,900] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:03,499] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:04,499] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:04,499] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:04,499] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:05,680] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:06,691] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:06,691] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:06,691] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:08,181] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:09,182] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:09,182] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:09,182] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:10,440] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:11,433] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:11,433] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:11,433] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:12,567] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:13,569] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:13,569] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:13,569] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:14,688] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:15,699] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:15,699] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:15,699] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:17,419] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:18,424] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:18,425] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:18,425] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:20,200] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:21,205] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:21,205] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:21,205] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:22,376] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:23,382] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:23,382] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:23,382] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:24,930] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:25,931] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:25,931] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:25,931] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:27,739] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:28,740] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:28,740] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:28,740] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:29,884] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:30,885] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:30,885] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:30,885] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:32,073] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:33,078] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:33,078] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:33,078] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:34,663] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:35,683] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:35,683] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:35,683] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:37,063] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:38,083] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:38,083] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:38,083] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:39,949] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:40,965] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:40,965] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:40,965] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:42,368] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:43,369] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:43,369] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:43,369] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:44,660] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:45,670] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:45,670] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:45,670] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:47,357] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:48,357] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:48,357] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:48,357] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:50,089] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:51,091] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:51,094] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:51,094] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:52,954] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:53,954] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:53,954] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:53,954] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:55,555] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:56,557] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:56,557] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:56,557] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:58,308] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:19:59,308] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:19:59,308] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:19:59,308] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:00,453] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:01,463] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:01,463] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:01,463] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:03,415] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:04,426] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:04,426] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:04,426] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:05,887] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:06,897] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:06,897] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:06,897] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:08,497] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:09,498] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:09,498] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:09,498] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:11,220] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:12,221] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:12,221] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:12,221] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:13,493] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:14,513] WARN | Session 0x1478f7ec65f0010 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:20:14,513] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:14,513] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:20:16,089] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:16,090] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:16,092] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:16,098] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:17,786] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:17,788] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:17,788] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:17,794] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:19,195] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:19,196] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:19,196] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:19,200] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:20,456] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:20,457] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:20,457] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:20,462] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:22,204] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:22,206] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:22,209] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:22,215] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:24,061] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:24,062] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:24,062] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:24,067] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:25,685] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:25,686] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:25,686] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:25,692] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:27,598] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:27,598] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:27,599] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:27,603] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:28,808] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:28,809] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:28,809] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:28,814] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:30,854] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:30,855] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:30,855] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:30,858] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:32,019] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:32,021] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:32,021] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:32,023] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:33,176] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:33,177] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:33,177] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:33,178] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:35,087] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:35,088] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:35,088] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:35,091] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:36,362] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:36,363] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:36,363] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:36,365] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:37,708] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:37,709] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:37,709] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:37,710] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:39,239] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:39,245] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:39,245] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:39,253] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:40,557] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:40,558] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:40,563] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:40,565] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:42,450] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:42,452] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:42,452] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:42,454] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:20:44,440] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:20:44,441] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:20:44,441] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:20:44,444] INFO | Unable to read additional data from server sessionid 0x1478f7ec65f0010, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-01 15:21:07,405] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:21:07,485] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,486] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,492] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,493] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,494] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,495] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:07,499] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:21:07,499] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:21:07 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:21:07,540] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,540] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,541] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:07,547] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:21:07,550] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:21:07,566] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:21:07,571] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:21:07,574] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:07,605] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:07,620] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:07,624] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:21:07,631] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:21:07,647] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:21:07,655] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:21:07,709] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,710] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:21:07,710] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:21:07,723] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:21:07,727] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:07,729] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:07,729] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:21:07,731] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:21:07,731] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:21:07,758] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:21:07,758] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1e4e3e4: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:21:07,847] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,847] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,861] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,865] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,884] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,884] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,886] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,886] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,886] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,887] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,888] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,888] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,889] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,889] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,891] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,892] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,893] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,893] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,893] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,893] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,896] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@13bedc4] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:21:07,897] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@139ef3a] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:21:07,900] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@26807f] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:21:07,902] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e4e3e4: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:21:07,902] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,903] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,907] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,942] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,943] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,943] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,944] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,952] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,952] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,953] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:07,954] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:07,965] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:07,966] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:07,966] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:08,000] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,123] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,142] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:08,159] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:21:08,160] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:21:08,160] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:21:08,162] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:08,165] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:21:08,165] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,166] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,166] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,167] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:21:08,167] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,168] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,169] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,171] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@fc5408] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:21:08,172] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,178] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:21:08,178] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:21:08,248] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,260] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,272] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,282] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:21:08,283] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:21:08,283] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=9616&registry=zookeeper&timestamp=1406877668185, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:21:08,291] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,300] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,321] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,350] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,365] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,406] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:21:08,464] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:21:08,472] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:08,492] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7404&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877407454, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8296&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877425554}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:21:08,504] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:21:08,504] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:21:08,511] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,511] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,512] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,512] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,512] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,513] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,513] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,513] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,513] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,514] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,514] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,514] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,515] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,515] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,515] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:21:08,516] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1fd9b49 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:21:08,519] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:21:08,531] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:21:08,531] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:21:08,532] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:21:08,533] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:21:08,536] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:21:08,569] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479070c2fa0000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:21:08,571] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:21:08,572] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:21:08,572] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:21:08,572] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:21:08,578] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:21:08,633] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,2,0  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:08,740] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,3,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:08,855] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,4,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:08,949] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,5,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9616%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877668194,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9616%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877668194  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:08,951] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:21:08,972] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,6,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,002] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,7,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,014] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,8,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,027] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,8,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,032] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,8,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:21:09,033] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:21:09,042] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:09,050] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:21:09,061] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,061] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,062] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,062] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:21:09,064] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:21:09,064] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:21:09,064] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:21:09,064] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,065] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:21:09,065] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:21:09,065] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:21:09,065] INFO | Root WebApplicationContext: initialization completed in 1658 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:21:19,033] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:21:29,034] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:21:39,034] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:21:49,036] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:21:59,037] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:22:09,037] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:22:19,038] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:22:27,124] WARN | Session 0x1479070c2fa0000 for server xiaohao-PC/192.168.1.35:2181, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:25)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:202)
	at sun.nio.ch.IOUtil.read(IOUtil.java:169)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:243)
	at org.apache.zookeeper.ClientCnxn$SendThread.doIO(ClientCnxn.java:856)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1154)
[VAMS][2014-08-01 15:22:27,225] DEBUG | Received event: WatchedEvent state:Disconnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:22:27,225] INFO | zookeeper state changed (Disconnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:22:27,226] DEBUG | New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@bec43f] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-01 15:22:27,226] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:22:27,232] DEBUG | Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@bec43f] | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-01 15:22:27,233] DEBUG | Delivering event #1 done | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-01 15:22:29,059] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:30,060] WARN | Session 0x1479070c2fa0000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:22:30,060] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:30,061] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:31,884] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:32,886] WARN | Session 0x1479070c2fa0000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:22:32,886] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:32,886] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:34,110] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:35,120] WARN | Session 0x1479070c2fa0000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:22:35,120] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:35,120] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:36,451] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:37,462] WARN | Session 0x1479070c2fa0000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:22:37,462] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:37,462] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:22:39,466] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:22:40,466] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:22:40,467] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:22:40,475] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479070c2fa0000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:22:40,475] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:22:40,475] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:22:40,475] DEBUG | New event: ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@bec43f] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-01 15:22:40,475] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:22:40,475] DEBUG | Delivering event #2 ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@bec43f] | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-01 15:22:40,475] DEBUG | Delivering event #2 done | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-01 15:22:40,497] DEBUG | Reading reply sessionid:0x1479070c2fa0000, packet:: clientPath:null serverPath:null finished:false header:: -8,101  replyHeader:: -8,23,0  request:: 8,v{'/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators},v{},v{'/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators}  response:: null | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:22:50,471] DEBUG | Got ping response for sessionid: 0x1479070c2fa0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:23:41,180] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:23:41,275] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,276] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,280] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,281] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,282] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,282] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:23:41,288] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:23:41,289] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:23:41 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:23:41,326] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,326] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,327] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:23:41,335] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:23:41,338] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:23:41,360] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:23:41,367] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:23:41,373] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:23:41,397] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:23:41,411] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:23:41,413] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:23:41,422] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:23:41,439] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:23:41,450] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:23:41,510] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,511] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:23:41,512] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:23:41,522] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:23:41,526] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:23:41,527] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:23:41,528] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:23:41,529] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:23:41,529] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:23:41,555] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:23:41,556] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1f49969: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:23:41,674] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,675] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,688] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,690] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,705] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,706] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,708] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,708] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,708] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,709] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,709] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,710] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,710] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,710] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,712] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,712] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,713] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,713] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,714] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,714] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,715] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,715] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,716] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,716] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,719] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@144569b] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:23:41,722] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1593ce6] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:23:41,724] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@19b0124] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:23:41,725] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f49969: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:23:41,725] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,725] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,729] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,755] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,755] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,755] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,757] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,763] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,763] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,763] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,765] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,776] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,777] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,777] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,824] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:41,950] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:41,968] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,985] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:23:41,986] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:23:41,987] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:23:41,989] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,992] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:23:41,993] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,993] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,994] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,995] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,996] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,996] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,996] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:41,997] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1b271f1] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:23:41,998] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:42,002] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:23:42,002] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:23:42,076] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,088] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,097] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,106] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:23:42,106] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8584&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877822017, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:23:42,106] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8584&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877822017 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=8584&registry=zookeeper&timestamp=1406877822009, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:23:42,115] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,132] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,160] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,180] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,192] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,233] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:23:42,294] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:23:42,299] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:23:42,316] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:23:42,329] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:23:42,329] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:23:42,337] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,337] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,337] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,338] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,339] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,339] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,339] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,339] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,340] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,340] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,340] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:23:42,341] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@686cea | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:23:42,343] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:23:42,353] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:23:42,353] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:23:42,354] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:23:43,356] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:23:43,357] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:43,357] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:44,754] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:23:45,765] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:23:45,765] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:45,765] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:47,566] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:23:48,568] WARN | Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-01 15:23:48,569] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:48,569] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-01 15:23:50,647] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:24:10,726] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:24:10,812] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,813] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,820] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,821] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,823] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,823] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:10,828] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:24:10,828] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:24:10 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:24:10,861] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,861] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:10,862] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:10,868] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:24:10,871] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:24:10,891] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:24:10,895] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:24:10,904] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:10,931] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:10,946] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:10,949] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:24:10,954] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:24:10,968] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:24:10,978] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:24:11,033] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:11,033] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:24:11,034] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:24:11,047] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:24:11,047] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:11,048] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:11,049] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:24:11,050] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:24:11,050] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:24:11,078] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:24:11,079] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@fb2ac4: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:24:11,184] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,185] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,205] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,210] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,233] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,233] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,235] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,235] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,236] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,236] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,237] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,237] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,238] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,238] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,240] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,240] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,241] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,241] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,241] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,241] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,242] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,242] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,242] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,243] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,246] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@8c2d23] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:24:11,248] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@9a41d2] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:24:11,251] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@7db754] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:24:11,253] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@fb2ac4: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:24:11,253] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,253] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,259] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,283] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,283] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,283] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,285] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,292] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,292] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,292] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,294] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,304] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,305] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,305] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,353] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,484] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,501] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,516] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:24:11,516] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:24:11,518] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:24:11,520] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,523] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:24:11,524] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,525] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,526] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,526] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:24:11,527] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,527] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,527] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,527] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,528] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,528] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,528] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,530] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@111c3f0] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:24:11,531] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,535] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:24:11,536] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:24:11,608] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,620] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,635] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,647] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:24:11,648] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:24:11,648] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=9380&registry=zookeeper&timestamp=1406877851546, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:24:11,656] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,672] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,696] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,721] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,736] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,780] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:24:11,842] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:24:11,848] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:11,863] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9616&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877668194, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9132&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877686725}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:24:11,875] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:24:11,875] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:24:11,883] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,883] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,883] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,884] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,885] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,885] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,885] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,885] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,886] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,886] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,886] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:24:11,887] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@41825e | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:24:11,889] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:24:11,900] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:24:11,900] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:24:11,900] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:24:11,902] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:24:11,905] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:24:11,951] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x14790742c0b0000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:24:11,953] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:24:11,954] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:24:11,954] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:24:11,954] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:24:11,956] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:24:11,992] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,25,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,027] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,26,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,038] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,27,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,050] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,28,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9380%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877851554,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9380%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406877851554  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,051] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:24:12,063] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,29,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,075] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,30,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,088] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,31,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,095] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,31,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,101] DEBUG | Reading reply sessionid:0x14790742c0b0000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,31,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:24:12,101] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:24:12,110] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:12,118] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:24:12,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,133] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,134] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:24:12,135] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:24:12,135] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:24:12,135] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:24:12,135] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,136] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:24:12,136] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:24:12,136] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:24:12,136] INFO | Root WebApplicationContext: initialization completed in 1408 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:24:22,100] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:24:32,103] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:24:42,104] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:24:52,104] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:02,111] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:12,113] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:22,113] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:32,114] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:42,114] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:25:52,116] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:02,117] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:12,118] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:22,123] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:32,122] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:42,122] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:26:52,125] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:02,124] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:12,126] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:22,126] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:32,129] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:42,128] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:27:52,130] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:02,132] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:12,136] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:22,136] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:32,138] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:42,139] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:28:52,139] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:02,140] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:12,141] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:22,142] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:32,144] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:42,146] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:29:52,148] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:02,146] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:12,148] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:22,150] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:32,151] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:42,156] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:30:52,154] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:02,156] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:12,157] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:22,161] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:32,162] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:42,163] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:31:52,162] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:02,163] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:12,166] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:22,166] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:32,167] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:42,169] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:32:52,171] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:02,172] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:12,176] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:22,175] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:32,177] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:42,179] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:33:52,179] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:02,179] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:12,180] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:22,181] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:32,181] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:42,181] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:34:52,182] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:02,184] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:12,184] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:22,184] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:32,186] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:42,188] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:35:52,188] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:02,190] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:12,191] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:22,192] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:32,192] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:42,192] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:36:52,193] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:02,193] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:12,195] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:22,196] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:32,197] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:42,198] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:37:52,199] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:02,199] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:12,199] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:22,200] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:32,201] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:42,201] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:38:52,202] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:02,202] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:12,203] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:22,203] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:32,204] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:42,206] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:39:52,206] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:02,207] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:12,209] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:22,210] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:32,211] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:42,211] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:40:52,212] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:02,212] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:12,213] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:22,213] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:32,214] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:42,215] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:41:52,215] DEBUG | Got ping response for sessionid: 0x14790742c0b0000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:43:25,605] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:43:25,680] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,680] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,685] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,686] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,687] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,687] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:43:25,691] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:43:25,692] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:43:25 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:43:25,728] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,728] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,729] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:43:25,735] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:43:25,738] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:43:25,755] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:43:25,759] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:43:25,765] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:43:25,792] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:43:25,810] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:43:25,812] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:43:25,818] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:43:25,830] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:43:25,836] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:43:25,883] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,884] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:43:25,884] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:43:25,894] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:43:25,894] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:43:25,900] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:43:25,900] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:43:25,901] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:43:25,902] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:43:25,928] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:43:25,928] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1fa10da: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:43:26,013] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,014] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,026] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,029] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,045] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,045] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,047] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,047] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,047] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,047] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,048] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,048] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,048] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,049] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,051] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,051] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,052] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,052] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,052] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,053] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,053] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,053] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,054] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,054] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,057] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@beebcd] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:43:26,059] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@433545] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:43:26,060] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1ea25aa] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:43:26,062] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1fa10da: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:43:26,062] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,062] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,068] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,094] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,095] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,095] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,096] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,103] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,103] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,104] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,105] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,116] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,116] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,117] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,150] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,273] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,286] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,298] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:43:26,299] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:43:26,300] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:43:26,301] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,304] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:43:26,304] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,305] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,305] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,306] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,307] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,307] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,307] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,308] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a422d9] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:43:26,309] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,312] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:43:26,312] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:43:26,377] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,390] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,399] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,407] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:43:26,407] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:43:26,407] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=9460&registry=zookeeper&timestamp=1406879006321, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:43:26,415] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,424] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,445] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,465] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,475] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,514] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:43:26,564] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:43:26,570] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:26,587] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9380&revision=1.0-SNAPSHOT&side=provider&timestamp=1406877851554, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8932&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406877862524}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:43:26,604] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:43:26,604] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:43:26,613] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,613] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,614] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,614] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,614] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,615] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,616] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,616] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,616] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,616] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,617] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:43:26,618] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1bcfbeb | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:43:26,620] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:43:26,631] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:43:26,631] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:43:26,631] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:43:26,633] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:43:26,635] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:43:27,006] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:43:27,010] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:43:27,010] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:43:27,011] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:43:27,011] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:43:27,013] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:43:27,061] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,50,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,080] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,51,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,092] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,52,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,104] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,53,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9460%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879006328,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9460%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879006328  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,105] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:43:27,125] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,54,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,137] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,55,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,150] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,56,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,157] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,56,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,165] DEBUG | Reading reply sessionid:0x1479085bf940000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,56,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:43:27,165] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:43:27,175] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:27,180] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:43:27,188] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,188] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,188] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,188] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:43:27,190] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:43:27,190] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:43:27,190] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:43:27,190] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,191] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:43:27,191] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:43:27,191] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:43:27,191] INFO | Root WebApplicationContext: initialization completed in 1584 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:43:37,164] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:43:47,167] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:43:57,167] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:07,167] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:17,168] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:27,168] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:37,171] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:47,171] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:44:57,173] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:07,172] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:17,176] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:27,174] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:37,175] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:47,176] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:45:57,176] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:07,177] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:17,177] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:27,178] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:37,178] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:47,179] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:46:57,180] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:07,180] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:17,181] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:27,182] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:37,183] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:47,183] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:47:57,185] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:07,186] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:17,186] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:27,187] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:37,188] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:47,189] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:48:57,189] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:07,191] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:17,191] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:27,193] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:37,202] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 8ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:47,195] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:49:57,197] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:07,197] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:17,199] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:26,630] DEBUG |  [DUBBO] Send heartbeat to remote channel /127.0.0.1:52815, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 15:50:27,200] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:37,200] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:47,201] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:50:57,201] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:07,203] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:17,208] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 4ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:26,632] DEBUG |  [DUBBO] Send heartbeat to remote channel /127.0.0.1:52815, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 15:51:27,207] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:37,208] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:47,212] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:51:57,212] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:07,212] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:17,213] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:26,634] DEBUG |  [DUBBO] Send heartbeat to remote channel /127.0.0.1:52815, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 15:52:26,635] WARN |  [DUBBO] Close channel NettyChannel [channel=[id: 0x019bdb65, /127.0.0.1:52815 => /127.0.0.1:20881]], because heartbeat read idle time out: 180000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(71)
[VAMS][2014-08-01 15:52:26,636] INFO |  [DUBBO] Close netty channel [id: 0x019bdb65, /127.0.0.1:52815 => /127.0.0.1:20881], dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-01 15:52:26,636] WARN |  [DUBBO] All clients has discontected from /127.0.0.1:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-01 15:52:26,638] INFO |  [DUBBO] disconected from /127.0.0.1:52815,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-13] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-01 15:52:27,213] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:37,214] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:47,214] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:52:57,216] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:07,218] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:17,218] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:27,221] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:37,221] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:47,222] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:53:57,223] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:54:07,223] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:54:17,224] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:54:27,224] DEBUG | Got ping response for sessionid: 0x1479085bf940000 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:06,527] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 15:58:06,607] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,608] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,613] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,614] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,615] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,616] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:06,620] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 15:58:06,620] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 15:58:06 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 15:58:06,652] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,652] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,653] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:06,659] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 15:58:06,662] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 15:58:06,678] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 15:58:06,682] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 15:58:06,687] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:06,712] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:06,728] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:06,730] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 15:58:06,736] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 15:58:06,748] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 15:58:06,757] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 15:58:06,807] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,807] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 15:58:06,807] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 15:58:06,823] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 15:58:06,823] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:06,825] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:06,826] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 15:58:06,827] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 15:58:06,828] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 15:58:06,921] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 15:58:06,921] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1cb01e3: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 15:58:06,941] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,942] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,959] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,962] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,978] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,978] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,979] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,979] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,980] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,980] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,980] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,981] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,981] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,981] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,983] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,984] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,984] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,984] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,985] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,985] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,985] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,986] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,986] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:06,986] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:06,989] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4b62a7] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 15:58:06,991] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@ced1a8] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 15:58:06,992] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@ba8180] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 15:58:06,993] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1cb01e3: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 15:58:06,994] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:06,994] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:06,999] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,026] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,027] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:07,027] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:07,029] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,037] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,038] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:07,038] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:07,040] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,049] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,050] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:07,050] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:07,083] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,197] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,211] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,225] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 15:58:07,226] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 15:58:07,226] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 15:58:07,227] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,229] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 15:58:07,230] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,230] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,231] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,232] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,232] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,232] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,232] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,234] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@230be4] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 15:58:07,235] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,240] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 15:58:07,240] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 15:58:07,329] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,339] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,351] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,361] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 15:58:07,361] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 15:58:07,361] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=9484&registry=zookeeper&timestamp=1406879887250, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 15:58:07,372] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,389] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,415] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,442] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,454] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,495] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 15:58:07,541] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 15:58:07,546] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,558] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=7676&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879051988}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 15:58:07,573] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 15:58:07,573] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 15:58:07,582] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,583] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,583] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,583] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,583] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,584] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,584] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,584] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,585] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,585] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,585] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,586] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,586] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,586] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,586] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 15:58:07,588] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1b0edb2 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 15:58:07,591] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 15:58:07,603] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 15:58:07,603] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 15:58:07,604] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 15:58:07,605] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 15:58:07,607] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 15:58:07,627] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940002, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 15:58:07,631] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 15:58:07,631] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 15:58:07,632] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 15:58:07,632] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 15:58:07,634] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 15:58:07,663] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,74,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,691] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,75,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,702] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,76,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,715] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,77,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9484%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879887260,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D9484%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406879887260  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,716] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 15:58:07,735] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,78,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,746] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,79,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,759] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,80,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,765] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,80,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,770] DEBUG | Reading reply sessionid:0x1479085bf940002, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,80,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 15:58:07,770] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 15:58:07,779] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,788] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 15:58:07,796] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,797] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,797] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,797] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:58:07,800] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 15:58:07,801] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 15:58:07,802] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 15:58:07,802] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,802] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 15:58:07,803] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 15:58:07,803] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 15:58:07,803] INFO | Root WebApplicationContext: initialization completed in 1273 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 15:58:17,772] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:27,774] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:37,775] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:47,774] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:58:50,401] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 15:58:57,775] DEBUG | Got ping response for sessionid: 0x1479085bf940002 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 15:59:01,551] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-01 15:59:01,580] INFO |  [DUBBO] disconected from /192.168.1.35:53954,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-4] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-01 16:02:44,346] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 16:02:44,418] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:02:44,419] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:02:44,425] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:02:44,426] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:02:44,427] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:02:44,427] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:02:44,431] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 16:02:44,432] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 16:02:44 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 16:02:44,463] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:02:44,463] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:02:44,464] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:02:44,471] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 16:02:44,474] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 16:02:44,492] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 16:02:44,495] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 16:02:44,504] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:02:44,527] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:02:44,541] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:02:44,543] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:02:44,549] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 16:02:44,560] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 16:02:44,566] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 16:02:44,616] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:02:44,617] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:02:44,617] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:02:44,631] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 16:02:44,632] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:02:44,633] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:02:44,633] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:02:44,635] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 16:02:44,635] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 16:02:44,726] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 16:02:44,726] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@39826: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 16:02:44,753] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,753] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,769] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:44,771] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:44,786] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,786] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,788] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:44,788] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:44,789] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,789] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,789] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:44,790] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:44,790] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,790] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,792] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:44,792] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:44,792] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,792] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,793] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:44,793] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:44,793] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,793] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,794] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:44,794] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:44,797] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@9aca82] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 16:02:44,799] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@11872a8] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 16:02:44,802] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@862041] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 16:02:44,804] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@39826: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 16:02:44,804] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,804] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,808] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:44,838] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:44,839] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,839] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,842] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:44,847] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:44,848] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,848] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,849] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:44,860] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:44,861] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:44,861] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:44,895] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,000] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,012] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:45,024] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:02:45,025] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:02:45,025] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:02:45,027] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:45,029] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 16:02:45,030] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,030] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,031] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,031] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:02:45,031] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,031] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,032] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,032] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,032] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,032] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,032] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,034] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@11f91ac] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 16:02:45,035] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,039] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:02:45,039] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 16:02:45,108] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,117] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,126] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,134] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 16:02:45,134] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 16:02:45,134] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=8176&registry=zookeeper&timestamp=1406880165049, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 16:02:45,140] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,149] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,171] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,192] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,202] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,243] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 16:02:45,292] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 16:02:45,299] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,312] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9460&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879006328, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 16:02:45,328] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 16:02:45,328] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 16:02:45,336] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,336] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,336] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,337] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,337] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,337] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,337] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,337] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,338] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,338] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,338] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,338] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,339] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,339] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,339] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:02:45,340] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@85097d | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 16:02:45,342] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 16:02:45,352] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 16:02:45,352] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 16:02:45,352] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 16:02:45,354] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 16:02:45,356] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 16:02:45,388] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940004, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 16:02:45,390] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 16:02:45,390] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 16:02:45,390] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 16:02:45,390] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 16:02:45,392] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 16:02:45,417] DEBUG | Reading reply sessionid:0x1479085bf940004, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,98,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:02:45,436] DEBUG | Reading reply sessionid:0x1479085bf940004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,99,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:02:45,448] DEBUG | Reading reply sessionid:0x1479085bf940004, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,100,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:02:45,460] DEBUG | Reading reply sessionid:0x1479085bf940004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,101,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8176%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406880165057,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayHello%2526pid%253D8176%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406880165057  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:02:45,461] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 16:02:45,472] DEBUG | Reading reply sessionid:0x1479085bf940004, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,102,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:02:45,485] DEBUG | Reading reply sessionid:0x1479085bf940004, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,103,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:02:45,496] DEBUG | Reading reply sessionid:0x1479085bf940004, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,104,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:02:45,502] DEBUG | Reading reply sessionid:0x1479085bf940004, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,104,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:02:45,505] DEBUG | Reading reply sessionid:0x1479085bf940004, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,104,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:02:45,506] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 16:02:45,515] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,525] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:02:45,533] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:02:45,533] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:02:45,533] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:02:45,533] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:02:45,534] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 16:02:45,535] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:02:45,535] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 16:02:45,535] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:02:45,535] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:02:45,536] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 16:02:45,536] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 16:02:45,536] INFO | Root WebApplicationContext: initialization completed in 1188 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 16:02:55,506] DEBUG | Got ping response for sessionid: 0x1479085bf940004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:03:03,760] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 16:03:05,508] DEBUG | Got ping response for sessionid: 0x1479085bf940004 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:03:11,494] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-01 16:03:11,522] INFO |  [DUBBO] disconected from /192.168.1.35:54521,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-4] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-01 16:10:49,196] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 16:10:49,268] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:10:49,269] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:10:49,275] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:10:49,276] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:10:49,277] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:10:49,277] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:10:49,282] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 16:10:49,282] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 16:10:49 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 16:10:49,315] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:10:49,316] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:10:49,316] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:10:49,322] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 16:10:49,325] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 16:10:49,341] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 16:10:49,344] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 16:10:49,347] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:10:49,371] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:10:49,390] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:10:49,393] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:10:49,400] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 16:10:49,413] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 16:10:49,419] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 16:10:49,472] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:10:49,473] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:10:49,473] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:10:49,483] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 16:10:49,487] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:10:49,489] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:10:49,489] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:10:49,491] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 16:10:49,491] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 16:10:49,518] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 16:10:49,519] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@72edc: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 16:10:49,599] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,599] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,616] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,618] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,635] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,635] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,637] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,637] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,637] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,637] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,638] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,638] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,638] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,639] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,640] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,640] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,640] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,641] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,641] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,641] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,641] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,641] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,642] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,642] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,645] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5e6a13] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 16:10:49,647] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@14ef239] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 16:10:49,649] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@2d150f] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 16:10:49,651] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@72edc: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 16:10:49,651] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,651] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,655] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,683] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,683] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,684] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,685] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,688] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,690] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,691] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,692] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,703] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,703] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,704] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,736] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:49,848] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:49,860] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,872] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:10:49,873] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:10:49,873] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:10:49,875] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,878] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 16:10:49,879] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,880] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,881] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,881] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:10:49,881] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,881] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,882] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,882] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,882] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,882] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,882] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,884] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a06ec2] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 16:10:49,884] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,887] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:10:49,887] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 16:10:49,957] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:49,967] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:49,976] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:49,984] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 16:10:49,984] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 16:10:49,985] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=7040&registry=zookeeper&timestamp=1406880649896, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 16:10:49,991] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:50,000] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:50,021] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:50,043] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:50,053] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:50,093] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 16:10:50,141] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 16:10:50,147] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:50,164] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8176&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880165057 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8980&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880182854, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 16:10:50,176] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 16:10:50,177] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 16:10:50,184] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,185] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,185] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,185] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,185] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,185] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,186] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,186] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,186] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,186] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,187] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,187] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,187] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,187] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,187] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:10:50,189] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@e3990b | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 16:10:50,190] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 16:10:50,200] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 16:10:50,200] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 16:10:50,201] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 16:10:50,202] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 16:10:50,205] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 16:10:50,229] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940006, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 16:10:50,231] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 16:10:50,231] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 16:10:50,231] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 16:10:50,231] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 16:10:50,233] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 16:10:50,259] DEBUG | Reading reply sessionid:0x1479085bf940006, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,122,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:10:50,287] DEBUG | Reading reply sessionid:0x1479085bf940006, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,123,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:10:50,298] DEBUG | Reading reply sessionid:0x1479085bf940006, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,124,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:10:50,319] DEBUG | Reading reply sessionid:0x1479085bf940006, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,125,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7040%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406880649905,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7040%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406880649905  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:10:50,321] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 16:10:50,339] DEBUG | Reading reply sessionid:0x1479085bf940006, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,126,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:10:50,352] DEBUG | Reading reply sessionid:0x1479085bf940006, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,127,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:10:50,365] DEBUG | Reading reply sessionid:0x1479085bf940006, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,128,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:10:50,370] DEBUG | Reading reply sessionid:0x1479085bf940006, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,128,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:10:50,373] DEBUG | Reading reply sessionid:0x1479085bf940006, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,128,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:10:50,373] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 16:10:50,383] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:50,388] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:10:50,398] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:10:50,398] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:10:50,398] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:10:50,398] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:10:50,399] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 16:10:50,400] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:10:50,400] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 16:10:50,400] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:10:50,400] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:10:50,401] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 16:10:50,401] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 16:10:50,401] INFO | Root WebApplicationContext: initialization completed in 1203 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 16:11:00,375] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:09,809] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 16:11:09,829] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-3] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 16:11:10,377] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:20,377] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:30,379] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:40,380] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:11:50,380] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:00,380] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:10,380] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:20,382] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:30,385] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 4ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:40,384] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:12:50,153] DEBUG |  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(82)
[VAMS][2014-08-01 16:12:50,180] DEBUG |  [DUBBO] Send heartbeat to remote channel /192.168.1.35:55194, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 16:12:50,384] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:13:00,385] DEBUG | Got ping response for sessionid: 0x1479085bf940006 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:13:01,692] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-01 16:13:01,694] INFO |  [DUBBO] disconected from /192.168.1.35:55194,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-5] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-01 16:16:43,414] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 16:16:43,490] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:16:43,491] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:16:43,496] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:16:43,497] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:16:43,498] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:16:43,498] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:16:43,503] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 16:16:43,503] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 16:16:43 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 16:16:43,544] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:16:43,544] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:16:43,545] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:16:43,552] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 16:16:43,554] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 16:16:43,571] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 16:16:43,575] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 16:16:43,580] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:16:43,604] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:16:43,621] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:16:43,624] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 16:16:43,631] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 16:16:43,643] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 16:16:43,649] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 16:16:43,704] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:16:43,704] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 16:16:43,705] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 16:16:43,722] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 16:16:43,723] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:16:43,726] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:16:43,727] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 16:16:43,729] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 16:16:43,730] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 16:16:43,758] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 16:16:43,758] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@6dd60e: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 16:16:43,847] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,848] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,864] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:43,866] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:43,883] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,884] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,885] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:43,885] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:43,886] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,886] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,886] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:43,887] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:43,887] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,887] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,888] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:43,888] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:43,889] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,889] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,889] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:43,889] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:43,889] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,890] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,890] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:43,890] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:43,893] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@144dc7b] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 16:16:43,896] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@beebcd] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 16:16:43,898] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@433545] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 16:16:43,900] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6dd60e: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 16:16:43,901] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,901] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,907] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:43,939] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:43,939] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,940] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,941] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:43,947] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:43,947] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,947] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,949] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:43,960] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:43,961] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:43,961] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:43,995] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,110] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,124] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:44,137] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 16:16:44,137] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 16:16:44,138] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 16:16:44,139] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:44,142] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 16:16:44,143] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,144] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,145] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,145] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 16:16:44,146] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,146] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,146] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,146] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,146] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,146] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,147] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,148] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3d4817] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 16:16:44,148] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,151] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 16:16:44,151] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 16:16:44,217] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,226] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,235] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,243] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 16:16:44,243] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8644&revision=1.0-SNAPSHOT&side=provider&timestamp=1406881004166, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 16:16:44,243] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8644&revision=1.0-SNAPSHOT&side=provider&timestamp=1406881004166 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=8644&registry=zookeeper&timestamp=1406881004159, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 16:16:44,249] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,258] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,278] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,298] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,308] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,353] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 16:16:44,405] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 16:16:44,412] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,428] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7040&revision=1.0-SNAPSHOT&side=provider&timestamp=1406880649905 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9724&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406880668574, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 16:16:44,440] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 16:16:44,440] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 16:16:44,448] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,449] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,449] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,449] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,449] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,450] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,450] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,450] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,450] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,451] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,451] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,451] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,451] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,451] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,452] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 16:16:44,453] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@f49ac3 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 16:16:44,455] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 16:16:44,468] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 16:16:44,469] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 16:16:44,469] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 16:16:44,470] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 16:16:44,473] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 16:16:44,503] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940008, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 16:16:44,504] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 16:16:44,505] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 16:16:44,505] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 16:16:44,505] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 16:16:44,506] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8644&revision=1.0-SNAPSHOT&side=provider&timestamp=1406881004166, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 16:16:44,533] DEBUG | Reading reply sessionid:0x1479085bf940008, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,146,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:16:44,560] DEBUG | Reading reply sessionid:0x1479085bf940008, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,147,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:16:44,571] DEBUG | Reading reply sessionid:0x1479085bf940008, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,148,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:16:44,584] DEBUG | Reading reply sessionid:0x1479085bf940008, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,149,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8644%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406881004166,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8644%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406881004166  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:16:44,586] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8644&revision=1.0-SNAPSHOT&side=provider&timestamp=1406881004166, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 16:16:44,596] DEBUG | Reading reply sessionid:0x1479085bf940008, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,150,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:16:44,610] DEBUG | Reading reply sessionid:0x1479085bf940008, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,151,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:16:44,640] DEBUG | Reading reply sessionid:0x1479085bf940008, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,152,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:16:44,652] DEBUG | Reading reply sessionid:0x1479085bf940008, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,152,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:16:44,656] DEBUG | Reading reply sessionid:0x1479085bf940008, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,152,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 16:16:44,657] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8644&revision=1.0-SNAPSHOT&side=provider&timestamp=1406881004166, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8644&revision=1.0-SNAPSHOT&side=provider&timestamp=1406881004166], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 16:16:44,667] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,673] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 16:16:44,680] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:16:44,681] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:16:44,681] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:16:44,681] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:16:44,682] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 16:16:44,682] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 16:16:44,683] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 16:16:44,683] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:16:44,683] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 16:16:44,683] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 16:16:44,683] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 16:16:44,684] INFO | Root WebApplicationContext: initialization completed in 1268 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 16:16:54,659] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:17:04,660] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:17:14,660] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:17:24,661] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:17:34,662] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:17:44,662] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:17:54,664] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:18:04,664] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:18:14,665] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:18:24,665] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:18:34,666] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:18:44,667] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:18:54,676] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 8ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:19:04,670] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:19:14,670] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:19:24,671] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:19:34,671] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:19:44,473] DEBUG |  [DUBBO] Send heartbeat to remote channel /127.0.0.1:55785, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 16:19:44,672] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:19:54,674] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:20:04,674] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:20:14,674] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:20:24,676] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:20:34,677] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:20:44,474] DEBUG |  [DUBBO] Send heartbeat to remote channel /127.0.0.1:55785, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 16:20:44,677] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:20:54,678] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:21:04,680] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:21:14,679] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:21:24,682] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:21:34,683] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:21:44,477] DEBUG |  [DUBBO] Send heartbeat to remote channel /127.0.0.1:55785, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-01 16:21:44,478] WARN |  [DUBBO] Close channel NettyChannel [channel=[id: 0x00656758, /127.0.0.1:55785 => /127.0.0.1:20881]], because heartbeat read idle time out: 180000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(71)
[VAMS][2014-08-01 16:21:44,478] INFO |  [DUBBO] Close netty channel [id: 0x00656758, /127.0.0.1:55785 => /127.0.0.1:20881], dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(135)
[VAMS][2014-08-01 16:21:44,479] WARN |  [DUBBO] All clients has discontected from /127.0.0.1:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-01 16:21:44,495] INFO |  [DUBBO] disconected from /127.0.0.1:55785,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8644&revision=1.0-SNAPSHOT&side=provider&timestamp=1406881004166, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-15] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-01 16:21:44,686] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:21:54,686] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:22:04,686] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:22:14,689] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:22:24,689] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:22:34,690] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:22:44,690] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:22:54,691] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:23:04,692] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:23:14,695] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:23:24,696] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:23:34,696] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:23:44,696] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:23:54,698] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:24:04,699] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:24:14,699] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:24:24,701] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:24:34,702] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:24:44,702] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:24:54,702] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:25:04,704] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:25:14,705] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:25:24,706] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:25:34,707] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:25:44,708] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:25:54,708] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:26:04,709] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:26:14,711] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:26:24,717] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 6ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:26:34,713] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:26:44,714] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:26:54,715] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:27:04,716] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:27:14,717] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:27:24,718] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:27:34,719] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:27:44,720] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:27:54,720] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:28:04,721] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:28:14,721] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:28:23,984] WARN |  [DUBBO] All clients has discontected from /127.0.0.1:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-2] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-01 16:28:23,985] INFO |  [DUBBO] disconected from /127.0.0.1:56671,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8644&revision=1.0-SNAPSHOT&side=provider&timestamp=1406881004166, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-40] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-01 16:28:24,722] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:28:34,722] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:28:44,723] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:28:54,724] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:29:04,724] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:29:14,725] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:29:24,726] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:29:34,727] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:29:44,728] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:29:54,729] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:30:04,730] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:30:14,730] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:30:24,731] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:30:34,731] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:30:44,732] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:30:54,732] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:31:04,733] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:31:14,734] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:31:24,734] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:31:34,735] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:31:44,735] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:31:54,736] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:32:04,736] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:32:14,737] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:32:24,738] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:32:34,738] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:32:44,739] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:32:54,739] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:33:04,741] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:33:14,741] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:33:24,742] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:33:34,743] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:33:44,743] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:33:54,744] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:34:04,744] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:34:14,745] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:34:24,745] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:34:34,746] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:34:44,747] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:34:54,747] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:35:04,748] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:35:14,748] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:35:24,749] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:35:34,749] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:35:44,750] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:35:54,751] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:36:04,751] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:36:14,752] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:36:24,752] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:36:34,753] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:36:44,753] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:36:54,754] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:37:04,755] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:37:14,755] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:37:24,756] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:37:34,756] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:37:44,757] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:37:54,758] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:38:04,758] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:38:14,760] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:38:24,761] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:38:34,764] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:38:44,764] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:38:54,765] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:39:04,766] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:39:14,768] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:39:24,768] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:39:34,769] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:39:44,770] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:39:54,770] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:40:04,772] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:40:14,772] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:40:24,773] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:40:34,774] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:40:44,775] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:40:54,775] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:41:04,777] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:41:14,778] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:41:24,778] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:41:34,778] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:41:44,783] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:41:54,782] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:42:04,783] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:42:14,782] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:42:24,784] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:42:34,785] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:42:44,785] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:42:54,787] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:43:04,787] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:43:14,788] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:43:24,788] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:43:34,790] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:43:44,790] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:43:54,791] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:44:04,792] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:44:14,792] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:44:24,795] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:44:34,795] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:44:44,795] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:44:54,796] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:45:04,799] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:45:14,801] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:45:24,800] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:45:34,802] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:45:44,803] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:45:54,804] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:46:04,804] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:46:14,808] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:46:24,809] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:46:34,810] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:46:44,811] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:46:54,811] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:47:04,811] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:47:14,813] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:47:24,815] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:47:34,816] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:47:44,819] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 4ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:47:54,818] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:48:04,818] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:48:14,820] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:48:24,819] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:48:34,822] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:48:44,822] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:48:54,832] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 6ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:49:04,830] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:49:14,830] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:49:24,831] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:49:34,830] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:49:44,833] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:49:54,834] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:50:04,834] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:50:14,834] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:50:24,836] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:50:34,837] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:50:44,837] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:50:54,838] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:51:04,839] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:51:14,839] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:51:24,841] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:51:34,840] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:51:44,843] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:51:54,843] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:52:04,844] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:52:14,845] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:52:24,845] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:52:34,846] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:52:44,846] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:52:54,847] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:53:04,848] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:53:14,848] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:53:24,849] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:53:34,849] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:53:44,855] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:53:54,855] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:54:04,857] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:54:14,856] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:54:24,857] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:54:34,859] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:54:44,859] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:54:54,864] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 5ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:55:04,861] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:55:14,863] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:55:24,863] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:55:34,864] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:55:44,865] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:55:54,865] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:56:04,869] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 4ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:56:14,867] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:56:24,868] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:56:34,868] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:56:44,868] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:56:54,869] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:57:04,871] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:57:14,873] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:57:24,873] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:57:34,873] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:57:44,884] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 8ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:57:54,877] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:58:04,880] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:58:14,880] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:58:24,881] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:58:34,882] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:58:44,882] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:58:54,883] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:59:04,883] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:59:14,887] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:59:24,887] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:59:34,888] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:59:44,891] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 4ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 16:59:54,889] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:00:04,891] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:00:14,893] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:00:24,894] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:00:34,900] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:00:44,903] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:00:54,903] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:01:04,904] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:01:14,903] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:01:24,905] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:01:34,908] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:01:44,907] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:01:54,909] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:02:04,919] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 9ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:02:14,912] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:02:24,914] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:02:34,914] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:02:44,917] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:02:54,916] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:03:04,918] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:03:14,919] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:03:24,919] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:03:34,924] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:03:44,927] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:03:54,930] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:04:04,929] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:04:14,930] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:04:24,932] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:04:34,933] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:04:44,934] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:04:54,934] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:05:04,934] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:05:14,935] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:05:24,938] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:05:34,938] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:05:44,939] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:05:54,941] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:06:04,942] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:06:14,944] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:06:24,944] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:06:34,944] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:06:44,946] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:06:54,947] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:07:04,948] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:07:14,949] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:07:24,950] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:07:34,950] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:07:44,967] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:07:54,965] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:08:04,966] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:08:14,967] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:08:24,966] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:08:34,968] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:08:44,969] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:08:54,972] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:09:04,972] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:09:14,973] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:09:24,976] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:09:34,973] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:09:44,975] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:09:54,976] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:10:04,977] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:10:14,977] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:10:24,979] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:10:34,979] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:10:44,981] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:10:54,982] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:11:04,981] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:11:14,982] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:11:24,982] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:11:34,984] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:11:44,986] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:11:54,988] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:12:04,989] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:12:14,990] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:12:24,992] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:12:34,992] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:12:44,993] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:12:54,994] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:13:04,994] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:13:14,995] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:13:24,995] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:13:34,996] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:13:44,996] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:13:55,000] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 4ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:14:04,998] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:14:15,001] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:14:25,000] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:14:35,001] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:14:45,002] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:14:55,002] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:15:05,002] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:15:15,004] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:15:25,005] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:15:35,006] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:15:45,006] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:15:55,007] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:16:05,008] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:16:15,009] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:16:25,011] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:16:35,011] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:16:45,011] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:16:55,013] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:17:05,014] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:17:15,013] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:17:25,015] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:17:35,016] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:17:45,015] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:17:55,018] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:18:05,019] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:18:15,021] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:18:25,021] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:18:35,022] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:18:45,022] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:18:55,024] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:19:05,025] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:19:15,024] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:19:25,027] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:19:35,026] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:19:45,029] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:19:55,029] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:20:05,031] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:20:15,035] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:20:25,033] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:20:35,036] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:20:45,035] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:20:55,037] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:21:05,039] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:21:15,040] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:21:25,042] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:21:35,043] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:21:45,043] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:21:55,053] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 5ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:22:05,052] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:22:15,052] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:22:25,052] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:22:35,052] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:22:45,055] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:22:55,055] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:23:05,056] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:23:15,056] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:23:25,059] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:23:35,059] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:23:45,060] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:23:55,063] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:24:05,063] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:24:15,065] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:24:25,068] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:24:35,069] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:24:45,069] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:24:55,070] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:25:05,069] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:25:15,071] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:25:25,071] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:25:35,072] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:25:45,072] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:25:55,073] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:26:05,074] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:26:15,073] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:26:25,076] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:26:35,076] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:26:45,079] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:26:55,080] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:27:05,080] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:27:15,081] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:27:25,081] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:27:35,082] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:27:45,082] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:27:55,083] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:28:05,086] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:28:15,086] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:28:25,086] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:28:35,088] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:28:45,089] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:28:55,091] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:29:05,090] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:29:15,091] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:29:25,092] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:29:35,091] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:29:45,094] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:29:55,095] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:30:05,094] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:30:15,096] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:30:25,097] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:30:35,097] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:30:45,098] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:30:55,098] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:31:05,099] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:31:15,099] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:31:25,100] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:31:35,101] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:31:45,102] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:31:55,103] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:32:05,103] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:32:15,103] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:32:25,104] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:32:35,105] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:32:45,105] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:32:55,108] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:33:05,108] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:33:15,108] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:33:25,109] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:33:35,109] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:33:45,110] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:33:55,111] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:34:05,112] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:34:15,113] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:34:25,111] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:34:35,114] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:34:45,114] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:34:55,114] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:35:05,117] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:35:15,117] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:35:25,118] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:35:35,118] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:35:45,119] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:35:55,119] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:36:05,119] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:36:15,122] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:36:25,122] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:36:35,122] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:36:45,125] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:36:55,125] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:37:05,124] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:37:15,126] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:37:25,127] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:37:35,126] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:37:45,128] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:37:55,128] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:38:05,129] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:38:15,128] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:38:25,130] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:38:35,131] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:38:45,130] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:38:55,132] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:39:05,132] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:39:15,133] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:39:25,133] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:39:35,134] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:39:45,138] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 4ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:39:55,135] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:40:05,135] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:40:15,136] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:40:25,136] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:40:35,137] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:40:45,138] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:40:55,138] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:41:05,140] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:41:15,141] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:41:25,141] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:41:35,147] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 5ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:41:45,144] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:41:55,147] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:42:05,145] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:42:15,147] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:42:25,148] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:42:35,148] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:42:45,149] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:42:55,149] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:43:05,149] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:43:15,151] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:43:25,152] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:43:35,152] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:43:45,152] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:43:55,154] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:44:05,155] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:44:15,156] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:44:25,157] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:44:35,157] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:44:45,168] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 5ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:44:55,168] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:45:05,169] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:45:15,170] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:45:25,171] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:45:35,172] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:45:45,172] DEBUG | Got ping response for sessionid: 0x1479085bf940008 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:46:41,451] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-01 17:46:41,528] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:46:41,528] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:46:41,535] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:46:41,535] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:46:41,536] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:46:41,537] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 17:46:41,541] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-01 17:46:41,542] INFO | Refreshing Root WebApplicationContext: startup date [Fri Aug 01 17:46:41 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-01 17:46:41,573] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:46:41,573] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:46:41,573] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 17:46:41,579] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-01 17:46:41,582] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-01 17:46:41,598] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-01 17:46:41,601] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-01 17:46:41,610] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 17:46:41,634] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 17:46:41,649] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 17:46:41,651] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-01 17:46:41,658] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-01 17:46:41,668] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-01 17:46:41,673] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-01 17:46:41,718] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:46:41,719] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-01 17:46:41,719] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-01 17:46:41,734] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-01 17:46:41,734] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 17:46:41,735] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 17:46:41,736] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-01 17:46:41,737] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-01 17:46:41,738] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-01 17:46:41,826] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-01 17:46:41,826] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@75ca3e: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-01 17:46:41,844] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,845] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,859] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:41,862] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:41,878] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,878] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,880] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:41,880] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:41,880] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,880] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,881] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:41,881] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:41,882] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,882] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,883] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:41,883] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:41,884] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,884] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,884] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:41,884] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:41,885] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,885] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,885] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:41,885] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:41,888] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@862041] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-01 17:46:41,891] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@81fb] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-01 17:46:41,893] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1c1a68b] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-01 17:46:41,894] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@75ca3e: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-01 17:46:41,894] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,894] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,898] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:41,922] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:41,923] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,923] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,924] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:41,932] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:41,933] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,933] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,935] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:41,946] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:41,946] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:41,947] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:41,980] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,082] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,093] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:42,104] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-01 17:46:42,104] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-01 17:46:42,105] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-01 17:46:42,106] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:42,108] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-01 17:46:42,109] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,109] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,110] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,110] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-01 17:46:42,110] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,110] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,111] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,111] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,111] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,111] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,111] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,112] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1c7bee2] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-01 17:46:42,113] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,115] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-01 17:46:42,116] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-01 17:46:42,186] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,194] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,203] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,211] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-01 17:46:42,211] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-01 17:46:42,211] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&dubbo=2.5.3&pid=7736&registry=zookeeper&timestamp=1406886402125, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-01 17:46:42,218] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,226] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,247] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,268] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,278] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,312] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-01 17:46:42,365] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-01 17:46:42,371] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,384] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8644&revision=1.0-SNAPSHOT&side=provider&timestamp=1406881004166, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-01 17:46:42,397] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-01 17:46:42,397] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-01 17:46:42,406] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,406] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,406] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,407] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,407] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,407] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,407] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,408] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,408] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,408] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,408] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,408] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,409] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,409] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,409] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-01 17:46:42,410] INFO | Initiating client connection, connectString=192.168.1.35:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@54c9a3 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-01 17:46:42,412] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-01 17:46:42,423] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-01 17:46:42,424] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-01 17:46:42,424] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-01 17:46:42,426] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-01 17:46:42,428] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-01 17:46:42,467] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479085bf940009, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-01 17:46:42,469] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-01 17:46:42,469] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-01 17:46:42,469] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-01 17:46:42,469] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-01 17:46:42,471] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-01 17:46:42,496] DEBUG | Reading reply sessionid:0x1479085bf940009, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,155,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:46:42,515] DEBUG | Reading reply sessionid:0x1479085bf940009, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,156,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:46:42,528] DEBUG | Reading reply sessionid:0x1479085bf940009, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,157,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:46:42,549] DEBUG | Reading reply sessionid:0x1479085bf940009, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,158,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7736%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406886402132,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7736%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1406886402132  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:46:42,550] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-01 17:46:42,562] DEBUG | Reading reply sessionid:0x1479085bf940009, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,159,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:46:42,575] DEBUG | Reading reply sessionid:0x1479085bf940009, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,160,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:46:42,587] DEBUG | Reading reply sessionid:0x1479085bf940009, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,161,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:46:42,592] DEBUG | Reading reply sessionid:0x1479085bf940009, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,161,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8,8,1406877669003,1406877669003,0,0,0,0,0,0,8}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:46:42,597] DEBUG | Reading reply sessionid:0x1479085bf940009, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,161,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-01 17:46:42,597] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-01 17:46:42,605] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,614] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-01 17:46:42,623] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:46:42,623] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:46:42,623] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:46:42,623] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 17:46:42,624] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-01 17:46:42,625] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-01 17:46:42,625] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-01 17:46:42,625] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:46:42,625] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-01 17:46:42,626] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-01 17:46:42,626] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-01 17:46:42,626] INFO | Root WebApplicationContext: initialization completed in 1173 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-01 17:46:52,598] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:47:02,599] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:47:12,599] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:47:22,600] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:47:32,600] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:47:42,601] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:47:52,603] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:48:02,602] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:48:12,603] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:48:22,603] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:48:32,603] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:48:42,605] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:48:52,606] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:49:02,607] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:49:12,512] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 17:49:12,529] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-3] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-01 17:49:12,606] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-01 17:49:20,762] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-01 17:49:20,765] INFO |  [DUBBO] disconected from /192.168.1.35:50080,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-5] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-01 17:49:22,618] DEBUG | Got ping response for sessionid: 0x1479085bf940009 after 9ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:06:00,550] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 10:06:00,622] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:06:00,623] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:06:00,625] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:06:00,626] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:06:00,628] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:06:00,629] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:06:00,633] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 10:06:00,637] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 10:06:00 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 10:06:00,658] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:06:00,659] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:06:00,659] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:06:00,701] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 10:06:00,740] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 10:06:00,847] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 10:06:00,851] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 10:06:00,853] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:06:00,888] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:06:00,902] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:06:00,906] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:06:00,911] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 10:06:00,925] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 10:06:00,929] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 10:06:00,964] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:06:00,965] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:06:00,965] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:06:00,971] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 10:06:00,972] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:06:00,979] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:06:00,979] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:06:00,981] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 10:06:00,982] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 10:06:01,005] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 10:06:01,005] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@7d3050: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 10:06:01,017] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,018] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,033] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,035] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,045] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,045] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,046] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,047] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,047] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,047] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,048] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,048] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,048] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,049] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,060] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,060] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,061] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,061] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,061] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,062] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,062] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,062] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,063] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,063] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,065] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b6a561] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 10:06:01,070] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@767fb3] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 10:06:01,071] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@17574b9] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 10:06:01,072] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7d3050: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 10:06:01,072] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,073] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,076] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,099] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,100] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,100] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,101] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,106] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,106] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,107] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,110] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,118] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,119] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,119] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,152] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,258] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,272] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,290] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:06:01,290] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:06:01,293] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:06:01,294] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,297] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 10:06:01,298] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,299] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,299] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,300] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:06:01,300] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,301] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,301] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,301] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,302] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,302] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,302] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,303] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@183da96] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 10:06:01,304] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,306] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:06:01,306] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 10:06:01,388] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,401] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,411] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,426] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 10:06:01,426] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5296&revision=1.0-SNAPSHOT&side=provider&timestamp=1407117961323, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 10:06:01,427] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5296&revision=1.0-SNAPSHOT&side=provider&timestamp=1407117961323 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182?backup=192.168.1.35:2183&dubbo=2.5.3&pid=5296&registry=zookeeper&timestamp=1407117961313, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 10:06:01,433] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,445] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,466] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,491] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,504] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,546] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 10:06:01,592] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 10:06:01,597] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:06:01,610] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 10:06:01,621] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182?backup=192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 10:06:01,621] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182?backup=192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 10:06:01,626] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,628] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,629] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,629] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,630] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,630] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,630] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,631] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,631] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,631] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,631] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,632] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,632] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,632] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,632] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:06:01,633] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182?backup=192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1ca203 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 10:06:01,635] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 10:06:01,636] DEBUG | Closing ZkClient... | [main] org.I0Itec.zkclient.ZkClient.close(915)
[VAMS][2014-08-04 10:06:01,637] INFO | Terminate ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182?backup=192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(82)
[VAMS][2014-08-04 10:06:01,637] DEBUG | Closing ZkClient...done | [main] org.I0Itec.zkclient.ZkClient.close(928)
[VAMS][2014-08-04 10:06:01,638] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.I0Itec.zkclient.exception.ZkException: Unable to connect to 192.168.1.35:2181,192.168.1.35:2182?backup=192.168.1.35:2183
	at org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:66)
	at org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:872)
	at org.I0Itec.zkclient.ZkClient.<init>(ZkClient.java:98)
	at org.I0Itec.zkclient.ZkClient.<init>(ZkClient.java:92)
	at org.I0Itec.zkclient.ZkClient.<init>(ZkClient.java:76)
	at org.I0Itec.zkclient.ZkClient.<init>(ZkClient.java:72)
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.<init>(ZkclientZookeeperClient.java:25)
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperTransporter.connect(ZkclientZookeeperTransporter.java:10)
	at com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter$Adpative.connect(ZookeeperTransporter$Adpative.java)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.<init>(ZookeeperRegistry.java:71)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistryFactory.createRegistry(ZookeeperRegistryFactory.java:37)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.getRegistry(AbstractRegistryFactory.java:94)
	at com.alibaba.dubbo.registry.RegistryFactory$Adpative.getRegistry(RegistryFactory$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.getRegistry(RegistryProtocol.java:190)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:109)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.net.UnknownHostException: 192.168.1.35:2182?backup=192.168.1.35
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:850)
	at java.net.InetAddress.getAddressFromNameService(InetAddress.java:1201)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1154)
	at java.net.InetAddress.getAllByName(InetAddress.java:1084)
	at java.net.InetAddress.getAllByName(InetAddress.java:1020)
	at org.apache.zookeeper.ClientCnxn.<init>(ClientCnxn.java:382)
	at org.apache.zookeeper.ClientCnxn.<init>(ClientCnxn.java:327)
	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:383)
	at org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:64)
	... 76 more
[VAMS][2014-08-04 10:07:18,724] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 10:07:18,776] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:18,777] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:18,779] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:18,780] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:18,781] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:18,781] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:07:18,784] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 10:07:18,788] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 10:07:18 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 10:07:18,808] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:18,809] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:18,809] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:07:18,813] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 10:07:18,817] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 10:07:18,838] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 10:07:18,842] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 10:07:18,844] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:07:18,867] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:07:18,881] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:07:18,884] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:07:18,888] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 10:07:18,904] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 10:07:18,912] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 10:07:18,972] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:18,973] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:07:18,973] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:07:18,979] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 10:07:18,980] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:07:18,981] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:07:18,982] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:07:18,983] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 10:07:18,983] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 10:07:19,009] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 10:07:19,010] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@ef0cdb: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 10:07:19,029] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,029] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,044] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,047] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,059] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,059] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,060] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,060] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,061] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,061] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,061] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,062] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,062] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,062] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,064] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,064] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,065] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,065] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,065] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,065] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,066] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,066] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,066] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,066] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,068] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@153f141] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 10:07:19,070] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1b9e7fc] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 10:07:19,072] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@423606] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 10:07:19,073] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ef0cdb: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 10:07:19,073] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,073] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,077] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,094] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,094] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,095] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,097] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,100] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,101] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,101] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,103] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,111] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,111] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,112] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,140] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,235] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,251] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,265] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:07:19,266] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:07:19,269] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:07:19,270] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,272] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 10:07:19,273] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,274] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,275] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,275] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:07:19,276] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,277] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,277] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,277] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,278] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,278] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,278] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,279] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@183d59c] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 10:07:19,280] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,281] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:07:19,282] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 10:07:19,343] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,354] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,364] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,378] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 10:07:19,378] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 10:07:19,378] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=3388&registry=zookeeper&timestamp=1407118039290, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 10:07:19,384] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,396] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,415] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,435] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,448] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,484] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 10:07:19,524] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 10:07:19,530] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,545] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7736&revision=1.0-SNAPSHOT&side=provider&timestamp=1406886402132 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8148&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406886551765, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 10:07:19,556] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 10:07:19,556] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 10:07:19,562] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,562] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,562] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,563] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,563] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,563] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,563] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,564] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,564] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,564] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,564] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,565] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,565] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,565] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,566] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:07:19,566] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1d07c3f | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 10:07:19,568] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 10:07:19,575] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 10:07:19,575] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:07:19,576] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 10:07:19,577] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:07:19,579] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:07:19,661] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479ebbf48a0001, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 10:07:19,662] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:07:19,662] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:07:19,663] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:07:19,663] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 10:07:19,664] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 10:07:19,702] DEBUG | Reading reply sessionid:0x1479ebbf48a0001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,8589934599,0  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:19,733] DEBUG | Reading reply sessionid:0x1479ebbf48a0001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,8589934600,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:19,770] DEBUG | Reading reply sessionid:0x1479ebbf48a0001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,8589934601,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:19,804] DEBUG | Reading reply sessionid:0x1479ebbf48a0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,8589934602,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D3388%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407118039298,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D3388%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407118039298  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:19,805] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 10:07:19,837] DEBUG | Reading reply sessionid:0x1479ebbf48a0001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,8589934603,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:19,869] DEBUG | Reading reply sessionid:0x1479ebbf48a0001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,8589934604,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:19,928] DEBUG | Reading reply sessionid:0x1479ebbf48a0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,8589934605,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:19,933] DEBUG | Reading reply sessionid:0x1479ebbf48a0001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,8589934605,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:19,939] DEBUG | Reading reply sessionid:0x1479ebbf48a0001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,8589934605,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:07:19,940] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 10:07:19,947] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,956] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:07:19,965] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:19,966] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:19,966] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:19,966] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:07:19,969] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 10:07:19,969] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:07:19,970] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 10:07:19,971] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:19,971] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:07:19,972] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 10:07:19,972] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 10:07:19,972] INFO | Root WebApplicationContext: initialization completed in 1246 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 10:07:29,939] DEBUG | Got ping response for sessionid: 0x1479ebbf48a0001 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:07:39,939] DEBUG | Got ping response for sessionid: 0x1479ebbf48a0001 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:07:42,381] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:07:42,399] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-3] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:07:42,576] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 10:07:42,579] INFO |  [DUBBO] disconected from /192.168.1.35:50962,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-4] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 10:07:49,939] DEBUG | Got ping response for sessionid: 0x1479ebbf48a0001 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:07:59,946] DEBUG | Got ping response for sessionid: 0x1479ebbf48a0001 after 3ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:08:09,943] DEBUG | Got ping response for sessionid: 0x1479ebbf48a0001 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:08:19,946] DEBUG | Got ping response for sessionid: 0x1479ebbf48a0001 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:08:29,945] DEBUG | Got ping response for sessionid: 0x1479ebbf48a0001 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:08:35,400] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-6] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:08:35,411] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-7] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:08:39,947] DEBUG | Got ping response for sessionid: 0x1479ebbf48a0001 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:08:45,745] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:08:45,846] DEBUG | Received event: WatchedEvent state:Disconnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:08:45,846] INFO | zookeeper state changed (Disconnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:08:45,847] DEBUG | New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@b2175] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-04 10:08:45,847] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:08:45,847] DEBUG | Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@b2175] | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-04 10:08:45,848] DEBUG | Delivering event #1 done | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-04 10:08:46,523] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:08:47,408] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-2] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 10:08:47,420] INFO |  [DUBBO] disconected from /192.168.1.35:50974,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-9] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 10:08:47,547] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:08:47,548] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:47,549] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:48,477] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:08:49,488] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:08:49,488] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:49,488] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:51,565] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:08:51,565] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:08:51,567] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:08:51,568] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:08:52,401] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:08:53,402] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:08:53,403] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:53,403] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:53,544] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:08:54,555] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:08:54,555] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:54,556] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:55,919] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:08:55,919] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:08:55,920] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:08:55,922] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:08:56,935] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:08:57,945] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:08:57,945] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:57,945] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:58,536] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:08:59,546] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:08:59,546] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:08:59,546] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:01,481] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:01,481] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:01,482] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:01,484] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:02,124] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:03,135] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:03,135] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:03,135] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:03,629] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:04,635] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:04,635] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:04,636] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:06,532] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:06,533] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:06,533] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:06,536] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:07,256] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:08,268] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:08,268] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:08,268] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:09,259] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:10,268] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:10,268] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:10,268] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:11,580] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:11,582] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:11,582] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:11,590] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:12,589] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:13,599] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:13,599] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:13,599] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:14,051] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:15,059] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:15,059] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:15,059] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:17,111] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:17,112] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:17,112] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:17,114] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:18,028] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:19,039] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:19,039] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:19,039] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:19,770] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:20,774] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:20,774] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:20,774] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:22,696] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:22,698] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:22,698] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:22,700] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:23,688] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:24,702] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:24,702] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:24,702] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:25,435] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:26,455] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:26,455] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:26,456] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:28,240] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:28,241] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:28,242] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:28,245] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:28,415] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:29,425] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:29,425] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:29,425] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:29,939] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:30,939] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:30,939] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:30,939] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:32,831] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:32,832] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:32,832] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:32,834] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:33,743] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:34,745] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:34,746] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:34,746] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:35,429] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:36,430] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:36,430] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:36,431] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:37,825] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:37,826] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:37,826] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:37,827] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:38,683] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:39,694] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:39,694] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:39,694] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:40,622] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:41,632] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:41,632] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:41,632] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:43,681] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:43,681] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:43,682] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:43,683] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:44,655] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:45,666] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:45,666] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:45,666] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:45,876] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:46,887] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:46,887] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:46,887] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:48,436] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:48,438] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:48,438] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:48,440] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:49,086] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:50,096] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:50,096] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:50,096] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:50,551] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:51,561] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:51,561] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:51,561] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:52,864] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:52,864] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:52,867] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:52,869] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:53,541] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:54,552] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:54,552] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:54,552] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:54,662] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:55,672] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:55,672] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:55,672] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:57,365] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:57,366] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:09:57,367] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:09:57,368] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:09:57,893] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:09:58,903] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:09:58,903] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:58,903] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:09:59,214] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:00,225] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:00,225] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:00,226] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:01,963] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:01,963] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:01,964] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:01,965] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:02,626] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:03,641] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:03,641] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:03,641] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:04,006] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:05,018] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:05,018] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:05,018] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:06,542] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:06,543] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:06,544] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:06,548] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:07,105] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:08,116] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:08,116] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:08,116] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:08,392] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:09,388] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:09,388] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:09,389] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:11,045] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:11,046] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:11,047] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:11,049] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:11,930] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:12,941] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:12,941] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:12,941] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:13,408] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:14,419] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:14,419] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:14,419] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:16,422] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:16,424] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:16,424] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:16,427] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:16,680] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:17,694] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:17,694] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:17,694] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:18,072] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:19,083] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:19,083] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:19,083] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:20,292] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:20,292] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:20,293] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:20,295] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:21,117] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:22,127] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:22,127] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:22,127] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:23,083] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:24,094] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:24,094] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:24,094] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:25,315] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:25,316] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:25,317] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:25,319] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:25,451] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:26,462] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:26,462] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:26,462] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:26,713] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:27,723] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:27,723] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:27,723] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:29,551] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:29,552] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:29,552] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:29,556] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:30,114] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:31,124] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:31,124] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:31,124] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:31,798] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:32,807] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:32,807] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:32,807] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:34,893] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:34,894] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:34,894] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:34,897] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:35,356] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:36,367] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:36,367] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:36,367] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:37,078] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:38,089] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:38,089] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:38,089] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:39,766] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:39,767] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:39,767] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:39,769] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:40,351] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:41,362] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:41,362] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:41,362] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:41,676] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:42,676] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:42,677] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:42,677] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:43,874] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:43,875] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:43,875] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:43,878] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:44,513] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:45,523] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:45,523] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:45,523] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:45,978] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:46,989] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:46,989] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:46,989] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:48,454] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:48,456] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:48,456] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:48,458] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:49,177] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:50,188] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:50,188] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:50,188] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:50,738] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:51,750] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:51,750] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:51,750] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:53,087] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:53,088] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:53,088] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:53,090] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:53,995] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:55,006] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:55,006] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:55,006] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:55,909] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:56,909] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:10:56,909] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:56,909] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:10:58,375] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:10:58,376] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:10:58,376] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:10:58,377] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:10:59,401] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:00,415] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:00,415] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:00,415] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:01,222] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:02,232] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:02,232] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:02,232] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:03,752] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:03,753] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:03,753] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:03,759] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:04,635] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:05,655] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:05,655] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:05,655] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:05,920] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:06,920] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:06,920] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:06,920] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:08,874] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:08,875] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:08,875] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:08,876] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:09,277] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:10,289] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:10,289] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:10,289] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:10,803] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:11,813] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:11,813] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:11,813] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:13,116] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:13,117] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:13,117] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:13,119] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:13,450] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:14,453] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:14,454] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:14,454] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:14,567] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:15,578] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:15,578] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:15,578] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:16,888] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:16,889] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:16,889] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:16,891] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:17,750] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:18,760] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:18,760] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:18,760] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:19,653] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:20,663] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:20,663] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:20,663] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:21,906] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:21,907] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:21,908] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:21,911] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:22,382] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:23,392] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:23,392] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:23,392] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:24,302] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:25,313] WARN | Session 0x1479ebbf48a0001 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:11:25,313] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:25,313] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:11:26,618] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:11:26,618] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:11:26,619] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:11:26,620] INFO | Unable to read additional data from server sessionid 0x1479ebbf48a0001, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:11:27,336] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:13:24,216] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 10:13:24,264] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:13:24,264] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:13:24,267] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:13:24,267] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:13:24,269] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:13:24,269] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:13:24,272] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 10:13:24,275] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 10:13:24 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 10:13:24,297] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:13:24,297] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:13:24,298] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:13:24,302] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 10:13:24,306] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 10:13:24,325] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 10:13:24,329] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 10:13:24,335] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:13:24,358] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:13:24,373] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:13:24,375] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 10:13:24,380] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 10:13:24,388] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 10:13:24,392] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 10:13:24,425] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:13:24,426] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 10:13:24,426] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 10:13:24,434] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 10:13:24,434] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:13:24,435] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:13:24,436] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 10:13:24,437] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 10:13:24,437] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 10:13:24,456] DEBUG | Loaded 9 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 10:13:24,456] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1562c67: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 10:13:24,467] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,468] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,480] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,483] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,494] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,495] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,496] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,496] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,497] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,497] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,497] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,498] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,498] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,498] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,500] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,501] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,501] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,501] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,501] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,502] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,502] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,502] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,502] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,503] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,504] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b6a561] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 10:13:24,507] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1d5b945] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 10:13:24,509] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@e3010] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 10:13:24,510] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1562c67: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.xiaohao.dubbodemo.service.IDubboDemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 10:13:24,511] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,511] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,515] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,535] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,536] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,536] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,538] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,541] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,542] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,542] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,545] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,553] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,553] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,554] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,588] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,674] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,690] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,710] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 10:13:24,710] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 10:13:24,711] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 10:13:24,715] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,718] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 10:13:24,718] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,719] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,720] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,720] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 10:13:24,720] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,721] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,721] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,721] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,722] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,722] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,722] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,725] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@95ef17] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 10:13:24,725] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,729] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 10:13:24,729] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 10:13:24,796] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,806] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,819] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,832] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 10:13:24,833] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 10:13:24,833] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=6968&registry=zookeeper&timestamp=1407118404736, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 10:13:24,838] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,849] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,869] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,890] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,905] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:24,944] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 10:13:24,985] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 10:13:24,989] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:25,002] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3388&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118039298 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4892&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118114216, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 10:13:25,014] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 10:13:25,014] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 10:13:25,020] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,020] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,020] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,020] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,021] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,021] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,021] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,021] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,022] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,022] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,022] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,022] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,023] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,023] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,023] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 10:13:25,024] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1c737be | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 10:13:25,027] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 10:13:25,035] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 10:13:25,035] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:13:25,035] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 10:13:25,036] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:13:25,038] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:13:25,138] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479ecab7a00000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 10:13:25,139] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:13:25,140] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:13:25,140] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:13:25,140] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 10:13:25,141] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 10:13:25,174] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,12884901890,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:13:25,202] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,12884901891,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:13:25,240] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,12884901892,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:13:25,277] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,12884901893,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6968%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407118404744,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6968%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407118404744  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:13:25,278] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 10:13:25,312] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,12884901894,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:13:25,349] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,12884901895,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:13:25,381] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,12884901896,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:13:25,389] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,12884901896,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:13:25,394] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,12884901896,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:13:25,394] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 10:13:25,405] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:25,417] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 10:13:25,429] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:13:25,429] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:13:25,430] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:13:25,430] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:13:25,432] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 10:13:25,433] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 10:13:25,434] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 10:13:25,435] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:13:25,435] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 10:13:25,436] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 10:13:25,436] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 10:13:25,437] INFO | Root WebApplicationContext: initialization completed in 1219 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 10:13:35,394] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:13:45,394] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:13:55,396] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:14:05,397] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:14:15,398] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:14:25,398] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:14:33,262] WARN | Session 0x2479ecab7a00000 for server xiaohao-PC/192.168.1.35:2182, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:25)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:202)
	at sun.nio.ch.IOUtil.read(IOUtil.java:169)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:243)
	at org.apache.zookeeper.ClientCnxn$SendThread.doIO(ClientCnxn.java:856)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1154)
[VAMS][2014-08-04 10:14:33,364] DEBUG | Received event: WatchedEvent state:Disconnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:14:33,364] INFO | zookeeper state changed (Disconnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:14:33,364] DEBUG | New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@a53564] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-04 10:14:33,364] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:14:33,364] DEBUG | Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@a53564] | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-04 10:14:33,364] DEBUG | Delivering event #1 done | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-04 10:14:33,451] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:14:33,452] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:14:33,455] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:14:33,459] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:14:33,644] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:14:33,645] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:14:33,645] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:14:33,646] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:14:34,048] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:14:35,059] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:14:35,059] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:14:35,060] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:14:35,350] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:14:35,350] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:14:35,351] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:14:35,354] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:14:35,798] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:14:35,799] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:14:35,799] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:14:35,801] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:14:36,233] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:14:37,242] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:14:37,242] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:14:37,243] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:14:37,532] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:14:37,532] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:14:37,533] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:14:37,538] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2183, sessionid = 0x2479ecab7a00000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 10:14:37,538] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:14:37,538] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:14:37,538] DEBUG | New event: ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@a53564] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-04 10:14:37,539] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:14:37,539] DEBUG | Delivering event #2 ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@a53564] | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-04 10:14:37,539] DEBUG | Delivering event #2 done | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-04 10:14:37,543] DEBUG | Reading reply sessionid:0x2479ecab7a00000, packet:: clientPath:null serverPath:null finished:false header:: -8,101  replyHeader:: -8,17179869184,0  request:: 12884901896,v{'/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators},v{},v{'/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators}  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 10:14:47,535] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:14:57,537] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:15:07,538] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:15:17,539] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:15:24,223] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:15:24,247] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-3] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 10:15:27,541] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:15:33,833] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 10:15:33,840] INFO |  [DUBBO] disconected from /192.168.1.35:51375,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-5] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 10:15:37,542] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:15:47,542] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:15:57,542] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:16:07,545] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:16:17,545] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:16:27,546] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:16:37,546] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:16:47,549] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:16:57,551] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 2ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:17:07,552] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:17:17,553] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:17:27,553] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:17:37,554] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:17:47,554] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:17:57,555] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:18:07,555] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:18:17,556] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:18:27,557] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:18:37,557] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:18:47,558] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:18:57,558] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:19:07,559] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:19:17,560] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:19:27,561] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:19:37,563] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:19:47,563] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:19:57,564] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:20:07,563] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:20:17,565] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:20:27,565] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:20:37,566] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:20:47,567] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:20:57,567] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:21:07,568] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:21:17,568] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:21:27,570] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:21:37,570] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:21:47,572] DEBUG | Got ping response for sessionid: 0x2479ecab7a00000 after 2ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 10:21:52,768] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:21:52,869] DEBUG | Received event: WatchedEvent state:Disconnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 10:21:52,869] INFO | zookeeper state changed (Disconnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 10:21:52,869] DEBUG | New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@a53564] | [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(88)
[VAMS][2014-08-04 10:21:52,869] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 10:21:52,869] DEBUG | Delivering event #3 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@a53564] | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(69)
[VAMS][2014-08-04 10:21:52,869] DEBUG | Delivering event #3 done | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(79)
[VAMS][2014-08-04 10:21:53,114] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:21:54,125] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:21:54,125] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:21:54,125] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:21:55,082] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:21:56,088] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:21:56,089] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:21:56,089] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:21:57,318] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:21:57,319] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:21:57,319] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:21:57,322] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:21:58,249] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:21:59,255] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:21:59,255] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:21:59,255] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:21:59,861] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:00,872] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:00,872] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:00,872] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:02,709] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:02,710] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:02,710] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:02,711] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:03,725] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:04,736] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:04,736] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:04,736] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:05,792] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:06,802] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:06,802] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:06,802] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:08,369] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:08,370] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:08,370] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:08,372] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:09,107] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:10,101] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:10,102] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:10,102] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:10,251] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:11,252] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:11,252] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:11,253] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:12,389] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:12,390] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:12,390] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:12,392] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:13,095] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:14,106] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:14,106] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:14,106] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:15,031] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:16,042] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:16,042] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:16,042] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:18,066] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:18,067] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:18,067] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:18,069] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:18,747] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:19,756] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:19,756] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:19,756] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:20,661] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:21,672] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:21,672] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:21,673] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:22,955] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:22,956] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:22,956] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:22,959] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:23,818] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:24,828] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:24,828] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:24,828] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:25,101] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:26,121] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:26,121] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:26,121] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:28,204] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:28,204] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:28,205] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:28,206] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:29,070] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:30,101] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:30,101] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:30,101] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:30,985] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:31,996] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:31,996] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:31,996] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:33,636] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:33,637] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:33,637] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:33,641] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:34,723] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:35,733] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:35,733] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:35,733] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:36,599] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:37,600] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:37,601] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:37,601] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:38,868] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:38,869] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:38,870] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:38,871] WARN | Session 0x2479ecab7a00000 for server xiaohao-PC/192.168.1.35:2183, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:25)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:202)
	at sun.nio.ch.IOUtil.read(IOUtil.java:169)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:243)
	at org.apache.zookeeper.ClientCnxn$SendThread.doIO(ClientCnxn.java:856)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1154)
[VAMS][2014-08-04 10:22:39,413] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:40,423] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:40,423] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:40,423] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:40,641] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:41,652] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:41,652] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:41,652] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:42,845] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:42,847] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:42,847] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:42,849] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:43,158] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:44,169] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:44,169] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:44,169] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:44,392] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:45,402] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:45,402] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:45,402] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:47,231] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:47,231] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:47,232] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:47,233] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:47,356] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:48,367] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:48,367] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:48,367] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:48,503] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:49,514] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:49,514] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:49,514] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:51,548] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:51,549] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:51,549] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:51,552] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:51,915] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:52,925] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:52,925] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:52,925] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:53,317] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:54,330] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:54,330] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:54,330] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:55,716] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:55,716] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:55,717] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:55,718] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:22:55,914] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:56,935] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:56,935] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:56,935] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:57,050] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:58,060] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:22:58,060] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:58,060] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:22:59,664] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:22:59,664] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:22:59,665] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:22:59,666] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:00,336] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:01,341] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:01,341] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:01,341] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:02,403] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:03,419] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:03,419] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:03,419] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:05,368] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:05,369] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:05,369] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:05,371] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:05,786] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:06,796] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:06,796] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:06,796] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:06,983] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:07,984] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:07,985] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:07,985] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:09,865] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:09,866] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:09,867] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:09,869] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:10,314] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:11,331] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:11,331] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:11,331] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:12,352] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:13,371] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:13,371] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:13,371] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:15,212] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:15,213] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:15,214] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:15,216] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:15,607] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:16,617] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:16,617] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:16,617] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:17,564] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:18,575] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:18,575] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:18,575] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:19,974] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:19,975] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:19,976] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:19,979] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:20,729] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:21,740] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:21,740] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:21,740] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:22,044] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:23,055] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:23,055] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:23,055] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:24,251] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:24,252] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:24,252] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:24,255] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:24,689] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:25,701] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:25,701] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:25,701] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:26,134] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:27,145] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:27,145] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:27,145] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:28,333] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:28,334] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:28,334] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:28,337] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:29,382] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:30,393] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:30,393] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:30,393] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:31,413] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:32,423] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:32,423] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:32,423] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:34,365] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:34,365] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:34,366] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:34,368] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:34,928] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:35,938] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:35,938] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:35,938] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:36,199] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:37,200] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:37,200] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:37,201] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:38,564] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:38,566] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:38,566] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:38,568] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:39,407] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:40,418] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:40,418] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:40,418] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:41,087] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:42,099] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:42,099] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:42,099] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:43,526] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:43,527] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:43,527] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:43,529] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:44,124] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:45,130] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:45,131] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:45,131] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:45,745] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:46,757] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:46,757] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:46,757] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:48,839] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:48,840] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:48,840] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:48,844] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:49,286] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:50,287] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:50,287] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:50,287] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:50,923] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:51,939] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:51,939] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:51,939] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:53,569] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:53,570] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:53,570] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:53,572] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:54,214] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:55,215] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:55,216] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:55,216] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:56,027] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:57,038] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:23:57,038] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:57,038] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:23:59,106] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:23:59,107] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:23:59,107] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:23:59,110] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:23:59,749] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:00,760] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:00,760] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:00,760] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:01,576] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:02,580] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:02,580] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:02,580] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:04,370] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:04,370] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:04,371] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:04,372] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:05,143] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:06,154] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:06,154] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:06,154] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:06,454] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:07,456] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:07,456] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:07,457] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:08,879] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:08,881] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:08,881] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:08,882] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:09,081] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:10,091] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:10,091] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:10,091] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:10,380] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:11,389] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:11,389] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:11,389] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:13,466] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:13,467] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:13,467] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:13,470] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:13,917] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:14,924] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:14,924] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:14,924] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:15,385] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:16,398] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:16,398] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:16,398] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:18,283] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:18,284] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:18,284] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:18,286] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:18,806] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:19,816] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:19,816] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:19,816] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:20,247] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:21,257] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:21,257] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:21,257] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:22,868] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:22,869] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:22,869] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:22,872] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:23,493] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:24,503] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:24,503] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:24,503] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:25,173] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:26,177] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:26,177] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:26,178] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:27,324] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:27,325] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:27,325] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:27,327] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:28,058] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:29,060] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:29,060] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:29,060] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:30,077] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:31,078] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:31,078] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:31,079] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:32,202] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:32,202] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:32,203] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:32,204] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:33,154] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:34,182] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:34,182] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:34,182] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:35,142] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:36,143] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:36,143] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:36,143] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:37,811] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:37,812] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:37,812] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:37,814] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:38,393] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:39,403] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:39,403] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:39,403] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:39,804] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:40,814] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:40,814] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:40,814] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:42,118] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:42,119] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:42,119] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:42,121] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:43,058] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:44,068] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:44,068] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:44,068] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:44,589] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:45,599] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:45,599] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:45,599] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:47,459] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:47,460] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:47,460] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:47,461] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:48,252] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:49,263] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:49,263] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:49,263] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:50,119] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:51,121] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:51,121] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:51,121] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:53,177] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:53,178] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:53,179] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:53,181] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:53,406] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:54,412] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:54,412] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:54,413] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:55,077] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:56,092] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:56,092] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:56,092] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:57,947] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:57,948] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:24:57,948] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:24:57,950] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:24:58,894] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:24:59,912] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:24:59,912] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:24:59,912] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:00,062] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:01,079] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:01,079] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:01,079] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:02,976] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:02,977] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:02,977] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:02,978] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:03,675] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:04,675] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:04,675] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:04,675] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:04,897] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:05,902] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:05,902] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:05,902] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:07,789] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:07,790] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:07,790] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:07,791] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:08,589] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:09,601] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:09,601] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:09,601] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:09,709] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:10,711] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:10,711] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:10,712] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:12,052] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:12,053] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:12,053] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:12,055] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:12,472] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:13,491] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:13,491] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:13,491] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:14,471] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:15,482] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:15,482] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:15,482] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:17,442] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:17,443] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:17,444] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:17,447] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:17,793] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:18,804] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:18,804] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:18,804] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:19,585] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:20,598] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:20,598] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:20,599] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:22,330] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:22,331] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:22,331] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:22,333] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:22,722] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:23,739] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:23,739] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:23,740] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:23,965] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:24,974] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:24,974] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:24,974] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:26,215] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:26,215] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:26,216] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:26,217] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:26,493] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:27,507] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:27,507] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:27,507] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:27,897] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:28,912] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:28,912] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:28,912] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:30,809] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:30,810] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:30,810] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:30,813] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:31,601] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:32,611] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:32,611] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:32,611] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:32,804] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:33,804] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:33,805] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:33,805] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:35,773] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:35,773] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:35,774] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:35,775] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:35,978] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:36,974] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:36,975] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:36,975] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:37,478] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:38,489] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:38,489] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:38,489] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:40,515] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:40,515] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:40,516] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:40,517] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:40,906] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:41,916] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:41,916] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:41,916] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:42,646] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:43,657] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:43,657] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:43,657] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:45,242] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:45,242] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:45,243] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:45,244] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:45,757] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:46,767] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:46,767] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:46,767] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:47,158] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:48,158] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:48,158] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:48,159] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:49,740] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:49,741] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:49,741] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:49,742] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:50,339] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:51,340] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:51,340] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:51,341] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:52,010] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:53,017] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:53,017] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:53,017] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:54,631] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:54,633] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:25:54,633] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:25:54,637] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:25:55,712] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:56,715] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:56,715] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:56,715] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:57,479] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:25:58,489] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:25:58,489] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:25:58,489] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:00,587] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:00,588] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:00,588] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:00,589] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:00,759] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:01,763] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:01,763] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:01,763] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:02,620] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:03,628] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:03,628] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:03,628] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:05,546] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:05,546] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:05,547] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:05,549] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:06,387] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:07,397] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:07,397] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:07,397] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:07,949] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:08,949] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:08,949] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:08,949] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:10,593] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:10,593] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:10,594] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:10,596] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:11,411] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:12,422] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:12,422] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:12,422] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:13,036] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:14,046] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:14,046] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:14,046] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:15,589] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:15,590] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:15,590] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:15,591] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:15,749] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:16,763] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:16,763] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:16,763] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:17,231] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:18,241] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:18,241] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:18,241] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:19,654] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:19,655] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:19,655] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:19,657] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:20,493] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:21,513] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:21,513] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:21,513] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:22,455] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:23,465] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:23,465] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:23,465] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:25,432] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:25,433] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:25,433] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:25,447] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:26,408] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:27,418] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:27,418] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:27,418] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:27,854] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:28,870] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:28,870] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:28,870] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:30,557] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:30,558] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:30,558] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:30,561] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:31,519] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:32,529] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:32,529] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:32,530] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:33,055] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:34,072] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:34,072] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:34,072] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:35,770] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:35,771] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:35,771] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:35,774] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:35,879] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:36,890] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:36,890] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:36,890] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:37,315] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:38,334] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:38,334] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:38,334] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:40,145] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:40,145] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:40,146] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:40,147] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:40,798] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:41,809] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:41,809] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:41,809] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:42,757] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:43,768] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:43,769] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:43,769] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:45,434] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:45,434] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:45,435] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:45,436] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:46,171] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:47,181] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:47,181] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:47,181] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:47,677] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:48,683] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:48,683] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:48,683] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:50,594] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:50,595] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:50,595] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:50,596] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:51,609] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:52,619] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:52,619] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:52,619] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:52,955] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:53,965] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:53,965] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:53,965] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:56,052] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:56,053] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:26:56,053] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:26:56,055] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:26:56,690] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:57,700] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:57,700] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:57,700] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:58,119] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:26:59,120] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:26:59,120] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:26:59,120] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:00,977] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:27:00,978] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:27:00,978] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:27:00,980] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:27:01,192] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:27:02,198] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:27:02,198] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:02,198] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:02,592] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:27:03,602] WARN | Session 0x2479ecab7a00000 for server null, unexpected error, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.run(1185)
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1143)
[VAMS][2014-08-04 10:27:03,602] DEBUG | Ignoring exception during shutdown input | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1232)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:631)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:360)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1229)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:03,602] DEBUG | Ignoring exception during shutdown output | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.cleanup(1239)
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:642)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:368)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1236)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1194)
[VAMS][2014-08-04 10:27:05,679] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 10:27:05,680] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 10:27:05,680] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 10:27:05,682] INFO | Unable to read additional data from server sessionid 0x2479ecab7a00000, likely server has closed socket, closing socket connection and attempting reconnect | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.run(1183)
[VAMS][2014-08-04 10:27:05,912] INFO | Opening socket connection to server xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 14:43:33,447] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 14:43:33,490] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:43:33,491] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:43:33,493] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:43:33,493] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:43:33,495] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:43:33,495] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 14:43:33,498] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 14:43:33,501] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 14:43:33 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 14:43:33,520] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:43:33,521] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:43:33,521] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 14:43:33,525] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 14:43:33,528] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 14:43:33,545] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 14:43:33,548] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 14:43:33,551] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:43:33,573] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:43:33,588] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:43:33,590] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:43:33,596] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 14:43:33,605] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 14:43:33,609] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 14:43:33,675] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:43:33,676] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:43:33,677] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 14:43:33,684] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 14:43:33,685] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 14:43:33,687] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 14:43:33,687] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 14:43:33,689] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 14:43:33,689] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHasseinDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHasseinDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 14:43:33,711] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 14:43:33,711] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hassein,demoService,rmiDemoService,hasseinDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHasseinDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 14:43:33,721] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,721] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,731] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,734] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,747] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,748] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,748] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,751] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,751] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,751] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,752] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,752] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,752] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,753] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,754] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,755] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,755] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,755] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,756] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,756] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,756] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,756] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,756] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,757] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,758] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6bbe7] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 14:43:33,759] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15872f5] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 14:43:33,760] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@13a3d36] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 14:43:33,762] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hassein,demoService,rmiDemoService,hasseinDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHasseinDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 14:43:33,762] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,762] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,765] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,782] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,784] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,784] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,786] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,789] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,790] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,790] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,792] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,800] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,800] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,801] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,802] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,802] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,803] DEBUG | Creating shared instance of singleton bean 'hassein' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,803] DEBUG | Creating instance of bean 'hassein' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,804] DEBUG | Eagerly caching bean 'hassein' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,805] DEBUG | Finished creating instance of bean 'hassein' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,805] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,805] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,806] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,807] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,807] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,808] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,808] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,810] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,810] DEBUG | Creating shared instance of singleton bean 'hasseinDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,810] DEBUG | Creating instance of bean 'hasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,811] DEBUG | Eagerly caching bean 'hasseinDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,815] DEBUG | Finished creating instance of bean 'hasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,815] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,816] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,820] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:33,910] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:33,925] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,938] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,939] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,940] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 14:43:33,941] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,941] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,942] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,942] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,942] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,947] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,948] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,948] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,948] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 14:43:33,949] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,950] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,950] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,950] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:43:33,951] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:43:33,952] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:43:33,953] DEBUG | Returning cached instance of singleton bean 'hasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,953] DEBUG | Returning cached instance of singleton bean 'hassein' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,954] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 14:43:33,955] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,956] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,956] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:43:33,957] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,957] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,957] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,958] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,958] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,958] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,959] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5b55a9] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 14:43:33,959] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,961] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,961] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,962] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:43:33,962] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 14:43:34,021] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,033] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,048] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,059] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 14:43:34,059] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134613979, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 14:43:34,060] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134613979 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=2888&registry=zookeeper&timestamp=1407134613969, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 14:43:34,066] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,076] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,099] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,114] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,130] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,161] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 14:43:34,201] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 14:43:34,206] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,220] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6968&revision=1.0-SNAPSHOT&side=provider&timestamp=1407118404744 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407118521150, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 14:43:34,230] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 14:43:34,230] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 14:43:34,236] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,237] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,237] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,237] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,238] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,238] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,238] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,238] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,239] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,239] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,239] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,239] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,240] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,240] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,240] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:43:34,241] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1c3e3fb | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 14:43:34,244] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 14:43:34,255] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 14:43:34,255] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 14:43:34,255] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 14:43:34,256] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 14:43:34,315] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 14:43:34,353] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0000, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 14:43:34,354] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 14:43:34,355] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 14:43:34,355] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 14:43:34,355] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 14:43:34,357] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134613979, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 14:43:34,403] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836485,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:34,435] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836486,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:34,467] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836487,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:34,492] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836488,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2888%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134613979,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2888%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134613979  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:34,493] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134613979, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 14:43:34,513] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836489,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:34,536] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836490,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:34,575] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836491,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:34,581] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836491,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:34,590] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836491,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:34,590] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134613979, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134613979], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 14:43:34,600] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,608] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:43:34,615] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 14:43:34,632] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 14:43:34,632] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134614623, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 14:43:34,632] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134614623 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=2888&registry=zookeeper&timestamp=1407134614620, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 14:43:34,640] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 14:43:35,657] DEBUG | RMI registry access threw exception | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(404)
java.rmi.ConnectException: Connection refused to host: 192.168.1.35; nested exception is: 
	java.net.ConnectException: Connection refused: connect
	at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:601)
	at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
	at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
	at sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
	at sun.rmi.registry.RegistryImpl_Stub.list(Unknown Source)
	at org.springframework.remoting.rmi.RmiServiceExporter.testRegistry(RmiServiceExporter.java:421)
	at org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(RmiServiceExporter.java:400)
	at org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(RmiServiceExporter.java:378)
	at org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(RmiServiceExporter.java:337)
	at org.springframework.remoting.rmi.RmiServiceExporter.prepare(RmiServiceExporter.java:268)
	at org.springframework.remoting.rmi.RmiServiceExporter.afterPropertiesSet(RmiServiceExporter.java:230)
	at com.alibaba.dubbo.rpc.protocol.rmi.RmiProtocol.doExport(RmiProtocol.java:54)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol.export(AbstractProxyProtocol.java:69)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:189)
	at sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
	at sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
	at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
	... 79 more
[VAMS][2014-08-04 14:43:35,662] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 14:43:35,673] DEBUG | RMI service [com.alibaba.dubbo.common.bytecode.proxy0@124d504] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiBasedExporter.getObjectToExport(59)
[VAMS][2014-08-04 14:43:35,685] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@124d504] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 14:43:35,687] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 14:43:35,693] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134614623, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 14:43:35,742] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836492,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:35,767] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836493,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:35,804] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836494,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:35,841] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474836495,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D2888%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134614623,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D2888%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134614623  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:35,842] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134614623, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 14:43:35,888] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474836496,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:35,955] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836497,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:36,026] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836498,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:36,028] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474836498,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:36,033] DEBUG | Reading reply sessionid:0x2479fbe4cae0000, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474836498,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:43:36,035] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134614623, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134614623], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 14:43:36,036] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHasseinDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 14:43:36,065] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
java.lang.IllegalStateException: No such extension com.alibaba.dubbo.rpc.Protocol by name hassein, possible causes: 
(1) com.alibaba.dubbo.rpc.protocol.http.HttpProtocol:
java.lang.IllegalStateException: Failed to load extension class(interface: interface com.alibaba.dubbo.rpc.Protocol, class line: com.alibaba.dubbo.rpc.protocol.http.HttpProtocol) in jar:file:/D:/dev/repo/com/alibaba/dubbo/2.5.3/dubbo-2.5.3.jar!/META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Protocol, cause: org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor
java.lang.IllegalStateException: Failed to load extension class(interface: interface com.alibaba.dubbo.rpc.Protocol, class line: com.alibaba.dubbo.rpc.protocol.http.HttpProtocol) in jar:file:/D:/dev/repo/com/alibaba/dubbo/2.5.3/dubbo-2.5.3.jar!/META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Protocol, cause: org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadFile(ExtensionLoader.java:685)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadExtensionClasses(ExtensionLoader.java:591)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtensionClasses(ExtensionLoader.java:567)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtensionClass(ExtensionLoader.java:555)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.hasExtension(ExtensionLoader.java:343)
	at com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.parse(DubboBeanDefinitionParser.java:194)
	at com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.parse(DubboBeanDefinitionParser.java:77)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1424)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1414)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:187)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:141)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:110)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:508)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:335)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:540)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NoClassDefFoundError: org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:247)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadFile(ExtensionLoader.java:627)
	... 74 more
Caused by: java.lang.ClassNotFoundException: org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:375)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
	... 77 more

(2) memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol:
java.lang.IllegalStateException: Failed to load extension class(interface: interface com.alibaba.dubbo.rpc.Protocol, class line: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol) in jar:file:/D:/dev/repo/com/alibaba/dubbo/2.5.3/dubbo-2.5.3.jar!/META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Protocol, cause: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol
java.lang.IllegalStateException: Failed to load extension class(interface: interface com.alibaba.dubbo.rpc.Protocol, class line: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol) in jar:file:/D:/dev/repo/com/alibaba/dubbo/2.5.3/dubbo-2.5.3.jar!/META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Protocol, cause: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadFile(ExtensionLoader.java:685)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadExtensionClasses(ExtensionLoader.java:591)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtensionClasses(ExtensionLoader.java:567)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtensionClass(ExtensionLoader.java:555)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.hasExtension(ExtensionLoader.java:343)
	at com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.parse(DubboBeanDefinitionParser.java:194)
	at com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.parse(DubboBeanDefinitionParser.java:77)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1424)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1414)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:187)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:141)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:110)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:508)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:335)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:540)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.ClassNotFoundException: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:375)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:247)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadFile(ExtensionLoader.java:627)
	... 74 more

	at com.alibaba.dubbo.common.extension.ExtensionLoader.findException(ExtensionLoader.java:494)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:501)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:319)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:333)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
[VAMS][2014-08-04 14:43:46,033] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0000 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 14:43:56,034] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0000 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 14:44:06,036] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0000 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 14:44:16,037] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0000 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 14:44:26,037] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0000 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 14:44:36,038] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0000 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 14:48:55,077] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 14:48:55,152] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:48:55,152] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:48:55,157] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:48:55,158] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:48:55,159] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:48:55,160] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 14:48:55,166] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 14:48:55,167] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 14:48:55 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 14:48:55,198] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:48:55,199] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:48:55,199] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 14:48:55,206] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 14:48:55,208] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 14:48:55,225] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 14:48:55,229] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 14:48:55,234] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:48:55,255] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:48:55,271] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:48:55,273] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:48:55,279] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 14:48:55,294] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 14:48:55,301] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 14:48:55,387] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:48:55,387] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:48:55,388] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 14:48:55,397] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 14:48:55,397] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 14:48:55,398] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 14:48:55,399] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/provider/WEB-INF/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 14:48:55,400] DEBUG | Looking for matching resources in jar file [file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 14:48:55,401] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboHasseinDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\provider\WEB-INF\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHasseinDemoService.class], URL [jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 14:48:55,431] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 14:48:55,431] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@9a44f1: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hassein,demoService,rmiDemoService,hasseinDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHasseinDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 14:48:55,522] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,522] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,538] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,541] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,558] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,558] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,560] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,560] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,560] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,560] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,561] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,561] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,562] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,562] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,564] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,564] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,564] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,565] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,565] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,565] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,566] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,566] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,567] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,567] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,569] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@633b88] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 14:48:55,571] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1f44aa6] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 14:48:55,573] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@bcfa38] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 14:48:55,575] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@9a44f1: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hassein,demoService,rmiDemoService,hasseinDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHasseinDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 14:48:55,576] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,576] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,581] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,605] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,606] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,606] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,607] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,613] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,614] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,614] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,616] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,626] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,626] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,626] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,628] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,629] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,629] DEBUG | Creating shared instance of singleton bean 'hassein' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,629] DEBUG | Creating instance of bean 'hassein' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,630] DEBUG | Eagerly caching bean 'hassein' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,631] DEBUG | Finished creating instance of bean 'hassein' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,631] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,631] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,631] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,633] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,633] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,633] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,634] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,635] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,635] DEBUG | Creating shared instance of singleton bean 'hasseinDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,636] DEBUG | Creating instance of bean 'hasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,636] DEBUG | Eagerly caching bean 'hasseinDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,637] DEBUG | Finished creating instance of bean 'hasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,637] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,637] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,641] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:55,747] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:55,761] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,773] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,773] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,775] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 14:48:55,776] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,776] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,777] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,778] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,778] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,781] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,781] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,782] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,783] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 14:48:55,783] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,784] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,784] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,785] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:48:55,785] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:48:55,787] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:48:55,787] DEBUG | Returning cached instance of singleton bean 'hasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,788] DEBUG | Returning cached instance of singleton bean 'hassein' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,788] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 14:48:55,789] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,789] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,789] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:48:55,789] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,790] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,790] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,790] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,790] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,790] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,792] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@76fb1b] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 14:48:55,792] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,796] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,796] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,796] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:55,797] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 14:48:55,863] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:55,872] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:55,882] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:55,890] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 14:48:55,890] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134935814, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 14:48:55,890] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134935814 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=2504&registry=zookeeper&timestamp=1407134935806, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 14:48:55,896] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:55,910] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:55,930] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:55,947] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:55,958] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:56,005] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 14:48:56,064] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 14:48:56,070] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:56,080] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134614623, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2888&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134613979, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 14:48:56,093] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 14:48:56,093] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-22-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 14:48:56,100] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,100] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,101] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,101] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,101] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,101] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,102] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,102] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,102] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,102] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,102] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,103] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,103] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,103] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,103] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 14:48:56,105] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@985016 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 14:48:56,107] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 14:48:56,117] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 14:48:56,117] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 14:48:56,118] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 14:48:56,119] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 14:48:56,121] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 14:48:56,164] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0001, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 14:48:56,168] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 14:48:56,169] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 14:48:56,169] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 14:48:56,169] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 14:48:56,173] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134935814, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 14:48:56,222] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836501,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:56,264] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836502,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:56,300] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836503,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:56,338] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836504,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2504%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134935814,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2504%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134935814  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:56,339] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134935814, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 14:48:56,375] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836505,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:56,426] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836506,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:56,549] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836507,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:56,558] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836507,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:56,565] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836507,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:56,566] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134935814, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134935814], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 14:48:56,581] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:56,594] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:48:56,608] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 14:48:56,632] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 14:48:56,633] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134936620, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 14:48:56,633] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134936620 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=2504&registry=zookeeper&timestamp=1407134936618, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 14:48:56,643] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 14:48:57,652] DEBUG | RMI registry access threw exception | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(404)
java.rmi.ConnectException: Connection refused to host: 192.168.1.35; nested exception is: 
	java.net.ConnectException: Connection refused: connect
	at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:601)
	at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
	at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
	at sun.rmi.server.UnicastRef.newCall(UnicastRef.java:322)
	at sun.rmi.registry.RegistryImpl_Stub.list(Unknown Source)
	at org.springframework.remoting.rmi.RmiServiceExporter.testRegistry(RmiServiceExporter.java:421)
	at org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(RmiServiceExporter.java:400)
	at org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(RmiServiceExporter.java:378)
	at org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(RmiServiceExporter.java:337)
	at org.springframework.remoting.rmi.RmiServiceExporter.prepare(RmiServiceExporter.java:268)
	at org.springframework.remoting.rmi.RmiServiceExporter.afterPropertiesSet(RmiServiceExporter.java:230)
	at com.alibaba.dubbo.rpc.protocol.rmi.RmiProtocol.doExport(RmiProtocol.java:54)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol.export(AbstractProxyProtocol.java:69)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:189)
	at sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
	at sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
	at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
	... 68 more
[VAMS][2014-08-04 14:48:57,657] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 14:48:57,668] DEBUG | RMI service [com.alibaba.dubbo.common.bytecode.proxy0@1046822] is an RMI invoker | [main] org.springframework.remoting.rmi.RmiBasedExporter.getObjectToExport(59)
[VAMS][2014-08-04 14:48:57,686] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@1046822] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 14:48:57,687] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 14:48:57,694] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134936620, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 14:48:57,740] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836508,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,777] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836509,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,808] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836510,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,845] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474836511,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D2504%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134936620,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D2504%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134936620  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,845] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134936620, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 14:48:57,866] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474836512,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,906] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836513,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,943] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836514,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,946] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474836514,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,948] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474836514,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,948] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134936620, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134936620], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 14:48:57,949] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHasseinDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 14:48:57,961] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
java.lang.IllegalStateException: No such extension com.alibaba.dubbo.rpc.Protocol by name hassein, possible causes: 
(1) com.alibaba.dubbo.rpc.protocol.http.HttpProtocol:
java.lang.IllegalStateException: Failed to load extension class(interface: interface com.alibaba.dubbo.rpc.Protocol, class line: com.alibaba.dubbo.rpc.protocol.http.HttpProtocol) in jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/dubbo-2.5.3.jar!/META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Protocol, cause: org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor
java.lang.IllegalStateException: Failed to load extension class(interface: interface com.alibaba.dubbo.rpc.Protocol, class line: com.alibaba.dubbo.rpc.protocol.http.HttpProtocol) in jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/dubbo-2.5.3.jar!/META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Protocol, cause: org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadFile(ExtensionLoader.java:685)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadExtensionClasses(ExtensionLoader.java:591)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtensionClasses(ExtensionLoader.java:567)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtensionClass(ExtensionLoader.java:555)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.hasExtension(ExtensionLoader.java:343)
	at com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.parse(DubboBeanDefinitionParser.java:194)
	at com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.parse(DubboBeanDefinitionParser.java:77)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1424)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1414)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:187)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:141)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:110)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:508)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:335)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:540)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NoClassDefFoundError: org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:247)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadFile(ExtensionLoader.java:627)
	... 63 more
Caused by: java.lang.ClassNotFoundException: org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1680)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)
	... 66 more

(2) memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol:
java.lang.IllegalStateException: Failed to load extension class(interface: interface com.alibaba.dubbo.rpc.Protocol, class line: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol) in jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/dubbo-2.5.3.jar!/META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Protocol, cause: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol
java.lang.IllegalStateException: Failed to load extension class(interface: interface com.alibaba.dubbo.rpc.Protocol, class line: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol) in jar:file:/F:/myCode/dubbodemo/provider/target/provider/WEB-INF/lib/dubbo-2.5.3.jar!/META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Protocol, cause: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadFile(ExtensionLoader.java:685)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadExtensionClasses(ExtensionLoader.java:591)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtensionClasses(ExtensionLoader.java:567)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtensionClass(ExtensionLoader.java:555)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.hasExtension(ExtensionLoader.java:343)
	at com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.parse(DubboBeanDefinitionParser.java:194)
	at com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.parse(DubboBeanDefinitionParser.java:77)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1424)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1414)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:187)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:141)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:110)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:508)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:335)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:540)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.ClassNotFoundException: memcom.alibaba.dubbo.rpc.protocol.memcached.MemcachedProtocol
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1680)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:247)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.loadFile(ExtensionLoader.java:627)
	... 63 more

	at com.alibaba.dubbo.common.extension.ExtensionLoader.findException(ExtensionLoader.java:494)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:501)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:319)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:333)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.startContainer(AbstractRunMojo.java:997)
	at org.apache.tomcat.maven.plugin.tomcat6.AbstractRunMojo.execute(AbstractRunMojo.java:512)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
[VAMS][2014-08-04 14:48:57,969] INFO | Closing Root WebApplicationContext: startup date [Mon Aug 04 14:48:55 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.doClose(873)
[VAMS][2014-08-04 14:48:57,971] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:57,971] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:57,972] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:57,972] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:48:57,973] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@9a44f1: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hassein,demoService,rmiDemoService,hasseinDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHasseinDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 14:48:57,973] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 14:48:57,973] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 14:48:57,974] INFO | Unbinding RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' from registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.destroy(431)
[VAMS][2014-08-04 14:48:57,974] INFO |  [DUBBO] Unregister: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134936620, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 14:48:57,992] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 19,2  replyHeader:: 19,21474836515,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D2504%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134936620,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:57,993] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134936620, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 14:48:57,994] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 14:48:57,994] INFO |  [DUBBO] Unregister: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134935814, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 14:48:58,023] DEBUG | Reading reply sessionid:0x2479fbe4cae0001, packet:: clientPath:null serverPath:null finished:false header:: 20,2  replyHeader:: 20,21474836516,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D2504%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407134935814,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 14:48:58,023] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134935814, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 14:57:39,390] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 14:57:39,439] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:57:39,439] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:57:39,442] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:57:39,442] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:57:39,443] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:57:39,444] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 14:57:39,447] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 14:57:39,450] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 14:57:39 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 14:57:39,469] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:57:39,470] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:57:39,470] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 14:57:39,474] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 14:57:39,477] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 14:57:39,495] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 14:57:39,499] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 14:57:39,500] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:57:39,524] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:57:39,538] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:57:39,541] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 14:57:39,546] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 14:57:39,555] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 14:57:39,558] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 14:57:39,620] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:57:39,621] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 14:57:39,621] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 14:57:39,628] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 14:57:39,629] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 14:57:39,630] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 14:57:39,631] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 14:57:39,632] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 14:57:39,633] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHasseinDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHasseinDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 14:57:39,657] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 14:57:39,657] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHasseinDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 14:57:39,667] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,667] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,678] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,680] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,696] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,696] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,697] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,700] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,700] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,701] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,701] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,702] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,702] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,702] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,704] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,704] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,704] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,705] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,705] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,705] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,705] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,706] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,706] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,706] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,707] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6bbe7] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 14:57:39,709] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15872f5] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 14:57:39,711] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@13a3d36] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 14:57:39,713] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHasseinDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 14:57:39,714] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,714] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,717] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,738] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,739] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,740] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,742] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,747] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,748] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,748] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,750] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,758] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,759] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,759] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,761] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,761] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,762] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,762] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,764] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,764] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,765] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,765] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,765] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,766] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,767] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,767] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,767] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,768] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,769] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,769] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,769] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,772] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,772] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,773] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,776] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:57:39,861] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 14:57:39,878] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,891] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:57:39,892] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:57:39,894] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 14:57:39,895] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:57:39,896] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:57:39,896] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,897] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,897] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,902] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,902] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:57:39,903] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:57:39,904] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 14:57:39,904] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:57:39,905] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 14:57:39,905] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 14:57:39,905] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 14:57:39,906] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 14:57:39,908] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 14:57:39,909] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHasseinDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 14:57:39,909] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 14:57:39,910] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 14:57:39,911] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.xiaohao.dubbodemo.service.IDubboHasseinDemoService': Cannot resolve reference to bean 'hasseinDemoService' while setting bean property 'ref'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'hasseinDemoService' is defined
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:336)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'hasseinDemoService' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:641)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1157)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:280)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	... 62 more
[VAMS][2014-08-04 15:02:18,332] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:02:18,387] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:02:18,388] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:02:18,390] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:02:18,391] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:02:18,392] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:02:18,392] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:02:18,396] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:02:18,399] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:02:18 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:02:18,419] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:02:18,420] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:02:18,420] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:02:18,426] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:02:18,430] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:02:18,453] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:02:18,457] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:02:18,461] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:02:18,484] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:02:18,499] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:02:18,501] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:02:18,506] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:02:18,514] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:02:18,518] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:02:18,595] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:02:18,595] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:02:18,596] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:02:18,604] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:02:18,605] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:02:18,606] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:02:18,606] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:02:18,607] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:02:18,608] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:02:18,632] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:02:18,632] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:02:18,644] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,644] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,655] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,657] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,669] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,670] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,671] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,673] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,674] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,674] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,675] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,675] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,675] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,675] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,677] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,678] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,678] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,679] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,679] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,679] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,680] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,680] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,680] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,680] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,682] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6bbe7] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:02:18,684] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15872f5] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:02:18,685] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@13a3d36] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:02:18,686] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:02:18,687] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,687] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,691] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,708] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,710] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,710] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,712] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,716] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,717] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,717] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,719] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,727] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,727] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,727] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,729] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,729] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,730] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,730] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,731] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,732] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,732] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,732] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,733] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,734] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,734] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,734] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,735] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,736] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,736] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,736] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,737] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,740] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,741] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,741] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,745] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:18,843] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:18,860] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,880] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,882] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,886] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:02:18,888] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,889] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,890] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,890] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,891] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,900] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,902] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,902] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,903] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:02:18,904] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,905] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,905] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,906] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:02:18,906] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:02:18,909] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:02:18,910] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,910] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,911] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:02:18,912] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,913] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,914] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:02:18,915] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,915] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,915] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,915] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,915] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,916] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,917] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5b55a9] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:02:18,917] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,919] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,919] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,919] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:02:18,920] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:02:19,003] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,018] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,038] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,054] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:02:19,055] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:02:19,055] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=8156&registry=zookeeper&timestamp=1407135738926, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:02:19,061] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,077] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,107] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,126] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,147] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,186] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:02:19,230] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:02:19,236] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,253] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134936620, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2504&revision=1.0-SNAPSHOT&side=provider&timestamp=1407134935814, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:02:19,262] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:02:19,262] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:02:19,269] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,270] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,270] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,270] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,270] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,271] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,271] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,271] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,272] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,272] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,272] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,273] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,273] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,273] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,273] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:02:19,274] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1c3e3fb | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:02:19,277] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:02:19,286] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:02:19,287] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:02:19,286] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:02:19,289] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:02:19,355] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:02:19,375] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0002, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:02:19,376] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:02:19,377] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:02:19,377] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:02:19,377] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:02:19,378] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:02:19,404] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836572,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:19,442] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836573,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:19,478] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836574,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:19,515] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836575,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135738939,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135738939  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:19,516] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:02:19,549] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836576,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:19,585] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836577,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:19,621] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836578,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:19,705] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836578,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:19,717] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836578,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:19,718] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:02:19,731] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,742] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:19,752] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:02:19,768] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:02:19,768] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:02:19,769] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=8156&registry=zookeeper&timestamp=1407135739757, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:02:19,778] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:02:20,795] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:02:20,808] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@1781288] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:02:20,809] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:02:20,816] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:02:20,845] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836579,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:20,881] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836580,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:20,917] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836581,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:20,942] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474836582,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135739758,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135739758  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:20,942] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:02:20,978] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474836583,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,010] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836584,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,035] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836585,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,036] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474836585,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,037] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474836585,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,037] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:02:21,038] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:02:21,051] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:02:21,069] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:02:21,070] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:02:21,070] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=8156&registry=zookeeper&timestamp=1407135741047, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:02:21,138] INFO |  [DUBBO] Register: hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:02:21,163] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474836586,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,176] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836587,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,208] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836588,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,246] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836590,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135741060,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8156%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407135741060  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,247] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:02:21,294] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836592,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,342] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836594,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,386] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836595,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,388] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474836595,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,391] DEBUG | Reading reply sessionid:0x2479fbe4cae0002, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474836595,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:02:21,391] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060, urls: [empty://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:02:21,395] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:02:21,395] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:02:21,397] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:02:21,398] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:02:21,399] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 15:02:21,399] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:02:21,400] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 15:02:21,401] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:02:21,402] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:02:21,403] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 15:02:21,403] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 15:02:21,404] INFO | Root WebApplicationContext: initialization completed in 3069 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 15:02:31,390] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:02:41,392] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:02:51,392] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:03:01,394] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:03:04,138] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:03:04,245] DEBUG | Incoming RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(74)
[VAMS][2014-08-04 15:03:04,246] DEBUG | Finished processing of RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(80)
[VAMS][2014-08-04 15:03:04,385] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 15:03:04,386] INFO |  [DUBBO] disconected from /192.168.1.35:55219,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-3] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:03:11,395] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:03:21,395] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:03:31,396] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:03:41,396] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:03:51,397] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:04:01,399] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:04:11,399] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:04:21,400] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:04:31,400] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:04:41,401] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:04:51,400] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:05:01,403] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:05:11,404] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:05:21,404] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:05:31,405] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:05:41,405] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:05:51,406] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:06:01,406] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:06:11,406] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:06:21,408] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:06:23,188] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-5] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:06:23,279] DEBUG | Incoming RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(4)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(74)
[VAMS][2014-08-04 15:06:23,279] DEBUG | Finished processing of RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(4)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(80)
[VAMS][2014-08-04 15:06:23,330] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-2] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 15:06:23,333] INFO |  [DUBBO] disconected from /192.168.1.35:55357,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-6] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:06:31,410] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:06:41,411] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:06:51,411] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:07:01,412] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:07:11,412] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:07:21,413] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:07:31,414] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:07:41,414] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:07:51,415] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:08:01,415] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:08:11,422] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:08:21,422] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:08:31,423] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:08:41,424] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:08:51,424] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:09:01,284] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-8] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:09:01,376] DEBUG | Incoming RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(6)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(74)
[VAMS][2014-08-04 15:09:01,376] DEBUG | Finished processing of RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(6)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(80)
[VAMS][2014-08-04 15:09:01,424] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:09:01,460] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-3] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 15:09:01,461] INFO |  [DUBBO] disconected from /192.168.1.35:55391,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-9] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:09:11,425] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:09:21,426] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:09:31,426] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:09:41,428] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:09:51,430] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:10:01,430] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:10:11,431] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:10:21,432] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:10:31,434] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:10:41,434] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:10:51,435] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:11:01,436] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:11:11,435] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:11:21,438] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:11:31,438] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:11:41,440] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:11:51,440] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:12:01,440] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:12:11,442] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:12:21,446] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 4ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:12:31,444] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:12:41,447] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 2ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:12:51,447] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:13:01,448] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:13:11,450] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:13:21,450] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:13:31,450] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:13:41,450] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0002 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:16:56,546] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:16:56,607] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:16:56,608] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:16:56,610] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:16:56,611] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:16:56,613] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:16:56,613] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:16:56,617] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:16:56,621] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:16:56 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:16:56,648] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:16:56,649] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:16:56,649] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:16:56,653] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:16:56,657] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:16:56,677] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:16:56,681] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:16:56,685] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:16:56,713] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:16:56,731] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:16:56,735] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:16:56,742] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:16:56,755] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:16:56,761] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:16:56,851] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:16:56,853] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:16:56,854] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:16:56,863] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:16:56,863] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:16:56,864] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:16:56,865] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:16:56,866] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:16:56,867] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:16:56,890] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:16:56,891] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:16:56,901] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:56,902] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:56,911] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:56,913] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:56,930] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:56,931] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:56,932] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:56,935] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:56,935] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:56,935] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:56,936] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:56,936] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:56,937] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:56,937] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:56,939] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:56,940] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:56,940] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:56,941] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:56,941] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:56,941] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:56,941] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:56,942] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:56,942] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:56,942] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:56,944] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1a503f] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:16:56,945] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e33bb8] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:16:56,946] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@88b858] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:16:56,949] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:16:56,949] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:56,949] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:56,953] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:56,975] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:56,978] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:56,978] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:56,980] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:56,986] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:56,987] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:56,987] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:56,990] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:57,001] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:57,001] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:57,001] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:57,003] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:57,004] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:57,005] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:57,006] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:57,008] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:57,009] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:57,010] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:57,010] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:57,011] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:57,012] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:57,013] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:57,013] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:57,013] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:57,015] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:57,015] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:57,016] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:57,016] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:57,021] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:57,022] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:57,023] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:57,028] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,148] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,163] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:57,176] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,176] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,179] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:16:57,180] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,181] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,181] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:57,182] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:57,183] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:57,191] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:57,192] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,192] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,193] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:16:57,194] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,195] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,195] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:57,195] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:16:57,196] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:16:57,201] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:16:57,201] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,202] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,203] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:16:57,204] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,204] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,205] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:16:57,205] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,206] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,206] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,207] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,207] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,208] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,210] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@54f169] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:16:57,210] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,213] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,214] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,215] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:16:57,215] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:16:57,303] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,317] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,334] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,346] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:16:57,346] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:16:57,346] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5316&registry=zookeeper&timestamp=1407136617225, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:16:57,351] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,363] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,395] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,415] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,435] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,480] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:16:57,525] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:16:57,530] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,548] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135739758 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140827, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135738939 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136139570, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8156&revision=1.0-SNAPSHOT&side=provider&timestamp=1407135741060 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=2684&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136140395, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:16:57,560] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:16:57,560] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:16:57,566] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,566] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,566] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,567] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,567] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,567] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,567] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,568] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,568] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,568] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,568] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,569] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,569] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,569] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,570] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:16:57,571] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1aca5e2 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:16:57,574] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:16:57,585] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:16:57,585] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:16:57,586] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:16:57,588] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:16:57,667] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:16:57,701] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2183, sessionid = 0x3479fbe90820002, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:16:57,703] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:16:57,704] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:16:57,704] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:16:57,704] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:16:57,705] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:16:57,745] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836739,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:57,779] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836740,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:57,815] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836741,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:57,844] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836742,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136617241,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136617241  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:57,845] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:16:57,878] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836743,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:57,909] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836744,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:57,942] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836745,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:57,947] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836745,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:57,951] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836745,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:57,952] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:16:57,962] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,974] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:57,987] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:16:58,005] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:16:58,006] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:16:58,006] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5316&registry=zookeeper&timestamp=1407136617994, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:16:58,014] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:16:59,023] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:16:59,035] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@ce623f] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:16:59,037] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:16:59,044] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:16:59,073] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836746,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,105] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836747,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,143] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836748,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,179] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474836749,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136617995,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136617995  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,179] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:16:59,210] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474836750,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,236] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836751,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,270] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836752,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,272] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474836752,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,275] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474836752,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,275] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:16:59,276] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:16:59,294] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:16:59,316] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:16:59,316] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:16:59,316] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5316&registry=zookeeper&timestamp=1407136619280, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:16:59,399] INFO |  [DUBBO] Register: hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:16:59,417] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474836753,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,437] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836754,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,473] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836755,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,510] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836756,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136619306,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136619306  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,511] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:16:59,530] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836757,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,563] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836758,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,603] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836759,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,606] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474836759,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,608] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474836759,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:16:59,609] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306, urls: [empty://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:16:59,610] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:16:59,611] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:16:59,611] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:16:59,612] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:16:59,612] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 15:16:59,613] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:16:59,613] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 15:16:59,613] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:16:59,614] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:16:59,614] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 15:16:59,615] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 15:16:59,615] INFO | Root WebApplicationContext: initialization completed in 3065 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 15:17:09,610] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:17:19,610] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:17:21,986] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:17:22,124] DEBUG | Incoming RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(74)
[VAMS][2014-08-04 15:17:22,125] DEBUG | Finished processing of RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(80)
[VAMS][2014-08-04 15:17:22,255] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 15:17:22,256] INFO |  [DUBBO] disconected from /192.168.1.35:55651,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-3] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:17:29,611] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:17:39,611] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:17:49,613] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:17:59,615] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:18:09,619] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 3ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:18:19,618] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:18:29,618] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:18:39,619] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:18:49,618] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:18:59,622] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 2ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:19:09,621] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:19:19,623] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 0ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:19:29,626] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:19:39,627] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 2ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:19:49,627] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:19:59,629] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:20:09,630] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:20:19,630] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:20:29,631] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:20:39,633] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 2ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:20:49,632] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:20:59,633] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:21:09,634] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:21:19,635] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:21:29,635] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:21:39,637] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 2ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:21:49,637] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:21:59,637] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:22:03,204] INFO | Closing Root WebApplicationContext: startup date [Mon Aug 04 15:16:56 CST 2014]; root of context hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.doClose(873)
[VAMS][2014-08-04 15:22:03,205] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:03,205] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:03,206] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:03,206] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:03,206] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:22:03,207] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:22:03,208] INFO |  [DUBBO] Unregister: hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:22:03,250] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 28,2  replyHeader:: 28,21474836804,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136619306,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:03,252] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:22:03,262] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:22:03,262] INFO | Unbinding RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' from registry at port '20882' | [Timer-1] org.springframework.remoting.rmi.RmiServiceExporter.destroy(431)
[VAMS][2014-08-04 15:22:03,263] INFO |  [DUBBO] Unregister: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:22:03,291] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 29,2  replyHeader:: 29,21474836805,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136617995,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:03,292] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:22:03,292] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:22:03,293] INFO |  [DUBBO] Unregister: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:22:03,324] DEBUG | Reading reply sessionid:0x3479fbe90820002, packet:: clientPath:null serverPath:null finished:false header:: 30,2  replyHeader:: 30,21474836806,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5316%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136617241,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:03,324] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:22:03,511] INFO | Root WebApplicationContext: initialization started | [Timer-1] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:22:03,554] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:03,555] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:03,556] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:03,557] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:03,558] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:03,558] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:22:03,561] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [Timer-1] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:22:03,561] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:22:03 CST 2014]; root of context hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:22:03,580] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:03,580] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:03,580] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:22:03,584] INFO | Loading XML bean definitions from class path resource [provider.xml] | [Timer-1] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:22:03,585] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [Timer-1] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:22:03,586] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:22:03,590] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:22:03,593] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:22:03,606] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:22:03,615] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:22:03,618] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:22:03,621] DEBUG | Loading bean definitions | [Timer-1] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:22:03,629] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [Timer-1] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:22:03,633] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [Timer-1] ?.?(?)
[VAMS][2014-08-04 15:22:03,690] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:03,691] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:03,691] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:22:03,770] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:22:03,770] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:22:03,771] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:22:03,772] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:22:03,773] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:22:03,773] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:22:03,791] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [Timer-1] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:22:03,791] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1ee145b: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:22:03,800] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,800] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,809] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,812] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,824] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,824] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,825] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,825] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,825] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,825] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,826] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,826] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,826] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,826] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,828] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,828] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,829] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,829] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,829] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,829] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,829] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,832] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,832] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,832] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,834] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@160e8a2] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:22:03,835] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@148f7e0] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:22:03,836] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@189b9bd] | [Timer-1] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:22:03,837] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1ee145b: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:22:03,838] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,838] DEBUG | Creating instance of bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,841] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,857] DEBUG | Finished creating instance of bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,857] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,857] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,859] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,863] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,863] DEBUG | Creating shared instance of singleton bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,863] DEBUG | Creating instance of bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,864] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,872] DEBUG | Finished creating instance of bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,873] DEBUG | Creating shared instance of singleton bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,873] DEBUG | Creating instance of bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,874] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,875] DEBUG | Finished creating instance of bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,875] DEBUG | Creating shared instance of singleton bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,875] DEBUG | Creating instance of bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,876] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,877] DEBUG | Finished creating instance of bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,877] DEBUG | Creating shared instance of singleton bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,877] DEBUG | Creating instance of bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,877] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,878] DEBUG | Finished creating instance of bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,879] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,879] DEBUG | Creating instance of bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,879] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,881] DEBUG | Finished creating instance of bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,881] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,882] DEBUG | Creating instance of bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,882] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:03,883] DEBUG | Finished creating instance of bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:03,883] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:03,883] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:03,887] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:03,983] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:03,994] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:04,004] DEBUG | Returning cached instance of singleton bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,007] DEBUG | Returning cached instance of singleton bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,009] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:22:04,010] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,010] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,010] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:04,011] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:04,011] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:04,012] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:04,013] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,013] DEBUG | Returning cached instance of singleton bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,013] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:22:04,014] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,014] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,014] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:04,015] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:04,015] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:04,017] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:04,017] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,017] DEBUG | Returning cached instance of singleton bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,018] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:22:04,018] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,018] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,018] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:04,019] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,019] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,019] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,019] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,019] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,019] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,020] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@13e846f] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:22:04,020] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,022] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,022] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,022] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:04,023] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:22:04,074] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:04,083] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:04,091] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:04,099] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:22:04,100] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136924035, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:22:04,100] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136924035 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5316&registry=zookeeper&timestamp=1407136924028, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:22:04,103] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:04,112] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:04,135] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:04,152] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:04,162] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:04,198] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:22:04,221] ERROR | Context initialization failed | [Timer-1] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136924035) Failed to bind NettyServer on /192.168.1.35:20881, cause: Failed to bind to: /0.0.0.0:20881
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo$1.filesChanged(AbstractJettyRunMojo.java:409)
	at org.mortbay.util.Scanner.reportBulkChanges(Scanner.java:493)
	at org.mortbay.util.Scanner.reportDifferences(Scanner.java:359)
	at org.mortbay.util.Scanner.scan(Scanner.java:286)
	at org.mortbay.util.Scanner$1.run(Scanner.java:246)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.35:20881, cause: Failed to bind to: /0.0.0.0:20881
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 36 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20881
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 43 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind(Native Method)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:126)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:59)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 45 more
[VAMS][2014-08-04 15:22:13,296] DEBUG | Got ping response for sessionid: 0x3479fbe90820002 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:22:48,281] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:22:48,326] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:48,327] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:48,329] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:48,329] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:48,331] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:48,331] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:22:48,335] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:22:48,337] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:22:48 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:22:48,357] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:48,357] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:48,358] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:22:48,362] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:22:48,365] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:22:48,382] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:22:48,386] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:22:48,388] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:22:48,411] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:22:48,426] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:22:48,429] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:22:48,434] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:22:48,442] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:22:48,446] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:22:48,513] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:48,514] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:22:48,514] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:22:48,522] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:22:48,523] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:22:48,524] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:22:48,525] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:22:48,527] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:22:48,528] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:22:48,550] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:22:48,550] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@e99d0f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:22:48,561] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,561] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,570] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,573] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,588] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,589] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,590] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,592] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,593] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,593] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,594] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,594] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,594] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,594] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,596] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,596] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,597] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,597] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,598] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,598] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,598] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,599] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,599] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,599] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,601] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@18a6890] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:22:48,602] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@165d0e0] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:22:48,603] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1fecaeb] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:22:48,605] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e99d0f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:22:48,605] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,605] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,608] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,625] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,627] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,627] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,629] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,634] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,634] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,634] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,636] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,644] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,645] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,645] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,647] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,647] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,647] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,648] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,649] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,650] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,651] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,651] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,652] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,653] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,654] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,654] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,655] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,656] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,657] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,657] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,658] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,661] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,661] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,662] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,666] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:48,772] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:48,788] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,801] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,802] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,803] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:22:48,804] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,805] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,806] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,807] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,807] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,811] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,812] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,812] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,813] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:22:48,813] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,814] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,815] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,815] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:22:48,815] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:22:48,819] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:22:48,819] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,820] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,820] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:22:48,821] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,821] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,822] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:22:48,822] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,823] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,823] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,823] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,824] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,824] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,825] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@b524aa] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:22:48,825] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,828] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,829] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,829] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:22:48,829] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:22:48,887] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:48,899] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:48,913] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:48,922] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:22:48,922] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:22:48,922] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=7688&registry=zookeeper&timestamp=1407136968836, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:22:48,928] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:48,938] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:48,962] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:48,979] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:48,995] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:49,029] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:22:49,074] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:22:49,080] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:49,095] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617995 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136641370, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136617241 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136639978, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5316&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136619306 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5624&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136640904, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:22:49,107] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:22:49,107] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:22:49,111] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,112] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,112] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,113] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,113] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,113] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,113] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,113] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,114] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,114] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,114] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,115] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,115] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,115] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,115] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:22:49,116] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1be9a50 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:22:49,119] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:22:49,129] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:22:49,129] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:22:49,129] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:22:49,131] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:22:49,196] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:22:49,219] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479fbe4cc60003, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:22:49,220] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:22:49,221] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:22:49,221] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:22:49,221] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:22:49,223] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:22:49,259] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836809,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:49,279] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836810,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:49,312] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836811,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:49,336] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836812,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7688%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136968847,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D7688%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136968847  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:49,337] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:22:49,373] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836813,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:49,409] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836814,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:49,446] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836815,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:49,451] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836815,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:49,456] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836815,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:49,456] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:22:49,465] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:49,472] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:49,481] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:22:49,499] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:22:49,499] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136969491, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:22:49,500] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136969491 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=7688&registry=zookeeper&timestamp=1407136969489, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:22:49,508] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:22:50,509] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:22:50,532] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@bafda6] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:22:50,535] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:22:50,542] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136969491, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:22:50,580] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836816,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:50,606] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836817,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:50,742] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836818,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,074] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474836819,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7688%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136969491,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D7688%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136969491  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,074] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136969491, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:22:51,161] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474836820,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,194] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836821,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,230] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836822,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,232] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474836822,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,233] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474836822,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,234] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136969491, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136969491], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:22:51,235] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:22:51,249] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:22:51,269] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:22:51,269] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136971260, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:22:51,269] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136971260 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=7688&registry=zookeeper&timestamp=1407136971242, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:22:51,338] INFO |  [DUBBO] Register: hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136971260, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:22:51,363] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474836823,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,400] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836824,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,437] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836825,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,474] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836826,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7688%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136971260,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A20883%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D7688%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407136971260  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,474] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136971260, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:22:51,510] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836827,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,546] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836828,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,576] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836829,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,578] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474836829,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,579] DEBUG | Reading reply sessionid:0x1479fbe4cc60003, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474836829,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:22:51,579] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136971260, urls: [empty://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136971260], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:22:51,581] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:22:51,582] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:22:51,582] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:22:51,582] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:22:51,583] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 15:22:51,584] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:22:51,584] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 15:22:51,584] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:22:51,585] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:22:51,585] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 15:22:51,587] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 15:22:51,588] INFO | Root WebApplicationContext: initialization completed in 3305 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 15:23:01,580] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:23:04,335] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:23:04,441] DEBUG | Incoming RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(74)
[VAMS][2014-08-04 15:23:04,441] DEBUG | Finished processing of RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(80)
[VAMS][2014-08-04 15:23:04,512] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 15:23:04,513] INFO |  [DUBBO] disconected from /192.168.1.35:55735,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-3] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:23:11,581] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:23:21,583] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:23:31,583] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:23:41,585] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:23:51,586] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:01,585] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:11,588] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:21,589] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 2ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:31,589] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:41,590] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:24:51,591] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:01,592] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:11,592] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:21,592] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:31,594] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:41,595] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:25:51,595] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:26:01,596] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:26:11,598] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60003 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:27:31,457] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:27:31,504] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:31,504] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:31,507] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:31,508] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:31,509] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:31,509] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:27:31,512] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:27:31,515] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:27:31 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:27:31,535] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:31,535] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:31,536] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:27:31,540] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:27:31,543] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:27:31,561] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:27:31,565] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:27:31,567] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:27:31,591] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:27:31,606] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:27:31,609] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:27:31,614] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:27:31,622] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:27:31,628] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:27:31,705] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:31,705] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:27:31,705] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:27:31,713] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:27:31,714] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:27:31,715] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:27:31,716] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:27:31,717] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:27:31,718] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:27:31,739] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:27:31,739] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:27:31,750] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,750] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,759] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,761] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,774] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,775] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,776] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,778] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,778] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,778] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,779] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,779] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,779] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,779] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,782] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,782] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,782] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,782] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,783] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,783] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,783] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,783] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,784] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,784] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,785] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6bbe7] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:27:31,787] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15872f5] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:27:31,788] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@13a3d36] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:27:31,790] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:27:31,790] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,790] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,793] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,809] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,811] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,812] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,813] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,817] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,817] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,817] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,819] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,827] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,828] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,828] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,830] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,830] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,830] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,831] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,832] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,833] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,834] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,834] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,834] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,835] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,836] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,836] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,837] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,838] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,838] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,838] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,839] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,841] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,842] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,842] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,846] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:31,938] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:31,952] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,966] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,967] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,968] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:27:31,969] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,969] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,970] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,970] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,970] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,975] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,976] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,976] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,978] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:27:31,978] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,979] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,979] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,979] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:27:31,980] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:27:31,981] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:27:31,982] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,982] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,983] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:27:31,983] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,984] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,984] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:27:31,985] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,985] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,985] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,985] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,985] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,986] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,988] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5b55a9] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:27:31,988] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,991] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,991] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,991] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:27:31,991] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:27:32,050] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,061] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,076] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,087] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:27:32,087] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:27:32,087] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5600&registry=zookeeper&timestamp=1407137251998, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:27:32,092] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,103] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,125] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,148] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,175] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,216] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:27:32,254] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:27:32,260] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,273] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136969491 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983799 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983799, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136968847 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136982472, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=hessian://192.168.1.35:20883/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7688&revision=1.0-SNAPSHOT&side=provider&timestamp=1407136971260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=7052&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407136983391, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:27:32,286] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:27:32,286] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:27:32,291] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,292] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,292] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,292] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,293] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,293] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,293] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,293] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,294] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,294] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,294] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,295] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,295] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,295] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,295] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:27:32,296] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1c3e3fb | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:27:32,299] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:27:32,308] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:27:32,309] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:27:32,309] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:27:32,311] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:27:32,372] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:27:32,401] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0004, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:27:32,403] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:27:32,403] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:27:32,403] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:27:32,403] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:27:32,405] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:27:32,437] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836873,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:32,468] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836874,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:32,494] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836875,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:32,530] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836876,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137252009,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137252009  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:32,531] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:27:32,565] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836877,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:32,602] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836878,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:32,646] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836879,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:32,650] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836879,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:32,655] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836879,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:32,656] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:27:32,663] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,671] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:32,680] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:27:32,696] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:27:32,697] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:27:32,697] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5600&registry=zookeeper&timestamp=1407137252685, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:27:32,705] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:27:33,711] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:27:33,733] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@1e75e08] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:27:33,736] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:27:33,743] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:27:33,778] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836880,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:33,802] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836881,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:33,814] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836882,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:33,840] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474836883,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137252686,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137252686  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:33,840] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:27:33,871] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474836884,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:33,904] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836885,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:33,931] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836886,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:33,935] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474836886,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:33,938] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474836886,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:33,939] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:27:33,941] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:27:33,952] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:27:33,973] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:27:33,974] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:27:33,974] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5600&registry=zookeeper&timestamp=1407137253947, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:27:34,040] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:27:34,060] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474836887,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:34,087] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836888,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:34,111] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836889,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:34,149] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836890,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137253964,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137253964  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:34,150] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:27:34,184] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836891,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:34,217] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836892,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:34,257] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836893,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:34,259] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474836893,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:34,260] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474836893,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:27:34,260] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:27:34,262] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:27:34,263] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:27:34,263] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:27:34,264] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:27:34,265] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 15:27:34,265] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:27:34,265] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 15:27:34,266] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:27:34,267] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:27:34,268] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 15:27:34,268] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 15:27:34,268] INFO | Root WebApplicationContext: initialization completed in 2809 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 15:27:44,260] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0004 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:27:54,115] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:27:54,221] DEBUG | Incoming RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(74)
[VAMS][2014-08-04 15:27:54,221] DEBUG | Finished processing of RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(80)
[VAMS][2014-08-04 15:27:54,262] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0004 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:27:54,366] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 15:27:54,368] INFO |  [DUBBO] disconected from /192.168.1.35:55816,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-3] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:28:04,263] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0004 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:28:14,264] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0004 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:28:24,264] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0004 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:28:34,266] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0004 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:28:44,266] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0004 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:28:52,819] INFO | Closing Root WebApplicationContext: startup date [Mon Aug 04 15:27:31 CST 2014]; root of context hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.doClose(873)
[VAMS][2014-08-04 15:28:52,819] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:52,820] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:52,820] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:52,820] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:52,820] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:28:52,821] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:28:52,821] INFO |  [DUBBO] Unregister: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:28:52,840] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 28,2  replyHeader:: 28,21474836934,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137253964,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:28:52,841] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:28:52,842] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:28:52,842] INFO | Unbinding RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' from registry at port '20882' | [Timer-1] org.springframework.remoting.rmi.RmiServiceExporter.destroy(431)
[VAMS][2014-08-04 15:28:52,843] INFO |  [DUBBO] Unregister: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:28:52,875] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 29,2  replyHeader:: 29,21474836935,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137252686,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:28:52,876] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:28:52,877] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:28:52,877] INFO |  [DUBBO] Unregister: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:28:52,947] DEBUG | Reading reply sessionid:0x2479fbe4cae0004, packet:: clientPath:null serverPath:null finished:false header:: 30,2  replyHeader:: 30,21474836936,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5600%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137252009,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:28:52,948] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:28:53,228] INFO | Root WebApplicationContext: initialization started | [Timer-1] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:28:53,278] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:28:53,279] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:28:53,282] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:28:53,282] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:28:53,284] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:28:53,284] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:28:53,289] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [Timer-1] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:28:53,290] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:28:53 CST 2014]; root of context hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:28:53,318] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:28:53,318] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:28:53,318] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:28:53,323] INFO | Loading XML bean definitions from class path resource [provider.xml] | [Timer-1] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:28:53,325] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [Timer-1] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:28:53,326] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:28:53,331] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:28:53,332] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:28:53,342] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:28:53,357] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:28:53,359] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:28:53,365] DEBUG | Loading bean definitions | [Timer-1] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:28:53,377] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [Timer-1] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:28:53,381] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [Timer-1] ?.?(?)
[VAMS][2014-08-04 15:28:53,459] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:28:53,459] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:28:53,459] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:28:53,555] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:28:53,556] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:28:53,557] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:28:53,557] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:28:53,559] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:28:53,559] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:28:53,582] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [Timer-1] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:28:53,582] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@364ef: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:28:53,594] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,594] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,604] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,606] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,619] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,619] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,620] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,620] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,620] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,620] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,621] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,621] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,621] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,621] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,623] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,623] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,623] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,623] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,624] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,624] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,624] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,624] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,628] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,629] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,632] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1ccbdf7] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:28:53,633] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@cbc2d3] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:28:53,635] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@163d208] | [Timer-1] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:28:53,637] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@364ef: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:28:53,637] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,638] DEBUG | Creating instance of bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,642] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,665] DEBUG | Finished creating instance of bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,665] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,666] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,669] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,675] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,675] DEBUG | Creating shared instance of singleton bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,675] DEBUG | Creating instance of bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,686] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,695] DEBUG | Finished creating instance of bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,696] DEBUG | Creating shared instance of singleton bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,696] DEBUG | Creating instance of bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,697] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,697] DEBUG | Finished creating instance of bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,698] DEBUG | Creating shared instance of singleton bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,698] DEBUG | Creating instance of bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,699] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,700] DEBUG | Finished creating instance of bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,700] DEBUG | Creating shared instance of singleton bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,701] DEBUG | Creating instance of bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,701] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,703] DEBUG | Finished creating instance of bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,703] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,703] DEBUG | Creating instance of bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,704] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,705] DEBUG | Finished creating instance of bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,706] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,706] DEBUG | Creating instance of bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,706] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,708] DEBUG | Finished creating instance of bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,708] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,709] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,712] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:53,820] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:53,832] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,843] DEBUG | Returning cached instance of singleton bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,846] DEBUG | Returning cached instance of singleton bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,848] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:28:53,849] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,849] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,850] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,850] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,851] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,854] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,854] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,855] DEBUG | Returning cached instance of singleton bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,855] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:28:53,856] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,856] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,856] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,857] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:28:53,857] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:28:53,859] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:28:53,860] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,860] DEBUG | Returning cached instance of singleton bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,861] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:28:53,861] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,861] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,862] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:28:53,862] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,862] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,862] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,862] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,863] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,863] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,864] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@115632d] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:28:53,864] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,866] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,866] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,866] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:28:53,867] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:28:53,922] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:53,931] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:53,939] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:53,947] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:28:53,947] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137333882, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:28:53,948] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137333882 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5600&registry=zookeeper&timestamp=1407137333874, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:28:53,951] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:53,960] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:53,984] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:54,001] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:54,011] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:28:54,042] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:28:54,069] ERROR | Context initialization failed | [Timer-1] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137333882) Failed to bind NettyServer on /192.168.1.35:20881, cause: Failed to bind to: /0.0.0.0:20881
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo$1.filesChanged(AbstractJettyRunMojo.java:409)
	at org.mortbay.util.Scanner.reportBulkChanges(Scanner.java:493)
	at org.mortbay.util.Scanner.reportDifferences(Scanner.java:359)
	at org.mortbay.util.Scanner.scan(Scanner.java:286)
	at org.mortbay.util.Scanner$1.run(Scanner.java:246)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.35:20881, cause: Failed to bind to: /0.0.0.0:20881
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 36 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20881
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 43 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind(Native Method)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:126)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:59)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 45 more
[VAMS][2014-08-04 15:29:20,655] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:29:20,704] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:29:20,704] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:29:20,707] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:29:20,708] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:29:20,710] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:29:20,710] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:29:20,713] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:29:20,716] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:29:20 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:29:20,735] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:29:20,736] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:29:20,736] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:29:20,740] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:29:20,743] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:29:20,760] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:29:20,763] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:29:20,766] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:29:20,789] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:29:20,805] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:29:20,807] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:29:20,811] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:29:20,820] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:29:20,824] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:29:20,891] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:29:20,891] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:29:20,891] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:29:20,899] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:29:20,900] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:29:20,901] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:29:20,902] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:29:20,904] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:29:20,905] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:29:20,928] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:29:20,928] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:29:20,939] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:20,940] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:20,949] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:20,951] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:20,964] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:20,964] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:20,965] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:20,967] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:20,967] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:20,967] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:20,968] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:20,968] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:20,969] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:20,969] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:20,971] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:20,971] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:20,972] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:20,972] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:20,972] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:20,973] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:20,973] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:20,973] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:20,973] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:20,973] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:20,975] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6bbe7] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:29:20,977] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15872f5] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:29:20,978] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@13a3d36] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:29:20,979] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:29:20,980] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:20,980] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:20,983] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,000] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,003] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,003] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,005] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,008] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,009] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,009] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,012] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,020] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,021] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,021] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,022] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,023] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,023] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,023] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,025] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,026] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,026] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,027] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,027] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,029] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,029] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,029] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,029] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,030] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,031] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,031] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,032] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,034] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,035] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,035] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,039] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,140] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,154] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,166] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,167] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,168] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:29:21,169] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,170] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,170] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,170] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,171] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,176] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,177] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,177] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,178] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:29:21,178] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,179] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,179] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,179] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:29:21,180] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:29:21,182] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:29:21,182] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,182] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,183] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:29:21,184] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,184] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,185] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:29:21,185] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,185] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,185] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,186] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,186] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,186] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,187] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5b55a9] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:29:21,187] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,189] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,189] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,190] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:21,190] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:29:21,249] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,259] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,272] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,282] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:29:21,282] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:29:21,282] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=8964&registry=zookeeper&timestamp=1407137361197, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:29:21,287] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,298] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,322] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,340] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,356] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,390] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:29:21,430] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:29:21,436] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,452] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252686 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273566 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273566, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137252009 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137272214, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5600&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137253964 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9212&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407137273106, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:29:21,465] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:29:21,465] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:29:21,470] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,470] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,470] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,470] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,471] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,471] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,471] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,472] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,472] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,472] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,472] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,473] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,473] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,473] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,473] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:29:21,474] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1c3e3fb | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:29:21,478] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:29:21,486] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:29:21,486] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:29:21,486] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:29:21,488] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:29:21,551] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:29:21,590] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2183, sessionid = 0x3479fbe90820003, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:29:21,592] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:29:21,592] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:29:21,593] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:29:21,593] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:29:21,594] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:29:21,631] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836939,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:21,664] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836940,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:21,702] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836941,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:21,742] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836942,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8964%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137361208,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8964%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137361208  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:21,744] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:29:21,775] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836943,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:21,801] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836944,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:21,836] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836945,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:21,841] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836945,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:21,848] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836945,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:21,848] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:29:21,856] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,866] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:21,874] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:29:21,889] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:29:21,889] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:29:21,890] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=8964&registry=zookeeper&timestamp=1407137361880, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:29:21,898] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:29:22,907] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:29:22,931] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@1781288] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:29:22,934] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:29:22,944] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:29:23,011] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836946,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,040] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836947,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,073] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836948,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,109] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474836949,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8964%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137361882,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8964%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137361882  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,109] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:29:23,142] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474836950,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,178] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836951,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,203] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836952,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,204] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474836952,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,205] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474836952,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,205] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:29:23,206] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:29:23,220] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:29:23,240] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:29:23,241] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:29:23,241] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=8964&registry=zookeeper&timestamp=1407137363214, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:29:23,306] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:29:23,330] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474836953,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,357] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836954,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,377] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836955,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,410] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836956,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8964%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137363232,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8964%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137363232  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,411] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:29:23,447] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836957,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,466] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836958,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,494] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836959,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,495] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474836959,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,496] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474836959,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,496] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:29:23,498] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:29:23,498] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:29:23,499] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:29:23,500] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:29:23,503] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 15:29:23,503] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:29:23,504] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 15:29:23,504] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:29:23,504] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:29:23,505] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 15:29:23,505] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 15:29:23,505] INFO | Root WebApplicationContext: initialization completed in 2848 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 15:29:23,598] INFO |  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(450)
[VAMS][2014-08-04 15:29:23,598] INFO |  [DUBBO] Close all registries [zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197], dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(63)
[VAMS][2014-08-04 15:29:23,599] INFO |  [DUBBO] Destroy registry:zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(485)
[VAMS][2014-08-04 15:29:23,599] INFO |  [DUBBO] Unregister: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:29:23,616] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 28,2  replyHeader:: 28,21474836960,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8964%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137361882,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,616] INFO |  [DUBBO] Destroy unregister url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:29:23,616] INFO |  [DUBBO] Unregister: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:29:23,648] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 29,2  replyHeader:: 29,21474836961,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8964%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137363232,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,649] INFO |  [DUBBO] Destroy unregister url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:29:23,649] INFO |  [DUBBO] Unregister: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:29:23,671] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 30,2  replyHeader:: 30,21474836962,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8964%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137361208,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,672] INFO |  [DUBBO] Destroy unregister url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:29:23,672] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:29:23,673] INFO |  [DUBBO] Destroy unsubscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(510)
[VAMS][2014-08-04 15:29:23,673] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:29:23,673] INFO |  [DUBBO] Destroy unsubscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(510)
[VAMS][2014-08-04 15:29:23,673] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:29:23,673] INFO |  [DUBBO] Destroy unsubscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(510)
[VAMS][2014-08-04 15:29:23,673] DEBUG | Closing ZkClient... | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(915)
[VAMS][2014-08-04 15:29:23,673] INFO | Terminate ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(82)
[VAMS][2014-08-04 15:29:23,674] DEBUG | Closing ZooKeeper connected to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 | [DubboShutdownHook] org.I0Itec.zkclient.ZkConnection.close(77)
[VAMS][2014-08-04 15:29:23,674] DEBUG | Closing session: 0x3479fbe90820003 | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(533)
[VAMS][2014-08-04 15:29:23,674] DEBUG | Closing client for session: 0x3479fbe90820003 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.close(1315)
[VAMS][2014-08-04 15:29:23,693] DEBUG | Reading reply sessionid:0x3479fbe90820003, packet:: clientPath:null serverPath:null finished:false header:: 31,-11  replyHeader:: 31,21474836963,0  request:: null response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:29:23,693] DEBUG | Disconnecting client for session: 0x3479fbe90820003 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.disconnect(1299)
[VAMS][2014-08-04 15:29:23,694] INFO | Session: 0x3479fbe90820003 closed | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(544)
[VAMS][2014-08-04 15:29:23,694] DEBUG | Closing ZkClient...done | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(928)
[VAMS][2014-08-04 15:29:23,694] INFO |  [DUBBO] Close dubbo server: /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(393)
[VAMS][2014-08-04 15:29:23,694] INFO | EventThread shut down | [main-EventThread] org.apache.zookeeper.ClientCnxn$EventThread.run(516)
[VAMS][2014-08-04 15:29:23,695] INFO |  [DUBBO] Close NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.remoting.transport.AbstractServer.close(146)
[VAMS][2014-08-04 15:29:23,696] INFO |  [DUBBO] Unexport service: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:29:23,697] INFO |  [DUBBO] Unexport service: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:29:23,697] INFO |  [DUBBO] Close hessian server hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.hessian.HessianProtocol.destroy(141)
[VAMS][2014-08-04 15:29:23,801] INFO |  [DUBBO] Unexport service: injvm://127.0.0.1/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:29:23,802] INFO |  [DUBBO] Unexport service: injvm://127.0.0.1/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:29:23,802] INFO |  [DUBBO] Unexport service: injvm://127.0.0.1/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:29:23,803] INFO | Unbinding RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' from registry at port '20882' | [DubboShutdownHook] org.springframework.remoting.rmi.RmiServiceExporter.destroy(431)
[VAMS][2014-08-04 15:29:24,100] INFO | Closing Root WebApplicationContext: startup date [Mon Aug 04 15:29:20 CST 2014]; root of context hierarchy | [Shutdown] org.springframework.context.support.AbstractApplicationContext.doClose(873)
[VAMS][2014-08-04 15:29:24,101] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Shutdown] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:24,101] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Shutdown] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:24,102] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Shutdown] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:24,102] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Shutdown] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:29:24,102] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f94a1f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Shutdown] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:29:24,103] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Shutdown] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:29:24,103] INFO |  [DUBBO] Unregister: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:29:24,107] WARN |  [DUBBO] Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232 to registry 192.168.1.35:2181, cause: Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, cause: null, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(132)
java.lang.IllegalStateException: Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232 to registry 192.168.1.35:2181, cause: Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, cause: null
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:130)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, cause: null
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 25 more
Caused by: java.lang.NullPointerException
	at org.I0Itec.zkclient.ZkClient$8.call(ZkClient.java:720)
	at org.I0Itec.zkclient.ZkClient.retryUntilConnected(ZkClient.java:675)
	at org.I0Itec.zkclient.ZkClient.delete(ZkClient.java:716)
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.delete(ZkclientZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:108)
	... 26 more
[VAMS][2014-08-04 15:29:24,111] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:29:24,112] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Shutdown] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:29:24,112] INFO | Unbinding RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' from registry at port '20882' | [Shutdown] org.springframework.remoting.rmi.RmiServiceExporter.destroy(431)
[VAMS][2014-08-04 15:29:24,113] WARN | RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' is not bound to registry at port '20882' anymore | [Shutdown] org.springframework.remoting.rmi.RmiServiceExporter.destroy(439)
java.rmi.NotBoundException: com.xiaohao.dubbodemo.service.IDubboRmiDemoService
	at sun.rmi.registry.RegistryImpl.unbind(RegistryImpl.java:140)
	at org.springframework.remoting.rmi.RmiServiceExporter.destroy(RmiServiceExporter.java:435)
	at com.alibaba.dubbo.rpc.protocol.rmi.RmiProtocol$1.run(RmiProtocol.java:61)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$1.unexport(AbstractProxyProtocol.java:76)
	at com.alibaba.dubbo.rpc.listener.ListenerExporterWrapper.unexport(ListenerExporterWrapper.java:69)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$ExporterChangeableWrapper.unexport(RegistryProtocol.java:427)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:125)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
[VAMS][2014-08-04 15:29:24,114] WARN | RMI object for service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' isn't exported anymore | [Shutdown] org.springframework.remoting.rmi.RmiServiceExporter.unexportObjectSilently(457)
java.rmi.NoSuchObjectException: object not exported
	at sun.rmi.transport.ObjectTable.unexportObject(ObjectTable.java:136)
	at java.rmi.server.UnicastRemoteObject.unexportObject(UnicastRemoteObject.java:280)
	at org.springframework.remoting.rmi.RmiServiceExporter.unexportObjectSilently(RmiServiceExporter.java:453)
	at org.springframework.remoting.rmi.RmiServiceExporter.destroy(RmiServiceExporter.java:444)
	at com.alibaba.dubbo.rpc.protocol.rmi.RmiProtocol$1.run(RmiProtocol.java:61)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$1.unexport(AbstractProxyProtocol.java:76)
	at com.alibaba.dubbo.rpc.listener.ListenerExporterWrapper.unexport(ListenerExporterWrapper.java:69)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$ExporterChangeableWrapper.unexport(RegistryProtocol.java:427)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:125)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
[VAMS][2014-08-04 15:29:24,115] INFO |  [DUBBO] Unregister: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:29:24,115] WARN |  [DUBBO] Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882 to registry 192.168.1.35:2181, cause: Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, cause: null, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(132)
java.lang.IllegalStateException: Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882 to registry 192.168.1.35:2181, cause: Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, cause: null
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:130)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, cause: null
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 25 more
Caused by: java.lang.NullPointerException
	at org.I0Itec.zkclient.ZkClient$8.call(ZkClient.java:720)
	at org.I0Itec.zkclient.ZkClient.retryUntilConnected(ZkClient.java:675)
	at org.I0Itec.zkclient.ZkClient.delete(ZkClient.java:716)
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.delete(ZkclientZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:108)
	... 26 more
[VAMS][2014-08-04 15:29:24,116] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:29:24,117] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Shutdown] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:29:24,117] INFO |  [DUBBO] Unregister: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:29:24,118] WARN |  [DUBBO] Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208 to registry 192.168.1.35:2181, cause: Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, cause: null, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(132)
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208 to registry 192.168.1.35:2181, cause: Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, cause: null
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:130)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8964&timestamp=1407137361197, cause: null
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 25 more
Caused by: java.lang.NullPointerException
	at org.I0Itec.zkclient.ZkClient$8.call(ZkClient.java:720)
	at org.I0Itec.zkclient.ZkClient.retryUntilConnected(ZkClient.java:675)
	at org.I0Itec.zkclient.ZkClient.delete(ZkClient.java:716)
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.delete(ZkclientZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:108)
	... 26 more
[VAMS][2014-08-04 15:29:24,119] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:33:48,267] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:33:48,317] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:33:48,317] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:33:48,320] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:33:48,320] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:33:48,321] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:33:48,322] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:33:48,325] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:33:48,328] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:33:48 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:33:48,348] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:33:48,349] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:33:48,349] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:33:48,353] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:33:48,357] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:33:48,375] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:33:48,378] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:33:48,380] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:33:48,402] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:33:48,418] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:33:48,421] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:33:48,426] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:33:48,435] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:33:48,439] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:33:48,499] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:33:48,499] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:33:48,499] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:33:48,505] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:33:48,506] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:33:48,507] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:33:48,508] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:33:48,509] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:33:48,510] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:33:48,537] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:33:48,537] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:33:48,547] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,548] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,557] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,560] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,574] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,574] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,576] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,579] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,579] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,580] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,580] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,580] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,581] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,581] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,583] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,583] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,583] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,584] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,584] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,584] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,584] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,585] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,585] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,585] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,587] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1a503f] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:33:48,588] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e33bb8] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:33:48,590] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@88b858] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:33:48,592] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:33:48,593] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,593] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,596] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,615] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,617] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,618] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,619] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,624] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,624] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,625] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,630] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,638] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,639] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,639] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,640] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,641] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,641] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,641] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,643] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,644] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,644] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,645] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,645] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,646] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,647] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,647] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,647] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,648] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,649] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,649] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,649] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,652] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,652] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,652] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,657] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:48,749] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:48,764] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,776] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,777] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,779] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:33:48,779] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,780] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,781] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,782] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,782] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,788] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,788] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,789] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,790] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:33:48,790] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,791] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,791] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,792] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:33:48,792] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:33:48,794] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:33:48,795] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,796] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,797] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:33:48,797] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,798] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,798] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:33:48,799] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,799] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,799] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,799] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,799] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,800] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,801] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@54f169] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:33:48,801] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,803] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,803] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,803] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:48,804] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:33:48,867] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:48,878] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:48,891] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:48,901] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:33:48,901] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:33:48,901] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=8832&registry=zookeeper&timestamp=1407137628811, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:33:48,907] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:48,918] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:48,942] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:48,959] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:48,977] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:49,013] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:33:49,057] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:33:49,062] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:49,077] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361882, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137361208, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8964&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137363232, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:33:49,086] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:33:49,086] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:33:49,092] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,092] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,092] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,093] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,093] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,093] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,094] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,094] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,094] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,095] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,095] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,095] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,096] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,096] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,096] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:33:49,097] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1aca5e2 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:33:49,101] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:33:49,111] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:33:49,111] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:33:49,112] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:33:49,114] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:33:49,188] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:33:49,226] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2183, sessionid = 0x3479fbe90820004, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:33:49,227] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:33:49,228] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:33:49,228] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:33:49,228] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:33:49,230] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:33:49,258] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836966,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:49,290] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836967,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:49,313] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836968,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:49,352] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836969,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137628822,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137628822  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:49,354] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:33:49,387] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836970,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:49,423] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836971,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:49,459] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836972,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:49,465] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836972,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:49,469] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836972,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:49,470] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:33:49,481] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:49,493] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:49,502] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:33:49,514] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:33:49,515] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:33:49,515] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=8832&registry=zookeeper&timestamp=1407137629506, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:33:49,522] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:33:50,529] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:33:50,551] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@ce623f] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:33:50,553] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:33:50,564] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:33:50,610] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836973,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:50,642] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474836974,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:50,826] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474836975,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:50,868] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474836976,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137629507,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137629507  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:50,868] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:33:50,903] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474836977,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:50,939] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474836978,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:50,964] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474836979,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:50,966] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474836979,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:50,967] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474836979,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:50,968] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:33:50,968] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:33:50,980] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:33:50,995] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:33:50,996] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:33:50,996] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=8832&registry=zookeeper&timestamp=1407137630974, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:33:51,062] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:33:51,091] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474836980,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,124] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474836981,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,149] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474836982,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,185] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474836983,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8832%2526revision%253D1.0-SNAPSHOT%2526server%253Djetty%2526side%253Dprovider%2526timestamp%253D1407137630988,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8832%2526revision%253D1.0-SNAPSHOT%2526server%253Djetty%2526side%253Dprovider%2526timestamp%253D1407137630988  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,186] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:33:51,227] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474836984,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,259] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474836985,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,299] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474836986,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,301] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474836986,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,302] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474836986,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,302] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:33:51,303] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:33:51,304] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:33:51,304] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:33:51,305] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:33:51,306] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 15:33:51,306] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:33:51,307] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 15:33:51,307] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:33:51,307] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:33:51,308] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 15:33:51,308] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 15:33:51,308] INFO | Root WebApplicationContext: initialization completed in 3039 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 15:33:51,404] INFO |  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(450)
[VAMS][2014-08-04 15:33:51,405] INFO |  [DUBBO] Close all registries [zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811], dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(63)
[VAMS][2014-08-04 15:33:51,405] INFO |  [DUBBO] Destroy registry:zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(485)
[VAMS][2014-08-04 15:33:51,405] INFO |  [DUBBO] Unregister: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:33:51,431] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 28,2  replyHeader:: 28,21474836987,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D8832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137629507,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,432] INFO |  [DUBBO] Destroy unregister url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:33:51,432] INFO |  [DUBBO] Unregister: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:33:51,455] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 29,2  replyHeader:: 29,21474836988,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D8832%2526revision%253D1.0-SNAPSHOT%2526server%253Djetty%2526side%253Dprovider%2526timestamp%253D1407137630988,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,456] INFO |  [DUBBO] Destroy unregister url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:33:51,457] INFO |  [DUBBO] Unregister: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:33:51,479] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 30,2  replyHeader:: 30,21474836989,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D8832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407137628822,-1  response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,480] INFO |  [DUBBO] Destroy unregister url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(494)
[VAMS][2014-08-04 15:33:51,480] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:33:51,481] INFO |  [DUBBO] Destroy unsubscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(510)
[VAMS][2014-08-04 15:33:51,481] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:33:51,481] INFO |  [DUBBO] Destroy unsubscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(510)
[VAMS][2014-08-04 15:33:51,481] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:33:51,482] INFO |  [DUBBO] Destroy unsubscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(510)
[VAMS][2014-08-04 15:33:51,482] DEBUG | Closing ZkClient... | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(915)
[VAMS][2014-08-04 15:33:51,482] INFO | Terminate ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(82)
[VAMS][2014-08-04 15:33:51,484] DEBUG | Closing ZooKeeper connected to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 | [DubboShutdownHook] org.I0Itec.zkclient.ZkConnection.close(77)
[VAMS][2014-08-04 15:33:51,484] DEBUG | Closing session: 0x3479fbe90820004 | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(533)
[VAMS][2014-08-04 15:33:51,484] DEBUG | Closing client for session: 0x3479fbe90820004 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.close(1315)
[VAMS][2014-08-04 15:33:51,512] DEBUG | Reading reply sessionid:0x3479fbe90820004, packet:: clientPath:null serverPath:null finished:false header:: 31,-11  replyHeader:: 31,21474836990,0  request:: null response:: null | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:33:51,513] DEBUG | Disconnecting client for session: 0x3479fbe90820004 | [DubboShutdownHook] org.apache.zookeeper.ClientCnxn.disconnect(1299)
[VAMS][2014-08-04 15:33:51,513] INFO | Session: 0x3479fbe90820004 closed | [DubboShutdownHook] org.apache.zookeeper.ZooKeeper.close(544)
[VAMS][2014-08-04 15:33:51,513] DEBUG | Closing ZkClient...done | [DubboShutdownHook] org.I0Itec.zkclient.ZkClient.close(928)
[VAMS][2014-08-04 15:33:51,514] INFO | EventThread shut down | [main-EventThread] org.apache.zookeeper.ClientCnxn$EventThread.run(516)
[VAMS][2014-08-04 15:33:51,515] INFO |  [DUBBO] Close dubbo server: /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(393)
[VAMS][2014-08-04 15:33:51,516] INFO |  [DUBBO] Close NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.remoting.transport.AbstractServer.close(146)
[VAMS][2014-08-04 15:33:51,518] INFO |  [DUBBO] Unexport service: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:33:51,518] INFO |  [DUBBO] Unexport service: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:33:51,518] INFO |  [DUBBO] Close hessian server hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.hessian.HessianProtocol.destroy(141)
[VAMS][2014-08-04 15:33:51,622] INFO |  [DUBBO] Unexport service: injvm://127.0.0.1/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:33:51,622] INFO |  [DUBBO] Unexport service: injvm://127.0.0.1/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:33:51,622] INFO |  [DUBBO] Unexport service: injvm://127.0.0.1/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2014-08-04 15:33:51,622] INFO | Unbinding RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' from registry at port '20882' | [DubboShutdownHook] org.springframework.remoting.rmi.RmiServiceExporter.destroy(431)
[VAMS][2014-08-04 15:33:51,907] INFO | Closing Root WebApplicationContext: startup date [Mon Aug 04 15:33:48 CST 2014]; root of context hierarchy | [Shutdown] org.springframework.context.support.AbstractApplicationContext.doClose(873)
[VAMS][2014-08-04 15:33:51,911] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Shutdown] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:51,911] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Shutdown] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:51,911] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Shutdown] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:51,912] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Shutdown] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:33:51,912] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Shutdown] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 15:33:51,912] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Shutdown] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:33:51,913] INFO |  [DUBBO] Unregister: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:33:51,917] WARN |  [DUBBO] Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988 to registry 192.168.1.35:2181, cause: Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, cause: null, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(132)
java.lang.IllegalStateException: Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988 to registry 192.168.1.35:2181, cause: Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, cause: null
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:130)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, cause: null
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 25 more
Caused by: java.lang.NullPointerException
	at org.I0Itec.zkclient.ZkClient$8.call(ZkClient.java:720)
	at org.I0Itec.zkclient.ZkClient.retryUntilConnected(ZkClient.java:675)
	at org.I0Itec.zkclient.ZkClient.delete(ZkClient.java:716)
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.delete(ZkclientZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:108)
	... 26 more
[VAMS][2014-08-04 15:33:51,921] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:33:51,922] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Shutdown] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:33:51,922] INFO | Unbinding RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' from registry at port '20882' | [Shutdown] org.springframework.remoting.rmi.RmiServiceExporter.destroy(431)
[VAMS][2014-08-04 15:33:51,923] WARN | RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' is not bound to registry at port '20882' anymore | [Shutdown] org.springframework.remoting.rmi.RmiServiceExporter.destroy(439)
java.rmi.NotBoundException: com.xiaohao.dubbodemo.service.IDubboRmiDemoService
	at sun.rmi.registry.RegistryImpl.unbind(RegistryImpl.java:140)
	at org.springframework.remoting.rmi.RmiServiceExporter.destroy(RmiServiceExporter.java:435)
	at com.alibaba.dubbo.rpc.protocol.rmi.RmiProtocol$1.run(RmiProtocol.java:61)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$1.unexport(AbstractProxyProtocol.java:76)
	at com.alibaba.dubbo.rpc.listener.ListenerExporterWrapper.unexport(ListenerExporterWrapper.java:69)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$ExporterChangeableWrapper.unexport(RegistryProtocol.java:427)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:125)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
[VAMS][2014-08-04 15:33:51,924] WARN | RMI object for service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' isn't exported anymore | [Shutdown] org.springframework.remoting.rmi.RmiServiceExporter.unexportObjectSilently(457)
java.rmi.NoSuchObjectException: object not exported
	at sun.rmi.transport.ObjectTable.unexportObject(ObjectTable.java:136)
	at java.rmi.server.UnicastRemoteObject.unexportObject(UnicastRemoteObject.java:280)
	at org.springframework.remoting.rmi.RmiServiceExporter.unexportObjectSilently(RmiServiceExporter.java:453)
	at org.springframework.remoting.rmi.RmiServiceExporter.destroy(RmiServiceExporter.java:444)
	at com.alibaba.dubbo.rpc.protocol.rmi.RmiProtocol$1.run(RmiProtocol.java:61)
	at com.alibaba.dubbo.rpc.protocol.AbstractProxyProtocol$1.unexport(AbstractProxyProtocol.java:76)
	at com.alibaba.dubbo.rpc.listener.ListenerExporterWrapper.unexport(ListenerExporterWrapper.java:69)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$ExporterChangeableWrapper.unexport(RegistryProtocol.java:427)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:125)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
[VAMS][2014-08-04 15:33:51,924] INFO |  [DUBBO] Unregister: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:33:51,925] WARN |  [DUBBO] Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507 to registry 192.168.1.35:2181, cause: Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, cause: null, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(132)
java.lang.IllegalStateException: Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507 to registry 192.168.1.35:2181, cause: Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, cause: null
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:130)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, cause: null
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 25 more
Caused by: java.lang.NullPointerException
	at org.I0Itec.zkclient.ZkClient$8.call(ZkClient.java:720)
	at org.I0Itec.zkclient.ZkClient.retryUntilConnected(ZkClient.java:675)
	at org.I0Itec.zkclient.ZkClient.delete(ZkClient.java:716)
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.delete(ZkclientZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:108)
	... 26 more
[VAMS][2014-08-04 15:33:51,926] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:33:51,927] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Shutdown] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 15:33:51,927] INFO |  [DUBBO] Unregister: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 15:33:51,928] WARN |  [DUBBO] Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822 to registry 192.168.1.35:2181, cause: Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, cause: null, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(132)
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822 to registry 192.168.1.35:2181, cause: Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, cause: null
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol$1.unexport(RegistryProtocol.java:130)
	at com.alibaba.dubbo.config.ServiceConfig.unexport(ServiceConfig.java:267)
	at com.alibaba.dubbo.config.spring.ServiceBean.destroy(ServiceBean.java:255)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:579)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:115)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:574)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:485)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStop(Jetty6PluginWebAppContext.java:118)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:169)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:142)
	at org.mortbay.jetty.Server.doStop(Server.java:281)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822 to zookeeper zookeeper://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8832&timestamp=1407137628811, cause: null
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 25 more
Caused by: java.lang.NullPointerException
	at org.I0Itec.zkclient.ZkClient$8.call(ZkClient.java:720)
	at org.I0Itec.zkclient.ZkClient.retryUntilConnected(ZkClient.java:675)
	at org.I0Itec.zkclient.ZkClient.delete(ZkClient.java:716)
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.delete(ZkclientZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:108)
	... 26 more
[VAMS][2014-08-04 15:33:51,932] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, dubbo version: 2.5.3, current host: 127.0.0.1 | [Shutdown] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 15:41:25,029] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:41:25,084] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:25,085] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:25,088] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:25,088] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:25,090] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:25,090] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:41:25,093] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:41:25,099] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:41:25 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:41:25,134] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:25,135] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:25,135] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:41:25,141] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:41:25,146] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:41:25,173] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:41:25,178] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:41:25,181] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:41:25,212] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:41:25,231] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:41:25,234] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:41:25,240] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:41:25,252] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:41:25,256] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:41:25,339] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:25,340] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:41:25,340] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:41:25,352] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:41:25,352] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:41:25,355] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:41:25,356] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:41:25,358] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:41:25,359] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:41:25,388] DEBUG | Loaded 15 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:41:25,388] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:41:25,402] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,403] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,415] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,417] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,434] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,434] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,436] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,438] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,438] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,439] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,439] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,440] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,440] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,440] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,443] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,443] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,444] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,444] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,445] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,445] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,446] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,446] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,446] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,447] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,449] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1a503f] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:41:25,451] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e33bb8] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:41:25,452] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@88b858] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:41:25,454] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,demoService,rmiDemoService,hessianDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:41:25,454] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,455] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,459] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,481] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,483] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,483] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,485] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,491] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,491] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,492] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,495] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,504] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,505] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,505] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,506] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,507] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,508] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,508] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,510] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,511] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,512] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,512] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,513] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,515] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,515] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,516] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,516] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,518] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,518] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,519] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,519] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,523] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,523] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,524] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,528] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,658] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,676] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,692] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,692] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,695] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:41:25,695] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,696] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,697] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,697] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,697] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,703] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,704] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,704] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,706] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:41:25,706] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,707] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,708] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,708] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:41:25,708] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:41:25,712] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:41:25,712] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,713] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,714] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:41:25,714] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,715] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,716] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:41:25,716] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,716] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,717] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,717] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,717] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,717] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,719] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@54f169] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:41:25,719] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,722] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,722] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,723] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:41:25,723] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:41:25,800] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,814] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,831] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,843] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:41:25,844] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:41:25,844] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=9096&registry=zookeeper&timestamp=1407138085731, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:41:25,851] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,867] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,901] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,923] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,941] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:25,978] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:41:26,019] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:41:26,025] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:26,040] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137629507, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=8832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407137628822, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=8832&revision=1.0-SNAPSHOT&server=jetty&side=provider&timestamp=1407137630988, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:41:26,049] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:41:26,050] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:41:26,054] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,055] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,055] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,055] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,056] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,056] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,056] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,056] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,057] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,057] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,057] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,057] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,058] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,058] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,058] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:41:26,059] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1aca5e2 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:41:26,062] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:41:26,072] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:41:26,073] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:41:26,074] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:41:26,076] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:41:26,143] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:41:26,174] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0006, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:41:26,176] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:41:26,176] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:41:26,176] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:41:26,177] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:41:26,178] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:41:26,230] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474836992,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:26,262] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474836993,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:26,298] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474836994,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:26,323] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474836995,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9096%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138085744,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9096%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138085744  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:26,325] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:41:26,358] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474836996,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:26,372] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474836997,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:26,395] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474836998,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:26,400] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474836998,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:26,404] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474836998,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:26,404] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:41:26,412] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:26,421] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:26,430] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:41:26,442] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:41:26,443] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138086435, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:41:26,443] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138086435 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=9096&registry=zookeeper&timestamp=1407138086434, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:41:26,450] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:41:27,461] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:41:27,487] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@19422d2] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:41:27,489] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:41:27,500] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138086435, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:41:27,518] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474836999,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,542] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837000,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,567] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837001,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,604] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474837002,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D9096%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138086435,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D9096%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138086435  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,605] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138086435, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:41:27,636] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474837003,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,668] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837004,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,705] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837005,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,707] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474837005,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,708] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474837005,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,708] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138086435, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138086435], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:41:27,708] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:41:27,718] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:41:27,735] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:41:27,735] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9096&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138087728, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:41:27,736] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9096&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138087728 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=9096&registry=zookeeper&timestamp=1407138087715, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:41:27,777] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9096&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138087728, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:41:27,808] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474837006,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,833] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837007,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,864] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837008,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,888] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837009,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D9096%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407138087728,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D9096%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407138087728  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,889] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9096&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138087728, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:41:27,910] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837010,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,946] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837011,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,982] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837012,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,984] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474837012,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,985] DEBUG | Reading reply sessionid:0x2479fbe4cae0006, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474837012,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:41:27,985] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9096&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138087728, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9096&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138087728], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:41:27,987] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:27,990] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:27,990] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:27,990] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:41:27,991] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 15:41:27,992] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 15:41:27,992] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 15:41:27,992] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:27,993] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 15:41:27,994] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 15:41:27,995] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 15:41:27,995] INFO | Root WebApplicationContext: initialization completed in 2964 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 15:41:37,986] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:41:46,431] DEBUG |  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(60)
[VAMS][2014-08-04 15:41:46,537] DEBUG | Incoming RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(74)
[VAMS][2014-08-04 15:41:46,538] DEBUG | Finished processing of RmiServiceExporter remote call: com.xiaohao.dubbodemo.service.IDubboRmiDemoService.rmiSayHello | [RMI TCP Connection(2)-192.168.1.35] org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(80)
[VAMS][2014-08-04 15:41:47,987] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:41:57,988] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:07,988] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:17,988] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:27,989] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:37,990] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:47,991] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:42:57,992] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:07,993] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:17,992] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:26,025] DEBUG |  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(82)
[VAMS][2014-08-04 15:43:26,030] DEBUG |  [DUBBO] Send heartbeat to remote channel /192.168.1.35:56202, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-04 15:43:27,994] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:37,994] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:47,996] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 2ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:43:57,997] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:07,997] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:17,998] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:26,031] DEBUG |  [DUBBO] Send heartbeat to remote channel /192.168.1.35:56202, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-04 15:44:26,034] DEBUG |  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(82)
[VAMS][2014-08-04 15:44:27,998] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:37,998] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:48,001] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 2ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:44:58,000] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:08,003] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 2ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:18,003] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:26,034] DEBUG |  [DUBBO] Send heartbeat to remote channel /192.168.1.35:56202, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-04 15:45:26,035] DEBUG |  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(82)
[VAMS][2014-08-04 15:45:28,004] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:38,004] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:48,006] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 2ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:45:58,005] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:08,007] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:18,008] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:26,036] DEBUG |  [DUBBO] Send heartbeat to remote channel /192.168.1.35:56202, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-04 15:46:26,037] DEBUG |  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(82)
[VAMS][2014-08-04 15:46:28,011] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 4ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:38,010] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:48,009] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:46:58,011] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:08,013] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:18,014] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:26,038] DEBUG |  [DUBBO] Send heartbeat to remote channel /192.168.1.35:56202, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-04 15:47:26,039] DEBUG |  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(82)
[VAMS][2014-08-04 15:47:28,015] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:38,015] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:48,015] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:47:58,016] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:08,018] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:18,018] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:26,041] DEBUG |  [DUBBO] Send heartbeat to remote channel /192.168.1.35:56202, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-04 15:48:26,042] DEBUG |  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(82)
[VAMS][2014-08-04 15:48:28,020] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:38,021] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:48,021] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:48:58,022] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:08,022] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:18,023] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:26,043] DEBUG |  [DUBBO] Send heartbeat to remote channel /192.168.1.35:56202, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-04 15:49:26,044] DEBUG |  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(82)
[VAMS][2014-08-04 15:49:28,023] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:38,025] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 2ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:48,026] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:49:58,027] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:50:08,029] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:50:18,030] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:50:26,046] DEBUG |  [DUBBO] Send heartbeat to remote channel /192.168.1.35:56202, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1 | [dubbo-remoting-server-heartbeat-thread-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask.run(66)
[VAMS][2014-08-04 15:50:26,047] DEBUG |  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(82)
[VAMS][2014-08-04 15:50:28,031] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0006 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:50:30,011] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 15:50:30,020] INFO |  [DUBBO] disconected from /192.168.1.35:56202,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-4] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 15:50:58,728] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:50:58,778] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:50:58,779] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:50:58,781] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:50:58,782] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:50:58,783] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:50:58,783] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:50:58,788] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:50:58,789] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:50:58 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:50:58,809] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:50:58,809] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:50:58,809] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:50:58,814] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:50:58,817] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:50:58,837] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:50:58,841] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:50:58,845] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:50:58,868] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:50:58,884] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:50:58,886] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:50:58,891] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:50:58,899] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:50:58,903] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:50:58,966] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:50:58,966] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:50:58,967] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:50:58,973] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:50:58,973] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:50:58,974] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:50:58,975] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:50:58,976] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:50:58,976] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboWebServiceDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboWebServiceDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:50:58,999] DEBUG | Loaded 18 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:50:59,000] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@14653a3: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:50:59,010] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,011] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,019] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,022] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,043] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,043] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,044] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,045] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,045] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,045] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,046] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,046] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,047] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,047] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,050] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,050] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,050] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,050] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,051] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,051] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,051] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,051] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,052] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,052] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,053] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@15872f5] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:50:59,054] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@13a3d36] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:50:59,056] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@190dc79] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:50:59,058] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14653a3: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:50:59,058] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,059] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,063] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,083] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,083] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,084] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,086] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,090] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,090] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,091] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,093] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,101] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,101] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,101] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,103] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,103] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,103] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,104] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,105] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,106] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,106] DEBUG | Creating shared instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,107] DEBUG | Creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,108] DEBUG | Eagerly caching bean 'webservice' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,109] DEBUG | Finished creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,109] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,109] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,110] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,112] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,113] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,113] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,113] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,114] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,114] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,115] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,115] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,116] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,116] DEBUG | Creating shared instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,116] DEBUG | Creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,117] DEBUG | Eagerly caching bean 'webServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,118] DEBUG | Finished creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,118] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,118] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,121] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,205] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,218] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,233] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,235] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,237] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:50:59,239] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,240] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,240] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,241] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,241] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,244] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,245] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,246] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,247] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:50:59,248] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,249] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,250] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,250] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,250] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,252] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,253] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,253] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,254] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:50:59,254] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,255] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,255] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,255] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:50:59,255] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:50:59,257] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:50:59,260] DEBUG | Returning cached instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,261] DEBUG | Returning cached instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,262] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:50:59,263] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,264] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,264] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:50:59,264] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,264] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,265] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,265] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,265] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,265] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,266] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@d8fd1a] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:50:59,267] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,270] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,270] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,271] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,271] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:50:59,272] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:50:59,335] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,345] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,355] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,367] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:50:59,367] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659288, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:50:59,368] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659288 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5592&registry=zookeeper&timestamp=1407138659280, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:50:59,374] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,385] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,403] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,424] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,435] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,472] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:50:59,515] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:50:59,520] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,532] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138086435 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105832 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105832, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9096&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138085744 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138104622 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138104622, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9096&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138087728 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105394 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6964&revision=1.0-SNAPSHOT&side=consumer&timestamp=1407138105394, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:50:59,543] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:50:59,543] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:50:59,548] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,548] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,549] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,549] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,549] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,550] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,550] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,550] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,550] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,551] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,551] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,551] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,551] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,552] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,552] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:50:59,553] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@71d29a | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:50:59,554] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:50:59,562] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:50:59,562] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:50:59,563] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:50:59,564] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:50:59,621] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:50:59,653] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0007, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:50:59,654] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:50:59,654] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:50:59,654] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:50:59,654] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:50:59,656] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659288, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:50:59,695] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474837055,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:50:59,730] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474837056,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:50:59,768] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474837057,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:50:59,807] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474837058,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5592%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138659288,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5592%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138659288  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:50:59,810] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659288, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:50:59,843] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474837059,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:50:59,883] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474837060,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:50:59,913] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474837061,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:50:59,920] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474837061,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:50:59,923] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474837061,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:50:59,923] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659288, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659288], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:50:59,931] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,939] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:50:59,947] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:50:59,964] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:50:59,964] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659955, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:50:59,964] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659955 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5592&registry=zookeeper&timestamp=1407138659953, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:50:59,972] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:51:00,972] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:51:00,995] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@1e75e89] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:51:00,997] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:51:01,008] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659955, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:51:01,093] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474837063,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,129] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837064,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,163] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837065,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,191] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474837066,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5592%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138659955,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5592%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138659955  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,192] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659955, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:51:01,225] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474837067,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,259] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837068,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,294] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837069,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,295] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474837069,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,297] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474837069,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,297] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659955, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659955], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:51:01,298] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:51:01,309] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:51:01,325] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:51:01,325] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5592&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138661318, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:51:01,325] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5592&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138661318 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5592&registry=zookeeper&timestamp=1407138661304, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:51:01,363] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5592&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138661318, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:51:01,393] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474837070,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,418] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837071,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,443] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837072,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,481] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837073,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5592%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407138661318,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5592%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407138661318  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,481] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5592&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138661318, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:51:01,512] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837074,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,551] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837075,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,588] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837076,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,590] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474837076,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,591] DEBUG | Reading reply sessionid:0x2479fbe4cae0007, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474837076,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:51:01,592] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5592&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138661318, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5592&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138661318], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:51:01,593] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:51:01,669] DEBUG | Using org.apache.cxf.common.logging.Log4jLogger for logging. | [main] org.apache.cxf.common.logging.LogUtils.<clinit>(140)
[VAMS][2014-08-04 15:51:01,704] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
java.lang.IllegalStateException: Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:518)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:319)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:333)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NoClassDefFoundError: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.rpc.protocol.webservice.WebServiceProtocol.<init>(WebServiceProtocol.java:64)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:506)
	... 60 more
Caused by: java.lang.ClassNotFoundException: org.apache.cxf.transport.http.HTTPTransportFactory
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:375)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
	... 68 more
[VAMS][2014-08-04 15:51:11,592] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0007 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:52:47,755] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:52:47,802] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:52:47,803] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:52:47,805] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:52:47,806] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:52:47,807] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:52:47,808] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:52:47,813] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:52:47,814] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:52:47 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:52:47,833] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:52:47,834] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:52:47,834] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:52:47,839] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:52:47,843] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:52:47,860] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:52:47,864] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:52:47,870] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:52:47,893] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:52:47,908] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:52:47,911] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:52:47,917] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:52:47,925] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:52:47,930] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:52:47,993] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:52:47,993] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:52:47,994] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:52:48,000] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:52:48,001] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:52:48,002] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:52:48,002] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:52:48,003] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:52:48,004] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboWebServiceDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboWebServiceDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:52:48,028] DEBUG | Loaded 18 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:52:48,029] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:52:48,039] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,042] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,053] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,055] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,071] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,071] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,073] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,073] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,073] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,074] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,074] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,075] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,075] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,076] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,078] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,078] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,078] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,079] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,079] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,079] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,079] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,080] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,080] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,080] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,081] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1d6d61d] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:52:48,083] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@17447c5] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:52:48,085] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@bc22eb] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:52:48,088] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:52:48,088] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,088] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,092] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,112] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,113] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,113] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,114] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,118] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,118] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,118] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,120] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,128] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,128] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,129] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,130] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,130] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,131] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,131] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,132] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,133] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,133] DEBUG | Creating shared instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,134] DEBUG | Creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,135] DEBUG | Eagerly caching bean 'webservice' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,135] DEBUG | Finished creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,136] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,136] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,137] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,140] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,140] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,140] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,141] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,142] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,142] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,143] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,143] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,144] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,144] DEBUG | Creating shared instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,145] DEBUG | Creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,145] DEBUG | Eagerly caching bean 'webServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,146] DEBUG | Finished creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,146] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,147] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,151] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,238] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,254] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,270] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,271] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,273] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:52:48,274] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,275] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,276] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,277] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,277] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,279] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,279] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,280] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,280] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:52:48,281] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,281] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,282] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,282] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,282] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,284] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,285] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,285] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,286] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:52:48,286] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,287] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,287] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,288] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:52:48,288] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:52:48,290] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:52:48,292] DEBUG | Returning cached instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,292] DEBUG | Returning cached instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,293] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:52:48,294] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,294] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,295] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:52:48,295] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,295] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,295] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,296] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,296] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,296] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,297] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1ec41c0] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:52:48,298] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,300] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,300] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,300] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,301] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:52:48,301] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:52:48,359] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,371] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,381] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,394] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:52:48,395] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138768315, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:52:48,395] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138768315 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=6796&registry=zookeeper&timestamp=1407138768307, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:52:48,400] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,410] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,429] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,449] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,464] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,500] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:52:48,547] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:52:48,553] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:48,571] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659955, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5592&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138659288, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5592&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138661318, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:52:48,585] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:52:48,585] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:52:48,591] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,591] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,591] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,592] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,592] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,592] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,593] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,593] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,593] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,593] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,594] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,594] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,594] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,595] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,595] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:52:48,596] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@3c40f0 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:52:48,598] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:52:48,606] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:52:48,606] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:52:48,607] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:52:48,609] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:52:48,672] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:52:49,114] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479fbe4cc60006, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:52:49,117] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:52:49,118] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:52:49,118] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:52:49,119] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:52:49,121] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138768315, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:52:49,218] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474837079,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:49,261] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474837080,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:49,294] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474837081,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:49,306] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474837082,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6796%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138768315,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D6796%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138768315  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:49,308] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138768315, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:52:49,331] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474837083,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:49,359] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474837084,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:49,405] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474837085,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:49,411] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474837085,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:49,416] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474837085,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:49,416] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138768315, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138768315], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:52:49,425] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:49,434] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:49,442] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:52:49,455] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:52:49,455] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138769447, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:52:49,455] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138769447 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=6796&registry=zookeeper&timestamp=1407138769446, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:52:49,465] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:52:50,471] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:52:50,496] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@28318d] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:52:50,498] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:52:50,509] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138769447, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:52:50,797] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474837086,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,054] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837087,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,207] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837088,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,240] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474837089,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D6796%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138769447,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D6796%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138769447  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,241] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138769447, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:52:51,272] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474837090,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,305] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837091,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,342] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837092,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,343] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474837092,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,345] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474837092,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,345] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138769447, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138769447], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:52:51,346] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:52:51,356] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:52:51,378] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:52:51,378] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6796&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138771370, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:52:51,378] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6796&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138771370 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=6796&registry=zookeeper&timestamp=1407138771351, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:52:51,416] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6796&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138771370, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:52:51,433] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474837093,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,470] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837094,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,508] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837095,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,540] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837096,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D6796%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407138771370,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D6796%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407138771370  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,540] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6796&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138771370, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:52:51,567] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837097,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,604] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837098,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,641] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837099,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,642] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474837099,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,643] DEBUG | Reading reply sessionid:0x1479fbe4cc60006, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474837099,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:52:51,644] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6796&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138771370, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6796&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138771370], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:52:51,644] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:52:51,708] DEBUG | Using org.apache.cxf.common.logging.Log4jLogger for logging. | [main] org.apache.cxf.common.logging.LogUtils.<clinit>(140)
[VAMS][2014-08-04 15:52:51,743] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
java.lang.IllegalStateException: Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:518)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:319)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:333)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NoClassDefFoundError: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.rpc.protocol.webservice.WebServiceProtocol.<init>(WebServiceProtocol.java:64)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:506)
	... 60 more
Caused by: java.lang.ClassNotFoundException: org.apache.cxf.transport.http.HTTPTransportFactory
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:375)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
	... 68 more
[VAMS][2014-08-04 15:53:01,646] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60006 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:55:05,831] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 15:55:05,876] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:55:05,876] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:55:05,879] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:55:05,879] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:55:05,881] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:55:05,881] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:55:05,887] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 15:55:05,888] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 15:55:05 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 15:55:05,907] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:55:05,908] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:55:05,908] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:55:05,913] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 15:55:05,917] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 15:55:05,937] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 15:55:05,940] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 15:55:05,942] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:55:05,964] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:55:05,980] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:55:05,983] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 15:55:05,988] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 15:55:05,997] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 15:55:06,000] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 15:55:06,072] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:55:06,073] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 15:55:06,073] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 15:55:06,081] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 15:55:06,081] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:55:06,083] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:55:06,084] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 15:55:06,086] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 15:55:06,087] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboWebServiceDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboWebServiceDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 15:55:06,110] DEBUG | Loaded 18 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 15:55:06,111] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1d318f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 15:55:06,122] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,123] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,134] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,137] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,152] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,153] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,154] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,154] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,154] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,155] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,155] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,155] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,156] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,156] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,158] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,158] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,158] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,159] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,159] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,159] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,159] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,160] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,160] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,160] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,162] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e33bb8] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 15:55:06,163] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@88b858] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 15:55:06,164] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@17aa55b] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 15:55:06,166] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1d318f: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 15:55:06,166] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,167] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,170] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,190] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,190] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,190] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,192] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,197] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,197] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,198] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,200] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,208] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,208] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,208] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,210] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,210] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,210] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,211] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,212] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,213] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,213] DEBUG | Creating shared instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,213] DEBUG | Creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,214] DEBUG | Eagerly caching bean 'webservice' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,215] DEBUG | Finished creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,215] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,215] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,216] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,219] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,220] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,220] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,220] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,221] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,222] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,222] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,222] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,223] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,224] DEBUG | Creating shared instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,224] DEBUG | Creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,224] DEBUG | Eagerly caching bean 'webServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,225] DEBUG | Finished creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,226] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,226] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,230] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,326] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,345] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,364] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,366] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,369] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:55:06,370] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,370] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,371] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,371] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,371] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,373] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,373] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,374] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,374] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:55:06,375] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,375] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,376] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,376] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,376] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,380] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,381] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,381] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,382] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:55:06,383] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,383] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,384] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,384] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 15:55:06,385] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 15:55:06,387] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 15:55:06,388] DEBUG | Returning cached instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,389] DEBUG | Returning cached instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,390] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 15:55:06,391] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,391] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,393] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 15:55:06,393] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,393] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,394] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,394] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,394] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,394] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,395] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1d0e17a] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 15:55:06,395] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,398] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,399] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,399] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,399] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 15:55:06,400] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:55:06,459] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,470] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,481] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,495] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:55:06,495] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138906414, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:55:06,495] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138906414 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=9036&registry=zookeeper&timestamp=1407138906407, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:55:06,500] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,512] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,532] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,558] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,571] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,610] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 15:55:06,653] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 15:55:06,658] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:06,670] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138769447, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=6796&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138768315, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=6796&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138771370, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 15:55:06,681] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 15:55:06,681] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 15:55:06,687] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,687] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,688] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,688] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,688] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,689] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,689] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,689] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,690] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,690] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,691] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,691] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,691] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,691] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,692] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 15:55:06,693] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@71d29a | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 15:55:06,695] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 15:55:06,703] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 15:55:06,703] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 15:55:06,704] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 15:55:06,705] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 15:55:06,773] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 15:55:06,939] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0008, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 15:55:06,941] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 15:55:06,941] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 15:55:06,941] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 15:55:06,941] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 15:55:06,942] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138906414, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:55:06,983] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474837103,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:07,023] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474837104,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:07,060] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474837105,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:07,087] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474837106,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9036%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138906414,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D9036%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138906414  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:07,088] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138906414, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:55:07,122] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474837107,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:07,161] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474837108,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:07,186] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474837109,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:07,191] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474837109,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:07,195] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474837109,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:07,196] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138906414, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138906414], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:55:07,205] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:07,216] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:07,224] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:55:07,239] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:55:07,240] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138907232, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:55:07,240] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138907232 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=9036&registry=zookeeper&timestamp=1407138907230, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:55:07,248] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 15:55:08,261] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 15:55:08,283] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@1461b5b] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 15:55:08,286] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 15:55:08,297] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138907232, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:55:08,313] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474837110,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,339] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837111,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,363] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837112,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,376] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474837113,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D9036%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138907232,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D9036%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407138907232  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,377] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138907232, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:55:08,409] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474837114,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,446] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837115,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,484] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837116,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,486] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474837116,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,488] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474837116,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,488] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138907232, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138907232], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:55:08,489] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:55:08,498] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 15:55:08,517] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 15:55:08,517] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9036&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138908511, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 15:55:08,517] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9036&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138908511 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=9036&registry=zookeeper&timestamp=1407138908493, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 15:55:08,557] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9036&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138908511, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 15:55:08,586] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474837117,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,621] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837118,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,799] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837119,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,935] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837120,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D9036%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407138908511,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D9036%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407138908511  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,936] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9036&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138908511, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 15:55:08,971] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837121,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:08,996] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837122,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:09,035] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837123,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:09,037] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474837123,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:09,038] DEBUG | Reading reply sessionid:0x2479fbe4cae0008, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474837123,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 15:55:09,039] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9036&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138908511, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9036&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138908511], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 15:55:09,040] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 15:55:09,113] DEBUG | Using org.apache.cxf.common.logging.Log4jLogger for logging. | [main] org.apache.cxf.common.logging.LogUtils.<clinit>(140)
[VAMS][2014-08-04 15:55:09,145] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
java.lang.IllegalStateException: Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:518)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:319)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:333)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NoClassDefFoundError: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.rpc.protocol.webservice.WebServiceProtocol.<init>(WebServiceProtocol.java:64)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:506)
	... 60 more
Caused by: java.lang.ClassNotFoundException: org.apache.cxf.transport.http.HTTPTransportFactory
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:375)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
	... 68 more
[VAMS][2014-08-04 15:55:19,041] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0008 after 2ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:55:29,040] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0008 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:55:39,040] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0008 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 15:55:49,042] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0008 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:00:52,127] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 16:00:52,178] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:00:52,179] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:00:52,182] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:00:52,183] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:00:52,184] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:00:52,184] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:00:52,190] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 16:00:52,191] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 16:00:52 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 16:00:52,212] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:00:52,213] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:00:52,213] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:00:52,217] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 16:00:52,221] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 16:00:52,241] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 16:00:52,245] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 16:00:52,249] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:00:52,273] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:00:52,289] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:00:52,291] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:00:52,296] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 16:00:52,305] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 16:00:52,310] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 16:00:52,376] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:00:52,377] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:00:52,377] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:00:52,384] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 16:00:52,385] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:00:52,386] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:00:52,387] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:00:52,388] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 16:00:52,389] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboWebServiceDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboWebServiceDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 16:00:52,415] DEBUG | Loaded 18 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 16:00:52,415] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 16:00:52,426] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,427] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,437] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,440] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,459] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,459] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,461] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,461] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,462] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,462] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,462] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,463] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,463] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,463] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,466] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,466] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,466] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,466] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,467] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,467] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,467] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,467] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,468] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,468] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,469] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1d6d61d] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 16:00:52,471] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@17447c5] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 16:00:52,472] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@bc22eb] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 16:00:52,474] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 16:00:52,475] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,475] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,480] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,501] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,501] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,502] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,503] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,507] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,507] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,508] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,511] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,519] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,519] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,520] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,521] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,522] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,522] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,523] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,524] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,525] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,525] DEBUG | Creating shared instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,525] DEBUG | Creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,527] DEBUG | Eagerly caching bean 'webservice' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,528] DEBUG | Finished creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,529] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,529] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,529] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,532] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,533] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,533] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,533] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,534] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,535] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,535] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,535] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,536] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,536] DEBUG | Creating shared instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,537] DEBUG | Creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,537] DEBUG | Eagerly caching bean 'webServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,538] DEBUG | Finished creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,539] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,539] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,542] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,647] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,663] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,678] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,679] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,680] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:00:52,681] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,682] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,682] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,683] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,683] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,685] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,685] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,685] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,686] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:00:52,686] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,687] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,688] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,688] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,688] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,690] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,691] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,691] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,692] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:00:52,692] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,693] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,694] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,694] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:00:52,694] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:00:52,696] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:00:52,696] DEBUG | Returning cached instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,698] DEBUG | Returning cached instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,699] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:00:52,699] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,700] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,700] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:00:52,700] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,701] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,701] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,701] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,702] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,702] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,703] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1ec41c0] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 16:00:52,703] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,705] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,706] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,706] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,706] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:00:52,706] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:00:52,765] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,776] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,787] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,800] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:00:52,801] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139252720, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:00:52,801] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139252720 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5832&registry=zookeeper&timestamp=1407139252712, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:00:52,806] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,816] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,836] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,855] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,870] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,907] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 16:00:52,955] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 16:00:52,961] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:52,973] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138907232, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=9036&revision=1.0-SNAPSHOT&side=provider&timestamp=1407138906414, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=9036&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407138908511, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 16:00:52,984] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 16:00:52,984] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 16:00:52,990] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,990] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,990] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,991] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,991] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,991] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,991] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,992] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,992] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,992] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,992] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,993] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,993] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,993] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,993] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:00:52,994] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1cb4cae | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 16:00:52,996] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 16:00:53,005] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 16:00:53,005] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 16:00:53,006] INFO | Opening socket connection to server /192.168.1.35:2182 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 16:00:53,007] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2182, initiating session | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 16:00:53,067] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2182 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 16:00:53,104] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2182, sessionid = 0x2479fbe4cae0009, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 16:00:53,106] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 16:00:53,106] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 16:00:53,106] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 16:00:53,106] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 16:00:53,108] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139252720, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:00:53,132] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474837126,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:53,176] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474837127,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:53,201] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474837128,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:53,227] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474837129,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139252720,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139252720  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:53,228] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139252720, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:00:53,260] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474837130,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:53,285] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474837131,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:53,313] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474837132,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:53,318] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474837132,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:53,322] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474837132,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:53,322] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139252720, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139252720], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:00:53,331] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:53,340] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:53,349] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:00:53,379] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:00:53,380] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139253362, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:00:53,381] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139253362 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5832&registry=zookeeper&timestamp=1407139253356, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:00:53,391] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 16:00:54,398] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 16:00:54,421] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@f3e133] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 16:00:54,424] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 16:00:54,440] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139253362, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:00:54,494] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474837133,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,518] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837134,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,539] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837135,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,563] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474837136,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139253362,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139253362  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,563] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139253362, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:00:54,610] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474837137,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,647] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837138,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,676] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837139,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,677] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474837139,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,679] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474837139,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,679] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139253362, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139253362], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:00:54,680] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:00:54,690] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:00:54,708] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:00:54,708] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5832&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139254701, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:00:54,708] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5832&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139254701 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5832&registry=zookeeper&timestamp=1407139254684, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:00:54,744] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5832&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139254701, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:00:54,771] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474837140,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,807] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837141,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,832] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837142,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,869] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837143,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5832%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139254701,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5832%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139254701  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,869] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5832&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139254701, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:00:54,894] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837144,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,919] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837145,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,930] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837146,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,931] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474837146,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,932] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474837146,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:00:54,932] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5832&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139254701, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5832&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139254701], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:00:54,933] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:00:55,000] DEBUG | Using org.apache.cxf.common.logging.Log4jLogger for logging. | [main] org.apache.cxf.common.logging.LogUtils.<clinit>(140)
[VAMS][2014-08-04 16:00:55,031] ERROR | Context initialization failed | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
java.lang.IllegalStateException: Extension instance(name: webservice, class: interface com.alibaba.dubbo.rpc.Protocol)  could not be instantiated: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:518)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:319)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:333)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:371)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:307)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:203)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NoClassDefFoundError: org/apache/cxf/transport/http/HTTPTransportFactory
	at com.alibaba.dubbo.rpc.protocol.webservice.WebServiceProtocol.<init>(WebServiceProtocol.java:64)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at com.alibaba.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:506)
	... 60 more
Caused by: java.lang.ClassNotFoundException: org.apache.cxf.transport.http.HTTPTransportFactory
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:375)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
	... 68 more
[VAMS][2014-08-04 16:01:04,933] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:01:14,935] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:01:24,936] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:01:34,936] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:01:44,937] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:01:54,936] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:02:04,939] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:02:14,939] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:02:24,940] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:02:34,940] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:02:44,940] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:02:54,942] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:03:04,944] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:03:14,945] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:03:24,946] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:03:34,948] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:03:44,949] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:03:54,950] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:04:04,951] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:04:14,951] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 1ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:04:24,951] DEBUG | Got ping response for sessionid: 0x2479fbe4cae0009 after 0ms | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:04:31,609] INFO | Closing Root WebApplicationContext: startup date [Mon Aug 04 16:00:52 CST 2014]; root of context hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.doClose(873)
[VAMS][2014-08-04 16:04:31,610] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:31,610] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:31,611] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:31,611] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:31,611] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:31,611] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1713b42: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 16:04:31,611] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:04:31,612] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:04:31,612] INFO |  [DUBBO] Unregister: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5832&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139254701, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 16:04:31,648] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 28,2  replyHeader:: 28,21474837147,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D5832%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139254701,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:04:31,649] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5832&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139254701, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 16:04:31,650] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:04:31,650] INFO | Unbinding RMI service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' from registry at port '20882' | [Timer-1] org.springframework.remoting.rmi.RmiServiceExporter.destroy(431)
[VAMS][2014-08-04 16:04:31,651] INFO |  [DUBBO] Unregister: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139253362, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 16:04:31,668] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 29,2  replyHeader:: 29,21474837148,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D5832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139253362,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:04:31,668] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139253362, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 16:04:31,668] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:04:31,669] INFO |  [DUBBO] Unregister: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139252720, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(312)
[VAMS][2014-08-04 16:04:31,693] DEBUG | Reading reply sessionid:0x2479fbe4cae0009, packet:: clientPath:null serverPath:null finished:false header:: 30,2  replyHeader:: 30,21474837149,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D5832%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139252720,-1  response:: null | [main-SendThread(xiaohao-PC:2182)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:04:31,693] INFO |  [DUBBO] Unsubscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139252720, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(343)
[VAMS][2014-08-04 16:04:31,885] INFO | Root WebApplicationContext: initialization started | [Timer-1] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 16:04:31,935] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:31,936] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:31,939] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:31,939] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:31,941] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:31,942] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:04:31,947] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [Timer-1] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 16:04:31,948] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 16:04:31 CST 2014]; root of context hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 16:04:31,979] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:31,979] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:31,980] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:04:31,984] INFO | Loading XML bean definitions from class path resource [provider.xml] | [Timer-1] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 16:04:31,985] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [Timer-1] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 16:04:31,987] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 16:04:31,991] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 16:04:31,994] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:04:32,008] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:04:32,020] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:04:32,022] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:04:32,027] DEBUG | Loading bean definitions | [Timer-1] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 16:04:32,034] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [Timer-1] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 16:04:32,039] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [Timer-1] ?.?(?)
[VAMS][2014-08-04 16:04:32,211] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:32,212] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:32,212] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:04:32,220] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 16:04:32,221] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:04:32,222] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:04:32,223] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:04:32,225] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 16:04:32,226] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboWebServiceDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboWebServiceDemoService.class]] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 16:04:32,253] DEBUG | Loaded 18 bean definitions from location pattern [classpath:provider.xml] | [Timer-1] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 16:04:32,253] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@c8c6d9: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 16:04:32,269] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,269] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,303] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,306] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,326] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,327] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,328] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,331] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,332] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,332] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,333] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,333] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,333] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,333] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,336] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,337] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,337] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,337] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,338] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,338] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,338] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,338] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,339] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,339] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,341] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1ed7524] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 16:04:32,343] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6d23ea] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 16:04:32,346] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@150ed68] | [Timer-1] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 16:04:32,350] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@c8c6d9: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 16:04:32,351] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,351] DEBUG | Creating instance of bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,356] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,375] DEBUG | Finished creating instance of bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,375] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,376] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,377] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,380] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,381] DEBUG | Creating shared instance of singleton bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,381] DEBUG | Creating instance of bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,382] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,392] DEBUG | Finished creating instance of bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,392] DEBUG | Creating shared instance of singleton bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,392] DEBUG | Creating instance of bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,394] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,394] DEBUG | Finished creating instance of bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,394] DEBUG | Creating shared instance of singleton bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,394] DEBUG | Creating instance of bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,395] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,396] DEBUG | Finished creating instance of bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,397] DEBUG | Creating shared instance of singleton bean 'webservice' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,397] DEBUG | Creating instance of bean 'webservice' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,399] DEBUG | Eagerly caching bean 'webservice' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,400] DEBUG | Finished creating instance of bean 'webservice' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,400] DEBUG | Creating shared instance of singleton bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,400] DEBUG | Creating instance of bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,401] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,402] DEBUG | Finished creating instance of bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,402] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,402] DEBUG | Creating instance of bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,405] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,406] DEBUG | Finished creating instance of bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,407] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,407] DEBUG | Creating instance of bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,407] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,409] DEBUG | Finished creating instance of bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,409] DEBUG | Creating shared instance of singleton bean 'webServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,409] DEBUG | Creating instance of bean 'webServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,409] DEBUG | Eagerly caching bean 'webServiceDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,410] DEBUG | Finished creating instance of bean 'webServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,410] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,411] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,414] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,492] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,510] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,519] DEBUG | Returning cached instance of singleton bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,520] DEBUG | Returning cached instance of singleton bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,521] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:04:32,521] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,522] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,522] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,522] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,523] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,524] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,525] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,525] DEBUG | Returning cached instance of singleton bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,525] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:04:32,526] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,526] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,527] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,527] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,527] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,529] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,529] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,529] DEBUG | Returning cached instance of singleton bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,530] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:04:32,530] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,530] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,531] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,531] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:32,531] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:32,533] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:32,533] DEBUG | Returning cached instance of singleton bean 'webServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,533] DEBUG | Returning cached instance of singleton bean 'webservice' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,534] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:04:32,534] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,535] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,535] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:32,535] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,535] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,535] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,540] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,540] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,541] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,542] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@129dcc0] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 16:04:32,542] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,545] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,545] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,545] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,546] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:32,546] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:04:32,600] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,610] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,620] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,636] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:04:32,636] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139472561, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:04:32,636] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139472561 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5832&registry=zookeeper&timestamp=1407139472554, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:04:32,643] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,657] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,675] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,692] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,706] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:32,735] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 16:04:32,759] ERROR | Context initialization failed | [Timer-1] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139472561) Failed to bind NettyServer on /192.168.1.35:20881, cause: Failed to bind to: /0.0.0.0:20881
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo$1.filesChanged(AbstractJettyRunMojo.java:409)
	at org.mortbay.util.Scanner.reportBulkChanges(Scanner.java:493)
	at org.mortbay.util.Scanner.reportDifferences(Scanner.java:359)
	at org.mortbay.util.Scanner.scan(Scanner.java:286)
	at org.mortbay.util.Scanner$1.run(Scanner.java:246)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.35:20881, cause: Failed to bind to: /0.0.0.0:20881
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 36 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20881
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 43 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind(Native Method)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:126)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:59)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 45 more
[VAMS][2014-08-04 16:04:34,599] INFO | Closing Root WebApplicationContext: startup date [Mon Aug 04 16:04:31 CST 2014]; root of context hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.doClose(873)
[VAMS][2014-08-04 16:04:34,601] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:34,601] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:34,602] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:34,602] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:34,602] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:34,603] DEBUG | Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@c8c6d9: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(474)
[VAMS][2014-08-04 16:04:34,603] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:04:34,604] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:04:34,604] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:04:34,604] DEBUG | Invoking destroy() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(245)
[VAMS][2014-08-04 16:04:34,834] INFO | Root WebApplicationContext: initialization started | [Timer-1] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 16:04:34,884] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:34,885] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:34,887] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:34,887] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:34,889] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:34,889] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:04:34,893] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [Timer-1] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 16:04:34,893] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 16:04:34 CST 2014]; root of context hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 16:04:34,921] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:34,922] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:34,922] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:04:34,927] INFO | Loading XML bean definitions from class path resource [provider.xml] | [Timer-1] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 16:04:34,929] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [Timer-1] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 16:04:34,931] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 16:04:34,935] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 16:04:34,936] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:04:34,944] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:04:34,952] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:04:34,953] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [Timer-1] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:04:34,957] DEBUG | Loading bean definitions | [Timer-1] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 16:04:34,963] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [Timer-1] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 16:04:34,966] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [Timer-1] ?.?(?)
[VAMS][2014-08-04 16:04:35,101] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:35,101] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [Timer-1] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:04:35,102] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [Timer-1] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:04:35,107] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 16:04:35,107] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:04:35,108] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:04:35,108] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:04:35,109] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 16:04:35,110] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboWebServiceDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboWebServiceDemoService.class]] | [Timer-1] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 16:04:35,127] DEBUG | Loaded 18 bean definitions from location pattern [classpath:provider.xml] | [Timer-1] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 16:04:35,127] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@1556f4c: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 16:04:35,136] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,136] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,145] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,147] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,161] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,161] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,164] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,165] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,165] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,165] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,165] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,165] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,166] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,166] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,167] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,167] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,168] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,168] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,168] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,168] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,168] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,168] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,169] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,169] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,170] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e87512] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 16:04:35,171] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5df3c5] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 16:04:35,172] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@2f3bf0] | [Timer-1] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 16:04:35,174] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1556f4c: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [Timer-1] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 16:04:35,174] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,174] DEBUG | Creating instance of bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,177] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,193] DEBUG | Finished creating instance of bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,193] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,193] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,194] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,197] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,197] DEBUG | Creating shared instance of singleton bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,197] DEBUG | Creating instance of bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,198] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,204] DEBUG | Finished creating instance of bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,205] DEBUG | Creating shared instance of singleton bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,205] DEBUG | Creating instance of bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,206] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,207] DEBUG | Finished creating instance of bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,207] DEBUG | Creating shared instance of singleton bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,207] DEBUG | Creating instance of bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,209] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,210] DEBUG | Finished creating instance of bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,210] DEBUG | Creating shared instance of singleton bean 'webservice' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,210] DEBUG | Creating instance of bean 'webservice' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,211] DEBUG | Eagerly caching bean 'webservice' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,212] DEBUG | Finished creating instance of bean 'webservice' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,212] DEBUG | Creating shared instance of singleton bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,212] DEBUG | Creating instance of bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,213] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,214] DEBUG | Finished creating instance of bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,214] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,214] DEBUG | Creating instance of bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,214] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,215] DEBUG | Finished creating instance of bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,215] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,216] DEBUG | Creating instance of bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,216] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,217] DEBUG | Finished creating instance of bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,217] DEBUG | Creating shared instance of singleton bean 'webServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,217] DEBUG | Creating instance of bean 'webServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,217] DEBUG | Eagerly caching bean 'webServiceDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,218] DEBUG | Finished creating instance of bean 'webServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,218] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,218] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,223] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,297] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,309] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,318] DEBUG | Returning cached instance of singleton bean 'demoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,319] DEBUG | Returning cached instance of singleton bean 'dubbo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,323] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:04:35,324] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,325] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,325] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,325] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,325] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,328] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,328] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,328] DEBUG | Returning cached instance of singleton bean 'rmi' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,329] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:04:35,329] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,329] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,330] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,330] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,330] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,332] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,332] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,333] DEBUG | Returning cached instance of singleton bean 'hessian' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,333] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:04:35,334] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,334] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,334] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,334] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:04:35,334] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:04:35,336] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' to allow for resolving potential circular references | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:04:35,336] DEBUG | Returning cached instance of singleton bean 'webServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,336] DEBUG | Returning cached instance of singleton bean 'webservice' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,337] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:04:35,337] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,338] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,338] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:04:35,338] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,339] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,339] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,339] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,339] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,339] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,340] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@fe6707] | [Timer-1] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 16:04:35,341] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,342] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,343] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,343] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,343] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [Timer-1] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:04:35,343] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:04:35,428] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,443] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,455] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,466] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:04:35,466] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139475355, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:04:35,467] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139475355 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=5832&registry=zookeeper&timestamp=1407139475348, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:04:35,472] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,486] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,519] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,538] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,553] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:04:35,591] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [Timer-1] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 16:04:35,624] ERROR | Context initialization failed | [Timer-1] org.springframework.web.context.ContextLoader.initWebApplicationContext(331)
com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139475355) Failed to bind NettyServer on /192.168.1.35:20881, cause: Failed to bind to: /0.0.0.0:20881
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:540)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:110)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo$1.filesChanged(AbstractJettyRunMojo.java:409)
	at org.mortbay.util.Scanner.reportBulkChanges(Scanner.java:493)
	at org.mortbay.util.Scanner.reportDifferences(Scanner.java:359)
	at org.mortbay.util.Scanner.scan(Scanner.java:286)
	at org.mortbay.util.Scanner$1.run(Scanner.java:246)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.35:20881, cause: Failed to bind to: /0.0.0.0:20881
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 36 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20881
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 43 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind(Native Method)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:126)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:59)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 45 more
[VAMS][2014-08-04 16:05:02,144] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 16:05:02,193] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:05:02,194] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:05:02,196] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:05:02,197] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:05:02,198] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:05:02,198] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:05:02,202] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 16:05:02,203] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 16:05:02 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 16:05:02,223] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:05:02,224] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:05:02,224] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:05:02,229] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 16:05:02,232] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 16:05:02,254] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 16:05:02,258] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 16:05:02,262] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:05:02,282] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:05:02,297] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:05:02,300] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:05:02,304] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 16:05:02,314] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 16:05:02,320] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 16:05:02,379] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:05:02,379] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:05:02,379] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:05:02,388] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 16:05:02,388] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:05:02,390] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:05:02,391] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:05:02,392] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 16:05:02,392] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboWebServiceDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboWebServiceDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 16:05:02,412] DEBUG | Loaded 18 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 16:05:02,413] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@b7cd92: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 16:05:02,424] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,424] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,437] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,439] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,456] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,456] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,457] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,458] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,458] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,459] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,460] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,460] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,460] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,460] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,464] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,464] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,465] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,465] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,465] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,466] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,466] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,466] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,466] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,467] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,469] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1205d8d] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 16:05:02,470] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@106def2] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 16:05:02,473] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@a218a5] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 16:05:02,475] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b7cd92: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 16:05:02,476] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,476] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,480] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,499] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,500] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,500] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,502] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,505] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,505] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,505] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,508] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,516] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,516] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,516] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,518] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,518] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,520] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,521] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,523] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,523] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,524] DEBUG | Creating shared instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,524] DEBUG | Creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,525] DEBUG | Eagerly caching bean 'webservice' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,526] DEBUG | Finished creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,526] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,527] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,527] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,529] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,529] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,529] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,530] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,531] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,531] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,531] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,532] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,533] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,533] DEBUG | Creating shared instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,533] DEBUG | Creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,534] DEBUG | Eagerly caching bean 'webServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,535] DEBUG | Finished creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,535] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,535] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,539] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,630] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,649] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,661] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,662] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,664] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:05:02,665] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,666] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,667] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,667] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,668] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,670] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,670] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,670] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,671] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:05:02,672] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,672] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,673] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,673] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,673] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,678] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,678] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,679] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,679] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:05:02,680] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,680] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,681] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,681] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:05:02,681] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:05:02,683] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:05:02,684] DEBUG | Returning cached instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,684] DEBUG | Returning cached instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,685] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:05:02,686] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,686] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,687] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:05:02,688] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,688] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,688] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,688] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,689] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,689] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,690] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@c18e99] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 16:05:02,691] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,693] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,693] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,693] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,694] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:05:02,694] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:05:02,750] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,761] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,774] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,784] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:05:02,785] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139502710, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:05:02,785] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139502710 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=3048&registry=zookeeper&timestamp=1407139502703, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:05:02,790] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,800] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,823] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,845] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,861] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,899] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 16:05:02,940] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 16:05:02,944] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:02,959] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139253362, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=5832&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139252720, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=5832&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139254701, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 16:05:02,968] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 16:05:02,968] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 16:05:02,973] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,973] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,974] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,974] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,974] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,974] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,975] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,975] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,975] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,975] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,976] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,976] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,977] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,977] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,977] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:05:02,979] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1a82e92 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 16:05:02,981] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 16:05:02,989] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 16:05:02,990] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 16:05:02,989] INFO | Opening socket connection to server /192.168.1.35:2183 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 16:05:02,992] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2183, initiating session | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 16:05:03,050] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2183 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 16:05:03,209] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2183, sessionid = 0x3479fbe90820005, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 16:05:03,211] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 16:05:03,211] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 16:05:03,212] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 16:05:03,212] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 16:05:03,214] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139502710, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:05:03,261] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474837152,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:03,307] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474837153,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:03,335] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474837154,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:03,361] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474837155,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D3048%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139502710,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D3048%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139502710  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:03,362] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139502710, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:05:03,397] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474837156,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:03,434] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474837157,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:03,459] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474837158,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:03,464] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474837158,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:03,468] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474837158,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:03,469] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139502710, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139502710], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:05:03,481] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:03,491] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:03,499] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:05:03,521] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:05:03,521] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139503506, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:05:03,522] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139503506 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=3048&registry=zookeeper&timestamp=1407139503505, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:05:03,529] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 16:05:04,544] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 16:05:04,565] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@14c7cd] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 16:05:04,568] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 16:05:04,577] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139503506, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:05:04,612] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474837159,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:04,771] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837160,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,113] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837161,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,182] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474837162,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D3048%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139503506,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D3048%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139503506  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,183] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139503506, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:05:05,214] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474837163,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,247] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837164,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,285] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837165,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,286] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474837165,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,288] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474837165,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,288] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139503506, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139503506], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:05:05,289] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:05:05,297] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:05:05,314] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:05:05,314] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505306, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:05:05,315] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505306 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=3048&registry=zookeeper&timestamp=1407139505293, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:05:05,354] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505306, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:05:05,383] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474837166,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,409] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837167,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,422] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837168,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,447] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837169,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D3048%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139505306,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D3048%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139505306  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,447] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505306, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:05:05,478] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837170,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,503] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837171,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,540] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837172,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,541] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474837172,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,542] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474837172,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:05,542] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505306, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505306], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:05:05,543] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:05:05,613] DEBUG | Using org.apache.cxf.common.logging.Log4jLogger for logging. | [main] org.apache.cxf.common.logging.LogUtils.<clinit>(140)
[VAMS][2014-08-04 16:05:05,674] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:05:05,674] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService to url webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505661, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:05:05,674] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService url webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505661 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=3048&registry=zookeeper&timestamp=1407139505549, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:05:05,724] INFO | Creating Service {http://service.dubbodemo.xiaohao.com/}IDubboWebServiceDemoService from class com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService | [main] org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(441)
[VAMS][2014-08-04 16:05:05,883] DEBUG | Created JAXBContext "jar:file:/D:/dev/repo/com/sun/xml/bind/jaxb-impl/2.1.13/jaxb-impl-2.1.13.jar!/com/sun/xml/bind/v2/runtime/JAXBContextImpl.class Build-Id: 2.1.13
Classes known to this context:
  [B
  boolean
  byte
  char
  com.sun.xml.bind.api.CompositeStructure
  double
  float
  int
  java.awt.Image
  java.io.File
  java.lang.Boolean
  java.lang.Byte
  java.lang.Character
  java.lang.Class
  java.lang.Double
  java.lang.Float
  java.lang.Integer
  java.lang.Long
  java.lang.Object
  java.lang.Short
  java.lang.String
  java.lang.Void
  java.math.BigDecimal
  java.math.BigInteger
  java.net.URI
  java.net.URL
  java.util.Calendar
  java.util.Date
  java.util.GregorianCalendar
  java.util.UUID
  javax.activation.DataHandler
  javax.xml.bind.JAXBElement
  javax.xml.datatype.Duration
  javax.xml.datatype.XMLGregorianCalendar
  javax.xml.namespace.QName
  javax.xml.transform.Source
  long
  short
  void
" with classes []. | [main] org.apache.cxf.jaxb.JAXBDataBinding.initialize(328)
[VAMS][2014-08-04 16:05:06,089] INFO | Setting the server's publish address to be /provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService | [main] org.apache.cxf.endpoint.ServerImpl.initDestination(94)
[VAMS][2014-08-04 16:05:06,095] DEBUG | Server is starting. | [main] org.apache.cxf.endpoint.ServerImpl.start(126)
[VAMS][2014-08-04 16:05:06,096] DEBUG | registering incoming observer: org.apache.cxf.transport.ChainInitiationObserver@1aaf194 | [main] org.apache.cxf.transport.AbstractObservable.setMessageObserver(45)
[VAMS][2014-08-04 16:05:06,097] DEBUG | register the server to serverRegistry  | [main] org.apache.cxf.endpoint.ServerImpl.start(136)
[VAMS][2014-08-04 16:05:06,098] INFO |  [DUBBO] Register: webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505661, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:05:06,137] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 28,1  replyHeader:: 28,21474837173,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:06,172] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474837174,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:06,206] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474837175,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:06,237] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474837176,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers/webservice%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%2526methods%253DwebServiceSayHello%2526pid%253D3048%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139505661,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers/webservice%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%2526methods%253DwebServiceSayHello%2526pid%253D3048%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139505661  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:06,238] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505661, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:05:06,275] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 32,1  replyHeader:: 32,21474837177,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:06,312] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 33,1  replyHeader:: 33,21474837178,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:06,324] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474837179,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:06,326] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 35,3  replyHeader:: 35,21474837179,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators,T  response:: s{21474837179,21474837179,1407139506313,1407139506313,0,0,0,0,0,0,21474837179}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:06,328] DEBUG | Reading reply sessionid:0x3479fbe90820005, packet:: clientPath:null serverPath:null finished:false header:: 36,8  replyHeader:: 36,21474837179,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:05:06,330] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505661, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505661], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:05:06,332] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:05:06,332] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:05:06,332] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:05:06,333] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 16:05:06,334] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 16:05:06,334] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 16:05:06,335] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 16:05:06,335] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:05:06,335] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:05:06,336] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 16:05:06,336] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 16:05:06,338] INFO | Root WebApplicationContext: initialization completed in 4192 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 16:05:16,328] DEBUG | Got ping response for sessionid: 0x3479fbe90820005 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:05:26,329] DEBUG | Got ping response for sessionid: 0x3479fbe90820005 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:05:36,329] DEBUG | Got ping response for sessionid: 0x3479fbe90820005 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:05:41,994] WARN | Can't find the the request for http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService's Observer  | [btpool0-0] org.apache.cxf.transport.servlet.ServletController.invoke(149)
[VAMS][2014-08-04 16:05:46,330] DEBUG | Got ping response for sessionid: 0x3479fbe90820005 after 1ms | [main-SendThread(xiaohao-PC:2183)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:05:47,305] WARN | Can't find the the request for http://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService's Observer  | [btpool0-0] org.apache.cxf.transport.servlet.ServletController.invoke(149)
[VAMS][2014-08-04 16:08:00,349] INFO | Root WebApplicationContext: initialization started | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(285)
[VAMS][2014-08-04 16:08:00,397] DEBUG | Adding [servletConfigInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:00,398] DEBUG | Adding [servletContextInitParams] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:00,400] DEBUG | Adding [jndiProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:00,401] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:00,402] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:00,402] DEBUG | Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:08:00,405] DEBUG | Replacing [servletContextInitParams] PropertySource with [servletContextInitParams] | [main] org.springframework.core.env.MutablePropertySources.replace(175)
[VAMS][2014-08-04 16:08:00,407] INFO | Refreshing Root WebApplicationContext: startup date [Mon Aug 04 16:08:00 CST 2014]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513)
[VAMS][2014-08-04 16:08:00,427] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:00,428] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:00,428] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:08:00,432] INFO | Loading XML bean definitions from class path resource [provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316)
[VAMS][2014-08-04 16:08:00,435] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2014-08-04 16:08:00,453] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2014-08-04 16:08:00,460] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd=org/springframework/webflow/config/spring-webflow-config-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/orcl/spring-data-orcl-1.0.xsd=org/springframework/data/jdbc/config/oracle/spring-data-orcl-1.0.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd=org/springframework/webflow/config/spring-webflow-config-2.3.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd=org/springframework/webflow/config/spring-webflow-config-2.4.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2014-08-04 16:08:00,464] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:08:00,483] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:08:00,498] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:08:00,501] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2014-08-04 16:08:00,506] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(108)
[VAMS][2014-08-04 16:08:00,517] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/webflow-config=org.springframework.webflow.config.WebFlowConfigNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/orcl=org.springframework.data.jdbc.config.oracle.DataOrclNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2014-08-04 16:08:00,523] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2014-08-04 16:08:00,589] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:00,589] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(110)
[VAMS][2014-08-04 16:08:00,590] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(126)
[VAMS][2014-08-04 16:08:00,600] DEBUG | Looking for matching resources in directory tree [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(556)
[VAMS][2014-08-04 16:08:00,600] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:08:00,601] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:08:00,602] DEBUG | Searching directory [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider] for files matching pattern [F:/myCode/dubbodemo/provider/target/classes/com/xiaohao/*/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(618)
[VAMS][2014-08-04 16:08:00,604] DEBUG | Looking for matching resources in jar file [file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(470)
[VAMS][2014-08-04 16:08:00,604] DEBUG | Resolved location pattern [classpath*:com/xiaohao/*/**/*.class] to resources [file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboHessianDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboRmiDemoServiceImpl.class], file [F:\myCode\dubbodemo\provider\target\classes\com\xiaohao\dubbodemo\provider\DubboWebServiceDemoServiceImpl.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboHessianDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboRmiDemoService.class], URL [jar:file:/D:/dev/repo/com/xiaohao/serviceapi/1.0-SNAPSHOT/serviceapi-1.0-SNAPSHOT.jar!/com/xiaohao/dubbodemo/service/IDubboWebServiceDemoService.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(357)
[VAMS][2014-08-04 16:08:00,624] DEBUG | Loaded 18 bean definitions from location pattern [classpath:provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(223)
[VAMS][2014-08-04 16:08:00,625] DEBUG | Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@b7cd92: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(543)
[VAMS][2014-08-04 16:08:00,638] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,638] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,650] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,652] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,666] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,666] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,667] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,667] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,667] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,668] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,668] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,668] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,669] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,669] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,671] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,671] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,672] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,672] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,672] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,672] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,673] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,673] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,673] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,673] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,675] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1205d8d] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(649)
[VAMS][2014-08-04 16:08:00,677] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@106def2] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(673)
[VAMS][2014-08-04 16:08:00,679] DEBUG | Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@a218a5] | [main] org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(85)
[VAMS][2014-08-04 16:08:00,682] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b7cd92: defining beans [dubboDemo,com.alibaba.dubbo.config.RegistryConfig,dubbo,rmi,hessian,webservice,demoService,rmiDemoService,hessianDemoService,webServiceDemoService,com.xiaohao.dubbodemo.service.IDubboDemoService,com.xiaohao.dubbodemo.service.IDubboRmiDemoService,com.xiaohao.dubbodemo.service.IDubboHessianDemoService,com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(672)
[VAMS][2014-08-04 16:08:00,682] DEBUG | Creating shared instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,682] DEBUG | Creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,687] DEBUG | Eagerly caching bean 'dubboDemo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,713] DEBUG | Finished creating instance of bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,713] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,714] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,716] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,723] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,724] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,724] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,728] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,739] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,740] DEBUG | Creating shared instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,740] DEBUG | Creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,742] DEBUG | Eagerly caching bean 'rmi' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,744] DEBUG | Finished creating instance of bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,747] DEBUG | Creating shared instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,747] DEBUG | Creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,749] DEBUG | Eagerly caching bean 'hessian' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,751] DEBUG | Finished creating instance of bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,752] DEBUG | Creating shared instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,752] DEBUG | Creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,756] DEBUG | Eagerly caching bean 'webservice' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,757] DEBUG | Finished creating instance of bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,757] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,758] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,759] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,761] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,761] DEBUG | Creating shared instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,762] DEBUG | Creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,762] DEBUG | Eagerly caching bean 'rmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,764] DEBUG | Finished creating instance of bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,765] DEBUG | Creating shared instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,765] DEBUG | Creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,765] DEBUG | Eagerly caching bean 'hessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,767] DEBUG | Finished creating instance of bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,767] DEBUG | Creating shared instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,767] DEBUG | Creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,768] DEBUG | Eagerly caching bean 'webServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,769] DEBUG | Finished creating instance of bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,769] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,769] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,773] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:00,891] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:00,909] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,920] DEBUG | Returning cached instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,921] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,922] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:08:00,923] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,924] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,924] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,924] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,925] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,927] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,927] DEBUG | Returning cached instance of singleton bean 'rmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,928] DEBUG | Returning cached instance of singleton bean 'rmi' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,928] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:08:00,929] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,929] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,929] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,930] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,930] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,934] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,934] DEBUG | Returning cached instance of singleton bean 'hessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,935] DEBUG | Returning cached instance of singleton bean 'hessian' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,936] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:08:00,937] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,938] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,938] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,939] DEBUG | Creating shared instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(220)
[VAMS][2014-08-04 16:08:00,939] DEBUG | Creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(449)
[VAMS][2014-08-04 16:08:00,942] DEBUG | Eagerly caching bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(523)
[VAMS][2014-08-04 16:08:00,942] DEBUG | Returning cached instance of singleton bean 'webServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,943] DEBUG | Returning cached instance of singleton bean 'webservice' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,943] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1595)
[VAMS][2014-08-04 16:08:00,944] DEBUG | Returning cached instance of singleton bean 'dubboDemo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,944] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,945] DEBUG | Finished creating instance of bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(477)
[VAMS][2014-08-04 16:08:00,945] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,945] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,945] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,946] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,946] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,946] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,947] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@c18e99] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(700)
[VAMS][2014-08-04 16:08:00,948] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,950] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,950] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,951] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboHessianDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,951] DEBUG | Returning cached instance of singleton bean 'com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247)
[VAMS][2014-08-04 16:08:00,951] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:08:01,007] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,017] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,030] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,040] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:08:01,041] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService to url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139680966, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:08:01,041] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboDemoService url dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139680966 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=4776&registry=zookeeper&timestamp=1407139680959, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:08:01,046] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,059] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,087] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,109] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,123] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,163] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2014-08-04 16:08:01,202] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.35:20881, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2014-08-04 16:08:01,208] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,222] INFO |  [DUBBO] Load registry store file C:\Users\xiaohao\.dubbo\dubbo-registry-192.168.1.35.cache, data: {test/com.xiaohao.dubbodemo.service.IDubboRmiDemoService=empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139503506, com.xiaohao.dubbo.demo.service.DemoService=dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274904116 dubbo://192.168.1.35:20880/com.xiaohao.dubbo.demo.service.DemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5656&side=provider&timestamp=1406274905494 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293 empty://192.168.1.35/com.xiaohao.dubbo.demo.service.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbo.demo.service.DemoService&methods=sayHello&pid=5480&side=consumer&timestamp=1406274942293, test/com.xiaohao.dubbodemo.service.IDubboDemoService=empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=3048&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139502710, test/com.xiaohao.dubbodemo.service.IDubboHessianDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505306, com.xiaohao.serviceApi.DemoService=empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=providers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075 empty://192.168.1.35/com.xiaohao.serviceApi.DemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.serviceApi.DemoService&methods=sayHello&pid=6228&side=consumer&timestamp=1406796440075, test/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService=empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=3048&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139505661, com.xiaohao.dubbodemo.service.IDubboDemoService=dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=9484&revision=1.0-SNAPSHOT&side=provider&timestamp=1406879887260 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=configurators&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489 empty://192.168.1.35/com.xiaohao.dubbodemo.service.IDubboDemoService?application=dubboDemo&category=routers&dubbo=2.5.3&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayHello&pid=8356&revision=1.0-SNAPSHOT&side=consumer&timestamp=1406879929489}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(232)
[VAMS][2014-08-04 16:08:01,232] DEBUG | Creating new ZookKeeper instance to connect to 192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183. | [main] org.I0Itec.zkclient.ZkConnection.connect(63)
[VAMS][2014-08-04 16:08:01,232] INFO | Starting ZkClient event thread. | [ZkClient-EventThread-19-192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183] org.I0Itec.zkclient.ZkEventThread.run(64)
[VAMS][2014-08-04 16:08:01,238] INFO | Client environment:zookeeper.version=3.3.6-1366786, built on 07/29/2012 06:22 GMT | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,238] INFO | Client environment:host.name=xiaohao-PC | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,238] INFO | Client environment:java.version=1.6.0_24 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,239] INFO | Client environment:java.vendor=Sun Microsystems Inc. | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,239] INFO | Client environment:java.home=C:\Program Files (x86)\Java\jdk1.6.0_24\jre | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,239] INFO | Client environment:java.class.path=C:\maven\boot\plexus-classworlds-2.4.jar;D:\Users\xiaohao\AppData\Roaming\JetBrains\IntelliJ IDEA 13.1.3\lib\idea_rt.jar | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,239] INFO | Client environment:java.library.path=C:\Program Files (x86)\Java\jdk1.6.0_24\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\maven\bin;C:\Program Files (x86)\Java\jdk1.6.0_24\bin;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;$GRAILS_HOME/bin | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,240] INFO | Client environment:java.io.tmpdir=C:\Users\xiaohao\AppData\Local\Temp\ | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,240] INFO | Client environment:java.compiler=<NA> | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,241] INFO | Client environment:os.name=Windows 7 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,241] INFO | Client environment:os.arch=x86 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,241] INFO | Client environment:os.version=6.1 | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,241] INFO | Client environment:user.name=xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,242] INFO | Client environment:user.home=C:\Users\xiaohao | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,242] INFO | Client environment:user.dir=F:\myCode\dubbodemo\provider | [main] org.apache.zookeeper.Environment.logEnv(97)
[VAMS][2014-08-04 16:08:01,244] INFO | Initiating client connection, connectString=192.168.1.35:2181,192.168.1.35:2182,192.168.1.35:2183 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1a82e92 | [main] org.apache.zookeeper.ZooKeeper.<init>(379)
[VAMS][2014-08-04 16:08:01,246] DEBUG | zookeeper.disableAutoWatchReset is false | [main] org.apache.zookeeper.ClientCnxn.<clinit>(97)
[VAMS][2014-08-04 16:08:01,253] DEBUG | Awaiting connection to Zookeeper server | [main] org.I0Itec.zkclient.ZkClient.connect(874)
[VAMS][2014-08-04 16:08:01,254] DEBUG | Waiting for keeper state SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(628)
[VAMS][2014-08-04 16:08:01,253] INFO | Opening socket connection to server /192.168.1.35:2181 | [main-SendThread()] org.apache.zookeeper.ClientCnxn$SendThread.startConnect(1058)
[VAMS][2014-08-04 16:08:01,256] INFO | Socket connection established to xiaohao-PC/192.168.1.35:2181, initiating session | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(947)
[VAMS][2014-08-04 16:08:01,316] DEBUG | Session establishment request sent on xiaohao-PC/192.168.1.35:2181 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(996)
[VAMS][2014-08-04 16:08:01,369] INFO | Session establishment complete on server xiaohao-PC/192.168.1.35:2181, sessionid = 0x1479fbe4cc60007, negotiated timeout = 30000 | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(736)
[VAMS][2014-08-04 16:08:01,372] DEBUG | Received event: WatchedEvent state:SyncConnected type:None path:null | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(351)
[VAMS][2014-08-04 16:08:01,372] INFO | zookeeper state changed (SyncConnected) | [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(449)
[VAMS][2014-08-04 16:08:01,372] DEBUG | Leaving process event | [main-EventThread] org.I0Itec.zkclient.ZkClient.process(395)
[VAMS][2014-08-04 16:08:01,372] DEBUG | State is SyncConnected | [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(638)
[VAMS][2014-08-04 16:08:01,375] INFO |  [DUBBO] Register: dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139680966, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:08:01,412] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,21474837182,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:01,444] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,21474837183,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:01,469] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,21474837184,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:01,508] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,21474837185,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139680966,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/providers/dubbo%253A%252F%252F192.168.1.35%253A20881%252Fcom.xiaohao.dubbodemo.service.IDubboDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboDemoService%2526methods%253DsayMorning%252CsayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139680966  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:01,509] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139680966, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:08:01,546] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,21474837186,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:01,585] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,21474837187,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:01,629] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,21474837188,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:01,633] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,21474837188,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: s{8589934605,8589934605,1407118039872,1407118039872,0,0,0,0,0,0,8589934605}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:01,636] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,21474837188,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:01,636] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139680966, urls: [empty://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139680966], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:08:01,643] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,652] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:01,659] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboRmiDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:08:01,672] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:08:01,672] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService to url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139681664, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:08:01,672] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboRmiDemoService url rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139681664 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=4776&registry=zookeeper&timestamp=1407139681663, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:08:01,680] INFO | Looking for RMI registry at port '20882' | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(394)
[VAMS][2014-08-04 16:08:02,689] INFO | Could not detect RMI registry - creating new one | [main] org.springframework.remoting.rmi.RmiServiceExporter.getRegistry(405)
[VAMS][2014-08-04 16:08:02,711] DEBUG | Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.alibaba.dubbo.common.bytecode.proxy0@239525] | [main] org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(117)
[VAMS][2014-08-04 16:08:02,714] INFO | Binding service 'com.xiaohao.dubbodemo.service.IDubboRmiDemoService' to RMI registry: RegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.35:20882](local),objID:[0:0:0, 0]]]] | [main] org.springframework.remoting.rmi.RmiServiceExporter.prepare(277)
[VAMS][2014-08-04 16:08:02,721] INFO |  [DUBBO] Register: rmi://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139681664, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:08:03,146] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,21474837189,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,178] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,21474837190,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,215] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,21474837191,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,253] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,21474837192,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139681664,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/providers/rmi%253A%252F%252F192.168.1.35%253A20882%252Fcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboRmiDemoService%2526methods%253DrmiSayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1407139681664  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,253] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139681664, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:08:03,290] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21474837193,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,328] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,21474837194,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,354] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21474837195,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,358] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,21474837195,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: s{21474836498,21474836498,1407134615956,1407134615956,0,0,0,0,0,0,21474836498}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,364] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,21474837195,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboRmiDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,368] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139681664, urls: [empty://192.168.1.35:20882/com.xiaohao.dubbodemo.service.IDubboRmiDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboRmiDemoService&methods=rmiSayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139681664], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:08:03,369] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboHessianDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:08:03,382] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2014-08-04 16:08:03,398] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:08:03,398] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService to url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683391, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:08:03,399] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboHessianDemoService url hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683391 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=4776&registry=zookeeper&timestamp=1407139683377, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:08:03,435] INFO |  [DUBBO] Register: hessian://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683391, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:08:03,452] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 19,1  replyHeader:: 19,21474837196,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,465] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 20,1  replyHeader:: 20,21474837197,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,490] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 21,1  replyHeader:: 21,21474837198,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,514] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,21474837199,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139683391,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/providers/hessian%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboHessianDemoService%2526methods%253DhasseinSayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139683391  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,514] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683391, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:08:03,527] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 23,1  replyHeader:: 23,21474837200,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,552] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 24,1  replyHeader:: 24,21474837201,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,589] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 25,1  replyHeader:: 25,21474837202,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,591] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 26,3  replyHeader:: 26,21474837202,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: s{21474836595,21474836595,1407135741343,1407135741343,0,0,0,0,0,0,21474836595}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,592] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 27,8  replyHeader:: 27,21474837202,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboHessianDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:03,592] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683391, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboHessianDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboHessianDemoService&methods=hasseinSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683391], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:08:03,593] INFO |  [DUBBO] The service ready on spring started. service: com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2014-08-04 16:08:03,666] DEBUG | Using org.apache.cxf.common.logging.Log4jLogger for logging. | [main] org.apache.cxf.common.logging.LogUtils.<clinit>(140)
[VAMS][2014-08-04 16:08:03,726] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2014-08-04 16:08:03,727] INFO |  [DUBBO] Export dubbo service com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService to url webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2014-08-04 16:08:03,727] INFO |  [DUBBO] Register dubbo service com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService url webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712 to registry registry://192.168.1.35:2181/com.alibaba.dubbo.registry.RegistryService?application=dubboDemo&backup=192.168.1.35:2182,192.168.1.35:2183&dubbo=2.5.3&pid=4776&registry=zookeeper&timestamp=1407139683600, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2014-08-04 16:08:03,772] INFO | Creating Service {http://service.dubbodemo.xiaohao.com/}IDubboWebServiceDemoService from class com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService | [main] org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(441)
[VAMS][2014-08-04 16:08:03,892] DEBUG | Created JAXBContext "jar:file:/D:/dev/repo/com/sun/xml/bind/jaxb-impl/2.1.13/jaxb-impl-2.1.13.jar!/com/sun/xml/bind/v2/runtime/JAXBContextImpl.class Build-Id: 2.1.13
Classes known to this context:
  [B
  boolean
  byte
  char
  com.sun.xml.bind.api.CompositeStructure
  double
  float
  int
  java.awt.Image
  java.io.File
  java.lang.Boolean
  java.lang.Byte
  java.lang.Character
  java.lang.Class
  java.lang.Double
  java.lang.Float
  java.lang.Integer
  java.lang.Long
  java.lang.Object
  java.lang.Short
  java.lang.String
  java.lang.Void
  java.math.BigDecimal
  java.math.BigInteger
  java.net.URI
  java.net.URL
  java.util.Calendar
  java.util.Date
  java.util.GregorianCalendar
  java.util.UUID
  javax.activation.DataHandler
  javax.xml.bind.JAXBElement
  javax.xml.datatype.Duration
  javax.xml.datatype.XMLGregorianCalendar
  javax.xml.namespace.QName
  javax.xml.transform.Source
  long
  short
  void
" with classes []. | [main] org.apache.cxf.jaxb.JAXBDataBinding.initialize(328)
[VAMS][2014-08-04 16:08:04,089] INFO | Setting the server's publish address to be /provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService | [main] org.apache.cxf.endpoint.ServerImpl.initDestination(94)
[VAMS][2014-08-04 16:08:04,096] DEBUG | Server is starting. | [main] org.apache.cxf.endpoint.ServerImpl.start(126)
[VAMS][2014-08-04 16:08:04,098] DEBUG | registering incoming observer: org.apache.cxf.transport.ChainInitiationObserver@71c5bc | [main] org.apache.cxf.transport.AbstractObservable.setMessageObserver(45)
[VAMS][2014-08-04 16:08:04,098] DEBUG | register the server to serverRegistry  | [main] org.apache.cxf.endpoint.ServerImpl.start(136)
[VAMS][2014-08-04 16:08:04,099] INFO |  [DUBBO] Register: webservice://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(302)
[VAMS][2014-08-04 16:08:04,144] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 28,1  replyHeader:: 28,21474837203,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:04,167] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 29,1  replyHeader:: 29,21474837204,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:04,209] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,21474837205,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:04,243] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 31,1  replyHeader:: 31,21474837206,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers/webservice%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%2526methods%253DwebServiceSayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139683712,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/providers/webservice%253A%252F%252F192.168.1.35%253A9898%252Fprovider%252Fcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%253Fanyhost%253Dtrue%2526application%253DdubboDemo%2526dubbo%253D2.5.3%2526group%253Dtest%2526interface%253Dcom.xiaohao.dubbodemo.service.IDubboWebServiceDemoService%2526methods%253DwebServiceSayHello%2526pid%253D4776%2526revision%253D1.0-SNAPSHOT%2526server%253Dservlet%2526side%253Dprovider%2526timestamp%253D1407139683712  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:04,243] INFO |  [DUBBO] Subscribe: provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(325)
[VAMS][2014-08-04 16:08:04,268] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 32,1  replyHeader:: 32,21474837207,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:04,306] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 33,1  replyHeader:: 33,21474837208,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:04,343] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,21474837209,-110  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::   | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:04,345] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 35,3  replyHeader:: 35,21474837209,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators,T  response:: s{21474837179,21474837179,1407139506313,1407139506313,0,0,0,0,0,0,21474837179}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:04,347] DEBUG | Reading reply sessionid:0x1479fbe4cc60007, packet:: clientPath:null serverPath:null finished:false header:: 36,8  replyHeader:: 36,21474837209,0  request:: '/dubbo/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService/configurators,T  response:: v{}  | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(836)
[VAMS][2014-08-04 16:08:04,348] INFO |  [DUBBO] Notify urls for subscribe url provider://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712, urls: [empty://192.168.1.35:9898/provider/com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService?anyhost=true&application=dubboDemo&category=configurators&check=false&dubbo=2.5.3&group=test&interface=com.xiaohao.dubbodemo.service.IDubboWebServiceDemoService&methods=webServiceSayHello&pid=4776&revision=1.0-SNAPSHOT&server=servlet&side=provider&timestamp=1407139683712], dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(422)
[VAMS][2014-08-04 16:08:04,349] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:08:04,350] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:08:04,350] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:08:04,350] DEBUG | Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 16:08:04,351] DEBUG | Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException; remaining name 'spring.liveBeansView.mbeanDomain' | [main] org.springframework.jndi.JndiLocatorSupport.lookup(101)
[VAMS][2014-08-04 16:08:04,351] DEBUG | Looking up JNDI object with name [spring.liveBeansView.mbeanDomain] | [main] org.springframework.jndi.JndiTemplate.lookup(150)
[VAMS][2014-08-04 16:08:04,351] DEBUG | JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: null. Returning null. | [main] org.springframework.jndi.JndiPropertySource.getProperty(87)
[VAMS][2014-08-04 16:08:04,352] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:08:04,352] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2014-08-04 16:08:04,353] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2014-08-04 16:08:04,353] DEBUG | Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(320)
[VAMS][2014-08-04 16:08:04,353] INFO | Root WebApplicationContext: initialization completed in 4002 ms | [main] org.springframework.web.context.ContextLoader.initWebApplicationContext(325)
[VAMS][2014-08-04 16:08:14,348] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:08:18,344] WARN |  [DUBBO] All clients has discontected from /192.168.1.35:20881. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1 | [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(197)
[VAMS][2014-08-04 16:08:18,346] INFO |  [DUBBO] disconected from /192.168.1.35:56686,url:dubbo://192.168.1.35:20881/com.xiaohao.dubbodemo.service.IDubboDemoService?anyhost=true&application=dubboDemo&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&group=test&heartbeat=60000&interface=com.xiaohao.dubbodemo.service.IDubboDemoService&methods=sayMorning,sayHello&pid=4776&revision=1.0-SNAPSHOT&side=provider&timestamp=1407139680966, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboServerHandler-192.168.1.35:20881-thread-2] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(130)
[VAMS][2014-08-04 16:08:24,348] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:08:34,349] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:08:44,350] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:08:54,351] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:04,354] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:14,354] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:24,355] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:34,356] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:44,357] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:09:54,358] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:04,358] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:14,359] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:24,361] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:34,362] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:44,362] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:10:54,363] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:04,364] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:14,364] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:24,365] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:34,365] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:44,367] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:11:54,368] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 1ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:12:04,368] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:12:14,370] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
[VAMS][2014-08-04 16:12:24,370] DEBUG | Got ping response for sessionid: 0x1479fbe4cc60007 after 0ms | [main-SendThread(xiaohao-PC:2181)] org.apache.zookeeper.ClientCnxn$SendThread.readResponse(756)
